{
  "apiVersion": "kubeflow.org/v1alpha1",
  "kind": "Notebook",
  "metadata": {
    "annotations": {
      "accessLocalFs": "false",
      "disks": "null",
      "image": "tensorflow-1.10.1-notebook-cpu:v0.3.0",
      "namespace": "resnet50",
      "notebookGid": "-1",
      "notebookPVCMount": "/home/jovyan",
      "notebookUid": "-1",
      "owner": "foo",
      "registry": "gcr.io",
      "repoName": "kubeflow-images-public",
      "servicePort": "80",
      "serviceType": "ClusterIP",
      "targetPort": 8888,
      "useJupyterLabAsDefault": true,
      "ttlSecondsAfterFinished": 300
    },
    "name": "notebook",
    "namespace": "resnet50"
  },
  "spec": {
    "template": {
      "metadata": {
        "name": "notebook",
        "namespace": "resnet50"
      },
      "spec": {
        "containers": [
          {
            "args": [
              "start-singleuser.sh",
              "--ip='0.0.0.0'",
              "--port=8888",
              "--allow-root"
            ],
            "env": [],
            "image": "gcr.io/kubeflow-images-public/tensorflow-1.10.1-notebook-cpu:v0.3.0",
            "imagePullPolicy": "IfNotPresent",
            "name": "notebook",
            "ports": [
              {
                "containerPort": 8888,
                "name": "notebook-port",
                "protocol": "TCP"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "500m",
                "memory": "1Gi"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/home/jovyan",
                "name": "volume-kam"
              }
            ],
            "workingDir": "/home/jovyan"
          }
        ],
        "ttlSecondsAfterFinished": 300,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {
          "fsGroup": 100,
          "runAsUser": 1000
        },
        "serviceAccount": "jupyter-notebook",
        "serviceAccountName": "jupyter-notebook",
        "volumes": [
          {
            "name": "volume-kam",
            "persistentVolumeClaim": {
              "claimName": "claim-kam"
            }
          }
        ]
      }
    }
  }
}
