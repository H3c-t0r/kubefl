swagger: "2.0"
info:
  description: "Deployment API."
  version: "1.0.0"
  title: "Kubeflow Deployment"
  termsOfService: "https://www.kubeflow.org/"
  contact:
    email: "kubeflow-engineering@google.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/kfctl/v1"
tags:
- name: "deployment"
  description: "A kubeflow deployment on GCP"
  externalDocs:
    description: "Find out more"
    url: "https://www.kubeflow.org/docs/started/getting-started-gke/"
schemes:
- "https"
paths:
  /projects/{project}/configs:
    post:
      tags:
        - "config"
      summary: "Create a new kubeflow config entry on source repo"
      security:
        - BearerToken: []
      operationId: "createConfig"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          description: "gcp project string id"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Config needs to be created"
          required: true
          schema:
            $ref: "#/definitions/KfConfig"
      responses:
        405:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ErrorMessage"
    get:
      tags:
        - "config"
      summary: "List kubeflow config entries in target project"
      security:
        - BearerToken: []
      operationId: "listConfigs"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          description: "gcp project string id"
          required: true
          type: "string"
      responses:
        200:
          description: "Kubeflow config entries"
          schema:
            $ref: "#/definitions/KfConfigEntries"
        405:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ErrorMessage"
  /projects/{project}/configs/{config}/version/{version}/file:
    get:
      tags:
        - "config"
      summary: "Get kubeflow config entry file"
      description: "internal use only, alpha stage"
      security:
        - BearerToken: []
      operationId: "getConfigFile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          description: "gcp project string id"
          required: true
          type: "string"
        - in: "path"
          name: "config"
          description: "config entry name"
          required: true
          type: "string"
        - in: "path"
          name: "version"
          description: "config entry kubeflow version"
          required: true
          type: "string"
        - in: "query"
          name: "filepath"
          description: "file relative path"
          required: true
          type: "string"
      responses:
        200:
          description: "Kubeflow config entries"
          schema:
            $ref: "#/definitions/KfConfigFile"
        404:
          description: "Entry not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
        405:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ErrorMessage"
    put:
      tags:
        - "config"
      summary: "Update kubeflow config entry file"
      description: "internal use only, alpha stage"
      security:
        - BearerToken: []
      operationId: "putConfigFile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          description: "gcp project string id"
          required: true
          type: "string"
        - in: "path"
          name: "config"
          description: "config entry name"
          required: true
          type: "string"
        - in: "path"
          name: "version"
          description: "config entry kubeflow version"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "file object to update"
          required: true
          schema:
            $ref: "#/definitions/KfConfigFile"
      responses:
        405:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ErrorMessage"
  /projects/{project}/deployments:
    post:
      tags:
        - "deployment"
      summary: "Create a new kubeflow deployment on GCP"
      security:
        - BearerToken: []
      operationId: "createDeployment"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          description: "gcp project string id"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Deployment name"
          required: true
          schema:
            $ref: "#/definitions/KfDeployment"
      responses:
        405:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ErrorMessage"
  /projects/{project}/deployments/{deployment}:
    get:
      tags:
        - "deployment"
      description: "Get kubeflow deployment status"
      security:
        - BearerToken: []
      operationId: "getDeployment"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          description: "gcp project string id"
          required: true
          type: "string"
        - in: "path"
          name: "deployment"
          description: "Deployment name"
          required: true
          type: "string"
      responses:
        200:
          description: "deployment status"
          schema:
            $ref: "#/definitions/KfDeployment"
        405:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ErrorMessage"
definitions:
  BasicAuthIngress:
    type: "object"
    properties:
      username:
        type: "string"
      passwordHash:
        type: "string"
  DeploymentMetadata:
    type: "object"
    properties:
      name:
        type: "string"
      namespace:
        type: "string"
      version:
        type: "string"
      email:
        type: "string"
      zone:
        type: "string"
  KfDeployment:
    type: "object"
    properties:
      metadata:
        $ref: "#/definitions/DeploymentMetadata"
      spec:
        type: "object"
        properties:
          sAClientId:
            type: "string"
      status:
        type: "string"
  ErrorMessage:
    type: "object"
    properties:
      errorMessage:
        type: "string"
  IapIngress:
    type: "object"
    properties:
      clientId:
        type: "string"
      clientSecret:
        type: "string"
  KfConfig:
    type: "object"
    properties:
      metadata:
        $ref: "#/definitions/DeploymentMetadata"
      spec:
        type: "object"
        properties:
          extraComponents:
            type: "array"
            items:
              type: "string"
          parameters:
            type: "array"
            items:
              $ref: "#/definitions/Parameter"
          iapIngress:
            $ref: "#/definitions/IapIngress"
          basicAuthIngress:
            $ref: "#/definitions/BasicAuthIngress"
          storageOption:
            $ref: "#/definitions/StorageOption"
      status:
        type: "string"
  KfConfigEntries:
    type: "object"
    properties:
      configs:
        type: "array"
        items:
          $ref: "#/definitions/DeploymentMetadata"
  KfConfigFile:
    type: "object"
    properties:
      file:
        type: "string"
        format: "byte"
      filepath:
        type: "string"
  Parameter:
    type: "object"
    properties:
      component:
        type: "string"
      name:
        type: "string"
      value:
        type: "string"
  StorageOption:
    type: "object"
    properties:
      createPersistentStorage:
        type: "boolean"
securityDefinitions:
  BearerToken:
    description: "Bearer Token authentication"
    type: apiKey
    name: "authorization"
    in: "header"
