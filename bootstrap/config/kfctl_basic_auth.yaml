# Config entry used for deploying on GCP with basic auth enabled
# Load this file as object (KsonnetSpec)[https://github.com/kubeflow/kubeflow/blob/master/bootstrap/pkg/apis/apps/ksonnet/v1alpha1/application_types.go#L201]
# All TODO fields need to be changed following user's input before apply
# TODO change repo on the fly: set it to local tmp dir containing kubeflow registry
repo: /path/to/local/tmp/containing/kubeflow
packages:
  - argo
  - application
  - common
  - examples
  - gcp
  - jupyter
  - katib
  - metacontroller
  - modeldb
  - mpi-job
  - openvino
  - pipeline
  - profiles
  - pytorch-job
  - seldon
  - tensorboard
  - tf-serving
  - tf-training
components:
  - ambassador
  - application
  - argo
  - basic-auth
  - basic-auth-ingress
  - centraldashboard
  - cert-manager
  - cloud-endpoints
  - jupyter
  - jupyter-web-app
  - katib
  - metacontroller
  - notebooks
  - notebook-controller
  - openvino
  - pipeline
  - profiles
  - pytorch-operator
  - tensorboard
  - tf-job-operator
protoParams:
  cert-manager:
    - name: acmeEmail
      # TODO change value on the fly: use your email for ssl cert
      value: johnDoe@acme.com
  basic-auth-ingress:
    - name: ipName
      # TODO change value on the fly: value of ipName need to match resource name in deployment entry.
      value: ipName
    - name: hostname
      # TODO change value on the fly: replace with user-provide parameters. This need to be fully qualified domain name to use with ingress.
      value: <deployName>.endpoints.<Project>.cloud.goog
compParams:
  application:
    - name: components
      value: <list-of-components>
  cloud-endpoints:
    - name: secretName
      value: admin-gcp-sa
  jupyter:
    - name: platform
      value: gke
  ambassador:
    - name: ambassadorServiceType
      value: NodePort
  pipeline:
    - name: mysqlPd
      value: <deployName>-storage-metadata-store
    - name: minioPd
      value: <deployName>-storage-artifact-store
platform: gcp
