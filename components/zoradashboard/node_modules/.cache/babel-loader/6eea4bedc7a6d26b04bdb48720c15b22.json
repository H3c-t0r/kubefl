{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/foundation-buttons.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Button, ButtonGroup, ClickAwayListener, Container, Grid, Grow, Link, MenuItem, MenuList, Paper, Popper, Typography } from '@material-ui/core';\nimport { ArrowDropDown as ArrowDropDownIcon } from '@material-ui/icons';\nimport { DemoPreview } from '../components/demo-preview';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge'];\nexport const FoundationButtons = () => {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Foundation: Buttons | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        flexGrow: 1,\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          sx: {\n            mb: 6\n          },\n          variant: \"h4\",\n          children: \"Buttons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gap: 5,\n            gridAutoFlow: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(DemoPreview, {\n            title: \"Buttons\",\n            description: \"Carpatin elements are themed Material-UI components.\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  size: \"large\",\n                  variant: \"contained\",\n                  children: \"Contained\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  size: \"large\",\n                  variant: \"outlined\",\n                  children: \"Outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  size: \"large\",\n                  variant: \"text\",\n                  children: \"Text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  size: \"large\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 32\n                  }, this),\n                  variant: \"contained\",\n                  children: \"Icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DemoPreview, {\n            title: \"Button Group\",\n            children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n              ref: anchorRef,\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleClick,\n                children: options[selectedIndex]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: handleToggle,\n                children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Popper, {\n              open: open,\n              anchorEl: anchorRef.current,\n              transition: true,\n              disablePortal: true,\n              children: ({\n                TransitionProps,\n                placement\n              }) => /*#__PURE__*/_jsxDEV(Grow, { ...TransitionProps,\n                style: {\n                  transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n                },\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n                    onClickAway: handleClose,\n                    children: /*#__PURE__*/_jsxDEV(MenuList, {\n                      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: index === 2,\n                        selected: index === selectedIndex,\n                        onClick: event => handleMenuItemClick(event, index),\n                        children: option\n                      }, option, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DemoPreview, {\n            title: \"Link\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              color: \"primary\",\n              href: \"#\",\n              underline: \"none\",\n              variant: \"body1\",\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FoundationButtons, \"5lvMKWCflevmnS3YIzHLXqAva34=\");\n\n_c = FoundationButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoundationButtons\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/foundation-buttons.js"],"names":["useState","useEffect","useRef","Helmet","Box","Button","ButtonGroup","ClickAwayListener","Container","Grid","Grow","Link","MenuItem","MenuList","Paper","Popper","Typography","ArrowDropDown","ArrowDropDownIcon","DemoPreview","Plus","PlusIcon","gtm","options","FoundationButtons","anchorRef","open","setOpen","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","push","backgroundColor","flexGrow","py","mb","display","gap","gridAutoFlow","TransitionProps","placement","transformOrigin","map","option"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  ClickAwayListener,\n  Container,\n  Grid,\n  Grow,\n  Link,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n  Typography\n} from '@material-ui/core';\nimport { ArrowDropDown as ArrowDropDownIcon } from '@material-ui/icons';\nimport { DemoPreview } from '../components/demo-preview';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport gtm from '../lib/gtm';\n\nconst options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge'];\n\nexport const FoundationButtons = () => {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current\n      && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Foundation: Buttons | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1,\n          py: 4\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 6 }}\n            variant=\"h4\"\n          >\n            Buttons\n          </Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              gap: 5,\n              gridAutoFlow: 'row'\n            }}\n          >\n            <DemoPreview\n              title=\"Buttons\"\n              description=\"Carpatin elements are themed Material-UI components.\"\n            >\n              <Grid\n                container\n                spacing={2}\n              >\n                <Grid item>\n                  <Button\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Contained\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"outlined\"\n                  >\n                    Outlined\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"text\"\n                  >\n                    Text\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    color=\"primary\"\n                    size=\"large\"\n                    startIcon={<PlusIcon />}\n                    variant=\"contained\"\n                  >\n                    Icon\n                  </Button>\n                </Grid>\n              </Grid>\n            </DemoPreview>\n            <DemoPreview title=\"Button Group\">\n              <ButtonGroup\n                ref={anchorRef}\n                variant=\"contained\"\n              >\n                <Button onClick={handleClick}>\n                  {options[selectedIndex]}\n                </Button>\n                <Button\n                  size=\"small\"\n                  onClick={handleToggle}\n                >\n                  <ArrowDropDownIcon />\n                </Button>\n              </ButtonGroup>\n              <Popper\n                open={open}\n                anchorEl={anchorRef.current}\n                transition\n                disablePortal\n              >\n                {({ TransitionProps, placement }) => (\n                  <Grow\n                    {...TransitionProps}\n                    style={{\n                      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n                    }}\n                  >\n                    <Paper>\n                      <ClickAwayListener onClickAway={handleClose}>\n                        <MenuList>\n                          {options.map((option, index) => (\n                            <MenuItem\n                              key={option}\n                              disabled={index === 2}\n                              selected={index === selectedIndex}\n                              onClick={(event) => handleMenuItemClick(event, index)}\n                            >\n                              {option}\n                            </MenuItem>\n                          ))}\n                        </MenuList>\n                      </ClickAwayListener>\n                    </Paper>\n                  </Grow>\n                )}\n              </Popper>\n            </DemoPreview>\n            <DemoPreview title=\"Link\">\n              <Link\n                color=\"primary\"\n                href=\"#\"\n                underline=\"none\"\n                variant=\"body1\"\n              >\n                Link\n              </Link>\n            </DemoPreview>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}