{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/dashboard-navbar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { AppBar, Box, Button, Divider, IconButton, Toolbar } from '@material-ui/core';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport { useSettings } from '../contexts/settings-context';\nimport { Moon as MoonIcon } from '../icons/moon';\nimport { Sun as SunIcon } from '../icons/sun';\nimport { AccountPopover } from './account-popover';\nimport { OrganizationPopover } from './organization-popover';\nimport { Logo } from './logo';\nimport { DashboardNavbarMenu } from './dashboard-navbar-menu';\nimport { NotificationsPopover } from './notifications-popover';\nimport { LanguagePopover } from './laguage-popover';\nimport { useAuth } from '../hooks/use-auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst organizations = [{\n  id: '6039124832',\n  name: 'ACME LTD.'\n}, {\n  id: '3828312374',\n  name: 'Division LTD.'\n}];\nexport const DashboardNavbar = () => {\n  _s();\n\n  const mdDown = useMediaQuery(theme => theme.breakpoints.down('md'));\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const {\n    settings,\n    saveSettings\n  } = useSettings();\n  const [openMenu, setOpenMenu] = useState(false);\n  const [darkMode, setDarkMode] = useState(settings.theme === 'dark');\n  const [rtlDirection, setRtlDirection] = useState(settings.direction === 'rtl');\n  const [currentOrganization, setCurrentOrganization] = useState(organizations[0]);\n\n  const handleLanguageChange = language => {\n    i18n.changeLanguage(language);\n    saveSettings({ ...settings,\n      language\n    });\n    toast.success(t('Language changed'));\n  };\n\n  const handleSwitchTheme = () => {\n    saveSettings({ ...settings,\n      theme: settings.theme === 'light' ? 'dark' : 'light'\n    });\n    setDarkMode(settings.theme === 'light');\n  };\n\n  const handleSwitchDirection = () => {\n    saveSettings({ ...settings,\n      direction: settings.direction === 'ltr' ? 'rtl' : 'ltr'\n    });\n    setRtlDirection(settings.direction === 'rtl');\n  };\n\n  const handleOrganizationChange = organizationId => {\n    const newOrganization = organizations.find(organization => organization.id === organizationId);\n\n    if (!newOrganization) {\n      return;\n    }\n\n    setCurrentOrganization(newOrganization);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    elevation: 0,\n    sx: {\n      backgroundColor: '#1e212a'\n    },\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      disableGutters: true,\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        minHeight: 64,\n        px: 3,\n        py: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: RouterLink,\n        to: \"/\",\n        sx: {\n          alignItems: 'center',\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Logo, {\n          emblemOnly: true,\n          variant: \"light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        flexItem: true,\n        orientation: \"vertical\",\n        sx: {\n          borderColor: 'rgba(255,255,255,0.1)',\n          mx: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrganizationPopover, {\n        currentOrganization: currentOrganization,\n        onOrganizationChange: handleOrganizationChange,\n        organizations: organizations,\n        sx: {\n          display: {\n            md: 'flex',\n            xs: 'none'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DashboardNavbarMenu, {\n        onClose: () => setOpenMenu(false),\n        open: mdDown && openMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        endIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n          fontSize: \"small\",\n          sx: {\n            ml: 2,\n            transition: 'transform 250ms',\n            transform: openMenu ? 'rotate(180deg)' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this),\n        onClick: () => setOpenMenu(true),\n        sx: {\n          color: 'primary.contrastText',\n          display: {\n            md: 'none',\n            xs: 'flex'\n          }\n        },\n        variant: \"text\",\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LanguagePopover, {\n        language: i18n.language,\n        onLanguageChange: handleLanguageChange,\n        sx: {\n          display: {\n            md: 'inline-flex',\n            xs: 'none'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: handleSwitchTheme,\n        sx: {\n          mx: 2,\n          display: {\n            md: 'inline-flex',\n            xs: 'none'\n          }\n        },\n        children: darkMode ? /*#__PURE__*/_jsxDEV(SunIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(MoonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotificationsPopover, {\n        sx: {\n          mr: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccountPopover, {\n        currentOrganization: currentOrganization,\n        darkMode: darkMode,\n        onLanguageChange: handleLanguageChange,\n        onOrganizationChange: handleOrganizationChange,\n        onSwitchDirection: handleSwitchDirection,\n        onSwitchTheme: handleSwitchTheme,\n        organizations: organizations,\n        rtlDirection: rtlDirection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardNavbar, \"O+JrPI9I6g0wvRz/D4cXY2mRhmo=\", false, function () {\n  return [useMediaQuery, useTranslation, useSettings];\n});\n\n_c = DashboardNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbar\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/dashboard-navbar.js"],"names":["useState","Link","RouterLink","useTranslation","toast","useMediaQuery","AppBar","Box","Button","Divider","IconButton","Toolbar","ChevronDown","ChevronDownIcon","useSettings","Moon","MoonIcon","Sun","SunIcon","AccountPopover","OrganizationPopover","Logo","DashboardNavbarMenu","NotificationsPopover","LanguagePopover","useAuth","organizations","id","name","DashboardNavbar","mdDown","theme","breakpoints","down","i18n","t","settings","saveSettings","openMenu","setOpenMenu","darkMode","setDarkMode","rtlDirection","setRtlDirection","direction","currentOrganization","setCurrentOrganization","handleLanguageChange","language","changeLanguage","success","handleSwitchTheme","handleSwitchDirection","handleOrganizationChange","organizationId","newOrganization","find","organization","backgroundColor","alignItems","display","minHeight","px","py","justifyContent","borderColor","mx","md","xs","ml","transition","transform","color","flexGrow","mr"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { AppBar, Box, Button, Divider, IconButton, Toolbar } from '@material-ui/core';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport { useSettings } from '../contexts/settings-context';\nimport { Moon as MoonIcon } from '../icons/moon';\nimport { Sun as SunIcon } from '../icons/sun';\nimport { AccountPopover } from './account-popover';\nimport { OrganizationPopover } from './organization-popover';\nimport { Logo } from './logo';\nimport { DashboardNavbarMenu } from './dashboard-navbar-menu';\nimport { NotificationsPopover } from './notifications-popover';\nimport { LanguagePopover } from './laguage-popover';\n\nimport { useAuth } from '../hooks/use-auth';\n\n\n\nconst organizations = [\n  {\n    id: '6039124832',\n    name: 'ACME LTD.'\n  },\n  {\n    id: '3828312374',\n    name: 'Division LTD.'\n  }\n];\n\nexport const DashboardNavbar = () => {\n  const mdDown = useMediaQuery((theme) => theme.breakpoints.down('md'));\n  const { i18n, t } = useTranslation();\n  const { settings, saveSettings } = useSettings();\n  const [openMenu, setOpenMenu] = useState(false);\n  const [darkMode, setDarkMode] = useState(settings.theme === 'dark');\n  const [rtlDirection, setRtlDirection] = useState(settings.direction === 'rtl');\n  const [currentOrganization, setCurrentOrganization] = useState(organizations[0]);\n\n  const handleLanguageChange = (language) => {\n    i18n.changeLanguage(language);\n    saveSettings({\n      ...settings,\n      language\n    });\n    toast.success(t('Language changed'));\n  };\n\n  const handleSwitchTheme = () => {\n    saveSettings({\n      ...settings,\n      theme: settings.theme === 'light' ? 'dark' : 'light'\n    });\n\n    setDarkMode(settings.theme === 'light');\n  };\n\n  const handleSwitchDirection = () => {\n    saveSettings({\n      ...settings,\n      direction: settings.direction === 'ltr' ? 'rtl' : 'ltr'\n    });\n\n    setRtlDirection(settings.direction === 'rtl');\n  };\n\n  const handleOrganizationChange = (organizationId) => {\n    const newOrganization = organizations.find((organization) => organization.id\n      === organizationId);\n\n    if (!newOrganization) {\n      return;\n    }\n\n    setCurrentOrganization(newOrganization);\n  };\n\n  return (\n    <AppBar\n      elevation={0}\n      sx={{ backgroundColor: '#1e212a' }}\n    >\n      <Toolbar\n        disableGutters\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          minHeight: 64,\n          px: 3,\n          py: 1\n        }}\n      >\n        <Box\n          component={RouterLink}\n          to=\"/\"\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n        >\n          <Logo\n            emblemOnly\n            variant=\"light\"\n          />\n        </Box>\n        <Divider\n          flexItem\n          orientation=\"vertical\"\n          sx={{\n            borderColor: 'rgba(255,255,255,0.1)',\n            mx: 3\n          }}\n        />\n        <OrganizationPopover\n          currentOrganization={currentOrganization}\n          onOrganizationChange={handleOrganizationChange}\n          organizations={organizations}\n          sx={{\n            display: {\n              md: 'flex',\n              xs: 'none'\n            }\n          }}\n        />\n        <DashboardNavbarMenu\n          onClose={() => setOpenMenu(false)}\n          open={mdDown && openMenu}\n        />\n        <Button\n          endIcon={(\n            <ChevronDownIcon\n              fontSize=\"small\"\n              sx={{\n                ml: 2,\n                transition: 'transform 250ms',\n                transform: openMenu ? 'rotate(180deg)' : 'none'\n              }}\n            />\n          )}\n          onClick={() => setOpenMenu(true)}\n          sx={{\n            color: 'primary.contrastText',\n            display: {\n              md: 'none',\n              xs: 'flex'\n            }\n          }}\n          variant=\"text\"\n        >\n          Menu\n        </Button>\n        <Box sx={{ flexGrow: 1 }} />\n        <LanguagePopover\n          language={i18n.language}\n          onLanguageChange={handleLanguageChange}\n          sx={{\n            display: {\n              md: 'inline-flex',\n              xs: 'none'\n            }\n          }}\n        />\n        <IconButton\n          color=\"inherit\"\n          onClick={handleSwitchTheme}\n          sx={{\n            mx: 2,\n            display: {\n              md: 'inline-flex',\n              xs: 'none'\n            }\n          }}\n        >\n          {darkMode\n            ? <SunIcon />\n            : <MoonIcon />}\n        </IconButton>\n        <NotificationsPopover sx={{ mr: 2 }} />\n        <AccountPopover\n          currentOrganization={currentOrganization}\n          darkMode={darkMode}\n          onLanguageChange={handleLanguageChange}\n          onOrganizationChange={handleOrganizationChange}\n          onSwitchDirection={handleSwitchDirection}\n          onSwitchTheme={handleSwitchTheme}\n          organizations={organizations}\n          rtlDirection={rtlDirection}\n        />\n      </Toolbar>\n    </AppBar>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}