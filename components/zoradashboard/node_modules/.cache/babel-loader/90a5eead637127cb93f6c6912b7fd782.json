{"ast":null,"code":"export const equalOperator = {\n  label: 'equal',\n  typesAccepted: ['number', 'string'],\n  value: 'equal'\n};\nexport const notEqualOperator = {\n  label: 'not equal',\n  typesAccepted: ['number', 'string'],\n  value: 'notEqual'\n};\nexport const containsOperator = {\n  label: 'contains',\n  typesAccepted: ['string'],\n  value: 'contains'\n};\nexport const notContainsOperator = {\n  label: 'not contains',\n  typesAccepted: ['string'],\n  value: 'notContains'\n};\nexport const startsWithOperator = {\n  label: 'starts with',\n  typesAccepted: ['string'],\n  value: 'startsWith'\n};\nexport const endsWithOperator = {\n  label: 'ends with',\n  typesAccepted: ['string'],\n  value: 'endsWith'\n};\nexport const greaterThanOperator = {\n  label: 'greater than',\n  typesAccepted: ['number'],\n  value: 'greaterThan'\n};\nexport const lessThanOperator = {\n  label: 'less than',\n  typesAccepted: ['number'],\n  value: 'lessThan'\n};\nexport const isAfterOperator = {\n  label: 'is after',\n  typesAccepted: ['date'],\n  value: 'isAfter'\n};\nexport const isBeforeOperator = {\n  label: 'is before',\n  typesAccepted: ['date'],\n  value: 'isBefore'\n};\nexport const isBlankOperator = {\n  label: 'is blank',\n  typesAccepted: ['blank'],\n  value: 'isBlank'\n};\nexport const isPresentOperator = {\n  label: 'is present',\n  typesAccepted: ['blank'],\n  value: 'isPresent'\n};","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/utils/filter-operators.js"],"names":["equalOperator","label","typesAccepted","value","notEqualOperator","containsOperator","notContainsOperator","startsWithOperator","endsWithOperator","greaterThanOperator","lessThanOperator","isAfterOperator","isBeforeOperator","isBlankOperator","isPresentOperator"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG;AAC3BC,EAAAA,KAAK,EAAE,OADoB;AAE3BC,EAAAA,aAAa,EAAE,CAAC,QAAD,EAAW,QAAX,CAFY;AAG3BC,EAAAA,KAAK,EAAE;AAHoB,CAAtB;AAMP,OAAO,MAAMC,gBAAgB,GAAG;AAC9BH,EAAAA,KAAK,EAAE,WADuB;AAE9BC,EAAAA,aAAa,EAAE,CAAC,QAAD,EAAW,QAAX,CAFe;AAG9BC,EAAAA,KAAK,EAAE;AAHuB,CAAzB;AAMP,OAAO,MAAME,gBAAgB,GAAG;AAC9BJ,EAAAA,KAAK,EAAE,UADuB;AAE9BC,EAAAA,aAAa,EAAE,CAAC,QAAD,CAFe;AAG9BC,EAAAA,KAAK,EAAE;AAHuB,CAAzB;AAMP,OAAO,MAAMG,mBAAmB,GAAG;AACjCL,EAAAA,KAAK,EAAE,cAD0B;AAEjCC,EAAAA,aAAa,EAAE,CAAC,QAAD,CAFkB;AAGjCC,EAAAA,KAAK,EAAE;AAH0B,CAA5B;AAMP,OAAO,MAAMI,kBAAkB,GAAG;AAChCN,EAAAA,KAAK,EAAE,aADyB;AAEhCC,EAAAA,aAAa,EAAE,CAAC,QAAD,CAFiB;AAGhCC,EAAAA,KAAK,EAAE;AAHyB,CAA3B;AAMP,OAAO,MAAMK,gBAAgB,GAAG;AAC9BP,EAAAA,KAAK,EAAE,WADuB;AAE9BC,EAAAA,aAAa,EAAE,CAAC,QAAD,CAFe;AAG9BC,EAAAA,KAAK,EAAE;AAHuB,CAAzB;AAMP,OAAO,MAAMM,mBAAmB,GAAG;AACjCR,EAAAA,KAAK,EAAE,cAD0B;AAEjCC,EAAAA,aAAa,EAAE,CAAC,QAAD,CAFkB;AAGjCC,EAAAA,KAAK,EAAE;AAH0B,CAA5B;AAMP,OAAO,MAAMO,gBAAgB,GAAG;AAC9BT,EAAAA,KAAK,EAAE,WADuB;AAE9BC,EAAAA,aAAa,EAAE,CAAC,QAAD,CAFe;AAG9BC,EAAAA,KAAK,EAAE;AAHuB,CAAzB;AAMP,OAAO,MAAMQ,eAAe,GAAG;AAC7BV,EAAAA,KAAK,EAAE,UADsB;AAE7BC,EAAAA,aAAa,EAAE,CAAC,MAAD,CAFc;AAG7BC,EAAAA,KAAK,EAAE;AAHsB,CAAxB;AAMP,OAAO,MAAMS,gBAAgB,GAAG;AAC9BX,EAAAA,KAAK,EAAE,WADuB;AAE9BC,EAAAA,aAAa,EAAE,CAAC,MAAD,CAFe;AAG9BC,EAAAA,KAAK,EAAE;AAHuB,CAAzB;AAMP,OAAO,MAAMU,eAAe,GAAG;AAC7BZ,EAAAA,KAAK,EAAE,UADsB;AAE7BC,EAAAA,aAAa,EAAE,CAAC,OAAD,CAFc;AAG7BC,EAAAA,KAAK,EAAE;AAHsB,CAAxB;AAMP,OAAO,MAAMW,iBAAiB,GAAG;AAC/Bb,EAAAA,KAAK,EAAE,YADwB;AAE/BC,EAAAA,aAAa,EAAE,CAAC,OAAD,CAFgB;AAG/BC,EAAAA,KAAK,EAAE;AAHwB,CAA1B","sourcesContent":["export const equalOperator = {\n  label: 'equal',\n  typesAccepted: ['number', 'string'],\n  value: 'equal'\n};\n\nexport const notEqualOperator = {\n  label: 'not equal',\n  typesAccepted: ['number', 'string'],\n  value: 'notEqual'\n};\n\nexport const containsOperator = {\n  label: 'contains',\n  typesAccepted: ['string'],\n  value: 'contains'\n};\n\nexport const notContainsOperator = {\n  label: 'not contains',\n  typesAccepted: ['string'],\n  value: 'notContains'\n};\n\nexport const startsWithOperator = {\n  label: 'starts with',\n  typesAccepted: ['string'],\n  value: 'startsWith'\n};\n\nexport const endsWithOperator = {\n  label: 'ends with',\n  typesAccepted: ['string'],\n  value: 'endsWith'\n};\n\nexport const greaterThanOperator = {\n  label: 'greater than',\n  typesAccepted: ['number'],\n  value: 'greaterThan'\n};\n\nexport const lessThanOperator = {\n  label: 'less than',\n  typesAccepted: ['number'],\n  value: 'lessThan'\n};\n\nexport const isAfterOperator = {\n  label: 'is after',\n  typesAccepted: ['date'],\n  value: 'isAfter'\n};\n\nexport const isBeforeOperator = {\n  label: 'is before',\n  typesAccepted: ['date'],\n  value: 'isBefore'\n};\n\nexport const isBlankOperator = {\n  label: 'is blank',\n  typesAccepted: ['blank'],\n  value: 'isBlank'\n};\n\nexport const isPresentOperator = {\n  label: 'is present',\n  typesAccepted: ['blank'],\n  value: 'isPresent'\n};\n"]},"metadata":{},"sourceType":"module"}