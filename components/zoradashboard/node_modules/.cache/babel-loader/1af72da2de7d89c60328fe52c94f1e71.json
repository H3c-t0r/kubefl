{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/account-notifications.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, Card, CardHeader, Divider, FormControlLabel, List, ListItem, ListItemSecondaryAction, ListItemText, Switch, Typography } from '@material-ui/core';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst notifications = [{\n  id: '1',\n  name: 'newOrders',\n  label: 'New Orders'\n}, {\n  id: '2',\n  name: 'newCompanySignups',\n  label: 'New Company Signups'\n}, {\n  id: '3',\n  name: 'publishErrors',\n  label: 'Publish Errors'\n}];\nexport const AccountNotifications = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      newCompanySignups: true,\n      newOrders: false,\n      publishErrors: false,\n      unsubscribeAll: false\n    },\n    validationSchema: Yup.object().shape({\n      newCompanySignups: Yup.boolean(),\n      newOrders: Yup.boolean(),\n      publishErrors: Yup.boolean(),\n      unsubscribeAll: Yup.boolean()\n    }),\n    onSubmit: () => {}\n  });\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Account: Notifications | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        subheader: \"Manage your alert notifications\",\n        title: \"Email Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: notification.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: formik.values[notification.name],\n                color: \"primary\",\n                name: notification.name,\n                onChange: formik.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), notifications.length > index + 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 52\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'flex-start',\n        display: 'flex',\n        flexDirection: {\n          sm: 'row',\n          xs: 'column'\n        },\n        pt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          sx: {\n            mb: 1\n          },\n          variant: \"h6\",\n          children: \"Unsubscribe Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: \"Keep in mind that security notifications cannot be turned off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: formik.values.unsubscribeAll,\n          color: \"primary\",\n          name: \"unsubscribeAll\",\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this),\n        label: \"Unsubscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountNotifications, \"417qbkehI1A4yl4DsCLGX2CxmUo=\", false, function () {\n  return [useFormik];\n});\n\n_c = AccountNotifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountNotifications\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/account-notifications.js"],"names":["Fragment","useEffect","Helmet","useFormik","Yup","Box","Card","CardHeader","Divider","FormControlLabel","List","ListItem","ListItemSecondaryAction","ListItemText","Switch","Typography","gtm","notifications","id","name","label","AccountNotifications","formik","initialValues","newCompanySignups","newOrders","publishErrors","unsubscribeAll","validationSchema","object","shape","boolean","onSubmit","push","event","map","notification","index","values","handleChange","length","alignItems","display","flexDirection","sm","xs","pt","mb","flexGrow"],"mappings":"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","sourcesContent":["import { Fragment, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n  Typography\n} from '@material-ui/core';\nimport gtm from '../lib/gtm';\n\nconst notifications = [\n  {\n    id: '1',\n    name: 'newOrders',\n    label: 'New Orders'\n  },\n  {\n    id: '2',\n    name: 'newCompanySignups',\n    label: 'New Company Signups'\n  },\n  {\n    id: '3',\n    name: 'publishErrors',\n    label: 'Publish Errors'\n  }\n];\n\nexport const AccountNotifications = () => {\n  const formik = useFormik({\n    initialValues: {\n      newCompanySignups: true,\n      newOrders: false,\n      publishErrors: false,\n      unsubscribeAll: false\n    },\n    validationSchema: Yup.object().shape({\n      newCompanySignups: Yup.boolean(),\n      newOrders: Yup.boolean(),\n      publishErrors: Yup.boolean(),\n      unsubscribeAll: Yup.boolean()\n    }),\n    onSubmit: () => { }\n  });\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Account: Notifications | Carpatin Dashboard</title>\n      </Helmet>\n      <Card variant=\"outlined\">\n        <CardHeader\n          subheader=\"Manage your alert notifications\"\n          title=\"Email Notifications\"\n        />\n        <Divider />\n        <List>\n          {notifications.map((notification, index) => (\n            <Fragment key={notification.id}>\n              <ListItem key={notification.id}>\n                <ListItemText primary={notification.label} />\n                <ListItemSecondaryAction>\n                  <Switch\n                    checked={formik.values[notification.name]}\n                    color=\"primary\"\n                    name={notification.name}\n                    onChange={formik.handleChange}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n              {notifications.length > index + 1 && <Divider />}\n            </Fragment>\n          ))}\n        </List>\n      </Card>\n      <Box\n        sx={{\n          alignItems: 'flex-start',\n          display: 'flex',\n          flexDirection: {\n            sm: 'row',\n            xs: 'column'\n          },\n          pt: 3\n        }}\n      >\n        <Box>\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"h6\"\n          >\n            Unsubscribe Notifications\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            Keep in mind that security notifications cannot be turned off\n          </Typography>\n        </Box>\n        <Box sx={{ flexGrow: 1 }} />\n        <FormControlLabel\n          control={(\n            <Switch\n              checked={formik.values.unsubscribeAll}\n              color=\"primary\"\n              name=\"unsubscribeAll\"\n              onChange={formik.handleChange}\n            />\n          )}\n          label=\"Unsubscribe\"\n        />\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}