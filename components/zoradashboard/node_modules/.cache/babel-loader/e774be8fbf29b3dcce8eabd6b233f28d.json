{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/product-inventory.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport numeral from 'numeral';\nimport { Avatar, Box, Button, Card, CardHeader, Divider, InputBase, Skeleton, Table, TableBody, TableCell, TableHead, TableRow, ToggleButton, ToggleButtonGroup, Typography } from '@material-ui/core';\nimport { productApi } from '../api/product';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceUnavailable } from '../components/resource-unavailable';\nimport { Scrollbar } from '../components/scrollbar';\nimport { useMounted } from '../hooks/use-mounted';\nimport { CustomCube as CubeIcon } from '../icons/custom-cube';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VariantTableRow = props => {\n  _s();\n\n  const {\n    onSaveQuantity,\n    variant,\n    ...other\n  } = props;\n  const [mode, setMode] = useState('add');\n  const [quantity, setQuantity] = useState('');\n  const parsedQuantity = Number.parseInt(quantity, 10);\n\n  const handleModeChange = (event, newMode) => {\n    if (newMode) {\n      setMode(newMode);\n    }\n  };\n\n  const handleQuantityChange = event => {\n    setQuantity(event.target.value);\n  };\n\n  const handleSaveQuantity = () => {\n    onSaveQuantity === null || onSaveQuantity === void 0 ? void 0 : onSaveQuantity(variant.id, parsedQuantity, mode);\n    setQuantity('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableRow, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: 'center',\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: variant.image,\n          sx: {\n            mr: 2\n          },\n          variant: \"rounded\",\n          children: /*#__PURE__*/_jsxDEV(CubeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"inherit\",\n          variant: \"body2\",\n          children: variant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: variant.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: numeral(variant.price).format('$0,0.00')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: variant.sku\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      sx: {\n        width: 333\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          exclusive: true,\n          onChange: handleModeChange,\n          value: mode,\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"add\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"set\",\n            children: \"Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          inputProps: {\n            sx: {\n              px: 1.5,\n              py: 1.75\n            }\n          },\n          onChange: handleQuantityChange,\n          sx: {\n            borderColor: 'neutral.300',\n            borderRadius: 1,\n            borderStyle: 'solid',\n            borderWidth: 1,\n            maxHeight: 48,\n            mx: 1\n          },\n          type: \"number\",\n          value: quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: Number.isNaN(parsedQuantity) || parsedQuantity < 0 || parsedQuantity === 0 && mode === 'add',\n          onClick: handleSaveQuantity,\n          variant: \"contained\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VariantTableRow, \"2XKD4f1hG67lEsop7SJKo34MOck=\");\n\n_c = VariantTableRow;\nVariantTableRow.propTypes = {\n  variant: PropTypes.object.isRequired,\n  onSaveQuantity: PropTypes.func\n};\nexport const ProductInventory = () => {\n  _s2();\n\n  const mounted = useMounted();\n  const [productState, setProductState] = useState({\n    isLoading: true\n  });\n  const [variants, setVariants] = useState([]);\n  const getProduct = useCallback(async () => {\n    setProductState(() => ({\n      isLoading: true\n    }));\n\n    try {\n      const result = await productApi.getProduct();\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    getProduct().catch(console.error);\n  }, [getProduct]); // Variants are sent in project's data\n\n  useEffect(() => {\n    var _productState$data;\n\n    setVariants(((_productState$data = productState.data) === null || _productState$data === void 0 ? void 0 : _productState$data.variants) || []);\n  }, [productState.data]);\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n\n  const onSaveQuantity = (id, quantity, mode) => {\n    const temp = [...variants];\n    const index = temp.findIndex(variant => variant.id === id);\n    temp[index].quantity = mode === 'add' ? temp[index].quantity + quantity : quantity;\n    setVariants(temp);\n  };\n\n  const displayLoading = productState.isLoading;\n  const displayError = Boolean(!productState.isLoading && productState.error);\n  const displayUnavailable = Boolean(!productState.isLoading && !productState.error && !variants.length);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Product: Inventory | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minHeight: 600,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Inventory Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 900\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Variant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Inventory\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"SKU\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: variants.map(variant => /*#__PURE__*/_jsxDEV(VariantTableRow, {\n                onSaveQuantity: onSaveQuantity,\n                variant: variant\n              }, variant.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), displayLoading && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), displayError && /*#__PURE__*/_jsxDEV(ResourceError, {\n          error: productState.error,\n          sx: {\n            flexGrow: 1,\n            m: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), displayUnavailable && /*#__PURE__*/_jsxDEV(ResourceUnavailable, {\n          sx: {\n            flexGrow: 1,\n            m: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ProductInventory, \"LesWOesvLdhURFylyFIbcp3uvug=\", false, function () {\n  return [useMounted];\n});\n\n_c2 = ProductInventory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VariantTableRow\");\n$RefreshReg$(_c2, \"ProductInventory\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/product-inventory.js"],"names":["useState","useEffect","useCallback","PropTypes","Helmet","numeral","Avatar","Box","Button","Card","CardHeader","Divider","InputBase","Skeleton","Table","TableBody","TableCell","TableHead","TableRow","ToggleButton","ToggleButtonGroup","Typography","productApi","ResourceError","ResourceUnavailable","Scrollbar","useMounted","CustomCube","CubeIcon","gtm","VariantTableRow","props","onSaveQuantity","variant","other","mode","setMode","quantity","setQuantity","parsedQuantity","Number","parseInt","handleModeChange","event","newMode","handleQuantityChange","target","value","handleSaveQuantity","id","alignItems","display","image","mr","name","price","format","sku","width","sx","px","py","borderColor","borderRadius","borderStyle","borderWidth","maxHeight","mx","isNaN","propTypes","object","isRequired","func","ProductInventory","mounted","productState","setProductState","isLoading","variants","setVariants","getProduct","result","current","data","err","console","error","message","catch","push","temp","index","findIndex","displayLoading","displayError","Boolean","displayUnavailable","length","backgroundColor","flexGrow","minHeight","flexDirection","minWidth","map","p","m"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport numeral from 'numeral';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  InputBase,\n  Skeleton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography\n} from '@material-ui/core';\nimport { productApi } from '../api/product';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceUnavailable } from '../components/resource-unavailable';\nimport { Scrollbar } from '../components/scrollbar';\nimport { useMounted } from '../hooks/use-mounted';\nimport { CustomCube as CubeIcon } from '../icons/custom-cube';\nimport gtm from '../lib/gtm';\n\nconst VariantTableRow = (props) => {\n  const { onSaveQuantity, variant, ...other } = props;\n  const [mode, setMode] = useState('add');\n  const [quantity, setQuantity] = useState('');\n  const parsedQuantity = Number.parseInt(quantity, 10);\n\n  const handleModeChange = (event, newMode) => {\n    if (newMode) {\n      setMode(newMode);\n    }\n  };\n\n  const handleQuantityChange = (event) => {\n    setQuantity(event.target.value);\n  };\n\n  const handleSaveQuantity = () => {\n    onSaveQuantity?.(variant.id, parsedQuantity, mode);\n    setQuantity('');\n  };\n\n  return (\n    <TableRow {...other}>\n      <TableCell>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n        >\n          <Avatar\n            src={variant.image}\n            sx={{ mr: 2 }}\n            variant=\"rounded\"\n          >\n            <CubeIcon />\n          </Avatar>\n          <Typography\n            color=\"inherit\"\n            variant=\"body2\"\n          >\n            {variant.name}\n          </Typography>\n        </Box>\n      </TableCell>\n      <TableCell>\n        {variant.quantity}\n      </TableCell>\n      <TableCell>\n        {numeral(variant.price).format('$0,0.00')}\n      </TableCell>\n      <TableCell>\n        {variant.sku}\n      </TableCell>\n      <TableCell sx={{ width: 333 }}>\n        <Box sx={{ display: 'flex' }}>\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            value={mode}\n          >\n            <ToggleButton value=\"add\">Add</ToggleButton>\n            <ToggleButton value=\"set\">Set</ToggleButton>\n          </ToggleButtonGroup>\n          <InputBase\n            inputProps={{\n              sx: {\n                px: 1.5,\n                py: 1.75\n              }\n            }}\n            onChange={handleQuantityChange}\n            sx={{\n              borderColor: 'neutral.300',\n              borderRadius: 1,\n              borderStyle: 'solid',\n              borderWidth: 1,\n              maxHeight: 48,\n              mx: 1\n            }}\n            type=\"number\"\n            value={quantity}\n          />\n          <Button\n            color=\"primary\"\n            disabled={Number.isNaN(parsedQuantity)\n            || parsedQuantity < 0\n            || (parsedQuantity === 0 && mode === 'add')}\n            onClick={handleSaveQuantity}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nVariantTableRow.propTypes = {\n  variant: PropTypes.object.isRequired,\n  onSaveQuantity: PropTypes.func\n};\n\nexport const ProductInventory = () => {\n  const mounted = useMounted();\n  const [productState, setProductState] = useState({ isLoading: true });\n  const [variants, setVariants] = useState([]);\n\n  const getProduct = useCallback(async () => {\n    setProductState(() => ({ isLoading: true }));\n\n    try {\n      const result = await productApi.getProduct();\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getProduct().catch(console.error);\n  }, [getProduct]);\n\n  // Variants are sent in project's data\n  useEffect(() => {\n    setVariants(productState.data?.variants || []);\n  }, [productState.data]);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const onSaveQuantity = (id, quantity, mode) => {\n    const temp = [...variants];\n    const index = temp.findIndex((variant) => variant.id === id);\n    temp[index].quantity = mode === 'add' ? temp[index].quantity + quantity : quantity;\n    setVariants(temp);\n  };\n\n  const displayLoading = productState.isLoading;\n  const displayError = Boolean(!productState.isLoading && productState.error);\n  const displayUnavailable = Boolean(!productState.isLoading\n    && !productState.error\n    && !variants.length);\n\n  return (\n    <>\n      <Helmet>\n        <title>Product: Inventory | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1\n        }}\n      >\n        <Card\n          sx={{\n            minHeight: 600,\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n          variant=\"outlined\"\n        >\n          <CardHeader title=\"Inventory Management\" />\n          <Divider />\n          <Scrollbar>\n            <Table sx={{ minWidth: 900 }}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    Variant\n                  </TableCell>\n                  <TableCell>\n                    Inventory\n                  </TableCell>\n                  <TableCell>\n                    Price\n                  </TableCell>\n                  <TableCell>\n                    SKU\n                  </TableCell>\n                  <TableCell>\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {variants.map((variant) => (\n                  <VariantTableRow\n                    key={variant.id}\n                    onSaveQuantity={onSaveQuantity}\n                    variant={variant}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </Scrollbar>\n          {displayLoading && (\n            <Box sx={{ p: 2 }}>\n              <Skeleton height={42} />\n              <Skeleton height={42} />\n              <Skeleton height={42} />\n            </Box>\n          )}\n          {displayError && (\n            <ResourceError\n              error={productState.error}\n              sx={{\n                flexGrow: 1,\n                m: 2\n              }}\n            />\n          )}\n          {displayUnavailable && (\n            <ResourceUnavailable\n              sx={{\n                flexGrow: 1,\n                m: 2\n              }}\n            />\n          )}\n        </Card>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}