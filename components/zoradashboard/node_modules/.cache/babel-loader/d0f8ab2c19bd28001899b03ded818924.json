{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/product-variants.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Avatar, Box, Button, Card, CardHeader, Divider, Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\nimport { useDialog } from '../../hooks/use-dialog';\nimport { CustomCube as CubeIcon } from '../../icons/custom-cube';\nimport { generateResourceId } from '../../utils/generate-resource-id';\nimport { ConfirmationDialog } from '../confirmation-dialog';\nimport { ResourceUnavailable } from '../resource-unavailable';\nimport { Scrollbar } from '../scrollbar';\nimport { ProductVariantDialog } from './product-variant-dialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProductVariants = props => {\n  _s();\n\n  const {\n    variants: variantsProp,\n    ...other\n  } = props;\n  const [variantDialogOpen, handleOpenVariantDialog, handleCloseVariantDialog] = useDialog();\n  const [deleteDialogOpen, handleOpenDeleteDialog, handleCloseDeleteDialog] = useDialog();\n  const [variants, setVariants] = useState(variantsProp);\n  const [selectedVariant, setSelectedVariant] = useState(null);\n\n  const handleExitedDialog = () => {\n    if (selectedVariant) {\n      setSelectedVariant(null);\n    }\n  };\n\n  const handleDeleteVariant = () => {\n    setVariants(prevVariants => prevVariants.filter(variant => variant.id !== selectedVariant.id));\n    setSelectedVariant(null);\n    handleCloseDeleteDialog();\n  };\n\n  const handleVariantsChange = (variant, mode) => {\n    let temp = [...variants];\n\n    if (mode === 'add') {\n      temp = [...temp, { ...variant,\n        id: generateResourceId(),\n        createdAt: new Date()\n      }];\n    } else {\n      const index = variants.findIndex(_variant => _variant.id === variant.id);\n      temp[index] = variant;\n    }\n\n    setVariants(temp);\n  };\n\n  useEffect(() => {\n    setVariants(variantsProp);\n  }, [variantsProp]);\n  const displayUnavailable = variants.length === 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleOpenVariantDialog,\n          variant: \"text\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this),\n        title: \"Variants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 600\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: variants.map(variant => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    alignItems: 'center',\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    src: variant.image,\n                    sx: {\n                      border: theme => `1px solid ${theme.palette.divider}`,\n                      height: 48,\n                      mr: 2,\n                      width: 48\n                    },\n                    variant: \"rounded\",\n                    children: /*#__PURE__*/_jsxDEV(CubeIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"textPrimary\",\n                      variant: \"body2\",\n                      children: variant.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"textSecondary\",\n                      variant: \"body2\",\n                      children: variant.price\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: variant.sku\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: format(variant.createdAt, 'MMM dd yyyy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  width: 135\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"primary\",\n                    sx: {\n                      cursor: 'pointer'\n                    },\n                    onClick: () => {\n                      setSelectedVariant(variant);\n                      handleOpenVariantDialog();\n                    },\n                    variant: \"subtitle2\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    flexItem: true,\n                    orientation: \"vertical\",\n                    sx: {\n                      mx: 2\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"primary\",\n                    onClick: () => {\n                      setSelectedVariant(variant);\n                      handleOpenDeleteDialog();\n                    },\n                    sx: {\n                      cursor: 'pointer'\n                    },\n                    variant: \"subtitle2\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)]\n            }, variant.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), displayUnavailable && /*#__PURE__*/_jsxDEV(ResourceUnavailable, {\n        onCreate: handleOpenVariantDialog,\n        sx: {\n          m: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductVariantDialog, {\n      onClose: handleCloseVariantDialog,\n      onExited: handleExitedDialog,\n      onVariantsChange: handleVariantsChange,\n      open: variantDialogOpen,\n      variant: selectedVariant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n      message: \"Are you sure you want to delete this variant? This can't be undone.\",\n      onCancel: handleCloseDeleteDialog,\n      onConfirm: handleDeleteVariant,\n      open: deleteDialogOpen,\n      title: \"Delete variant\",\n      variant: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductVariants, \"Nuck/hkNelWGq0ku4nWRk5SLHss=\", false, function () {\n  return [useDialog, useDialog];\n});\n\n_c = ProductVariants;\nProductVariants.propTypes = {\n  variants: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductVariants\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/product-variants.js"],"names":["useState","useEffect","PropTypes","format","Avatar","Box","Button","Card","CardHeader","Divider","Table","TableBody","TableCell","TableHead","TableRow","Typography","useDialog","CustomCube","CubeIcon","generateResourceId","ConfirmationDialog","ResourceUnavailable","Scrollbar","ProductVariantDialog","ProductVariants","props","variants","variantsProp","other","variantDialogOpen","handleOpenVariantDialog","handleCloseVariantDialog","deleteDialogOpen","handleOpenDeleteDialog","handleCloseDeleteDialog","setVariants","selectedVariant","setSelectedVariant","handleExitedDialog","handleDeleteVariant","prevVariants","filter","variant","id","handleVariantsChange","mode","temp","createdAt","Date","index","findIndex","_variant","displayUnavailable","length","minWidth","map","alignItems","display","image","border","theme","palette","divider","height","mr","width","name","price","sku","cursor","mx","m","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { useDialog } from '../../hooks/use-dialog';\nimport { CustomCube as CubeIcon } from '../../icons/custom-cube';\nimport { generateResourceId } from '../../utils/generate-resource-id';\nimport { ConfirmationDialog } from '../confirmation-dialog';\nimport { ResourceUnavailable } from '../resource-unavailable';\nimport { Scrollbar } from '../scrollbar';\nimport { ProductVariantDialog } from './product-variant-dialog';\n\nexport const ProductVariants = (props) => {\n  const { variants: variantsProp, ...other } = props;\n  const [variantDialogOpen, handleOpenVariantDialog, handleCloseVariantDialog] = useDialog();\n  const [deleteDialogOpen, handleOpenDeleteDialog, handleCloseDeleteDialog] = useDialog();\n  const [variants, setVariants] = useState(variantsProp);\n  const [selectedVariant, setSelectedVariant] = useState(null);\n\n  const handleExitedDialog = () => {\n    if (selectedVariant) {\n      setSelectedVariant(null);\n    }\n  };\n\n  const handleDeleteVariant = () => {\n    setVariants((prevVariants) => prevVariants\n      .filter((variant) => variant.id !== selectedVariant.id));\n    setSelectedVariant(null);\n    handleCloseDeleteDialog();\n  };\n\n  const handleVariantsChange = (variant, mode) => {\n    let temp = [...variants];\n\n    if (mode === 'add') {\n      temp = [\n        ...temp,\n        {\n          ...variant,\n          id: generateResourceId(),\n          createdAt: new Date()\n        }\n      ];\n    } else {\n      const index = variants.findIndex((_variant) => _variant.id === variant.id);\n      temp[index] = variant;\n    }\n\n    setVariants(temp);\n  };\n\n  useEffect(() => {\n    setVariants(variantsProp);\n  }, [variantsProp]);\n\n  const displayUnavailable = variants.length === 0;\n\n  return (\n    <>\n      <Card\n        variant=\"outlined\"\n        {...other}\n      >\n        <CardHeader\n          action={(\n            <Button\n              color=\"primary\"\n              onClick={handleOpenVariantDialog}\n              variant=\"text\"\n            >\n              Add\n            </Button>\n          )}\n          title=\"Variants\"\n        />\n        <Divider />\n        <Scrollbar>\n          <Table sx={{ minWidth: 600 }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Variant\n                </TableCell>\n                <TableCell>\n                  SKU\n                </TableCell>\n                <TableCell>\n                  Created\n                </TableCell>\n                <TableCell>\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {variants.map((variant) => (\n                <TableRow key={variant.id}>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Avatar\n                        src={variant.image}\n                        sx={{\n                          border: (theme) => `1px solid ${theme.palette.divider}`,\n                          height: 48,\n                          mr: 2,\n                          width: 48\n                        }}\n                        variant=\"rounded\"\n                      >\n                        <CubeIcon />\n                      </Avatar>\n                      <div>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"body2\"\n                        >\n                          {variant.name}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {variant.price}\n                        </Typography>\n                      </div>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {variant.sku}\n                  </TableCell>\n                  <TableCell>\n                    {format(variant.createdAt, 'MMM dd yyyy')}\n                  </TableCell>\n                  <TableCell sx={{ width: 135 }}>\n                    <Box sx={{ display: 'flex' }}>\n                      <Typography\n                        color=\"primary\"\n                        sx={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setSelectedVariant(variant);\n                          handleOpenVariantDialog();\n                        }}\n                        variant=\"subtitle2\"\n                      >\n                        Edit\n                      </Typography>\n                      <Divider\n                        flexItem\n                        orientation=\"vertical\"\n                        sx={{ mx: 2 }}\n                      />\n                      <Typography\n                        color=\"primary\"\n                        onClick={() => {\n                          setSelectedVariant(variant);\n                          handleOpenDeleteDialog();\n                        }}\n                        sx={{ cursor: 'pointer' }}\n                        variant=\"subtitle2\"\n                      >\n                        Delete\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Scrollbar>\n        {displayUnavailable && (\n          <ResourceUnavailable\n            onCreate={handleOpenVariantDialog}\n            sx={{ m: 2 }}\n          />\n        )}\n      </Card>\n      <ProductVariantDialog\n        onClose={handleCloseVariantDialog}\n        onExited={handleExitedDialog}\n        onVariantsChange={handleVariantsChange}\n        open={variantDialogOpen}\n        variant={selectedVariant}\n      />\n      <ConfirmationDialog\n        message=\"Are you sure you want to delete this variant? This can't be undone.\"\n        onCancel={handleCloseDeleteDialog}\n        onConfirm={handleDeleteVariant}\n        open={deleteDialogOpen}\n        title=\"Delete variant\"\n        variant=\"error\"\n      />\n    </>\n  );\n};\n\nProductVariants.propTypes = {\n  variants: PropTypes.array.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}