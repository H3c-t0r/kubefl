{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/product-summary.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Grid } from '@material-ui/core';\nimport { productApi } from '../api/product';\nimport { ProductInfo } from '../components/product/product-info';\nimport { ProductInfoDialog } from '../components/product/product-info-dialog';\nimport { ProductStatus } from '../components/product/product-status';\nimport { ProductVariants } from '../components/product/product-variants';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceLoading } from '../components/resource-loading';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProductSummary = () => {\n  _s();\n\n  const mounted = useMounted();\n  const [productState, setProductState] = useState({\n    isLoading: true\n  });\n  const [openInfoDialog, setOpenInfoDialog] = useState(false);\n  const getProduct = useCallback(async () => {\n    setProductState(() => ({\n      isLoading: true\n    }));\n\n    try {\n      const result = await productApi.getProduct();\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    getProduct().catch(console.error);\n  }, []);\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n\n  const renderContent = () => {\n    var _productState$data;\n\n    if (productState.isLoading) {\n      return /*#__PURE__*/_jsxDEV(ResourceLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (productState.error) {\n      return /*#__PURE__*/_jsxDEV(ResourceError, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          lg: 8,\n          spacing: 3,\n          sx: {\n            height: 'fit-content',\n            order: {\n              md: 2,\n              xs: 1\n            }\n          },\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ProductInfo, {\n              onEdit: () => setOpenInfoDialog(true),\n              product: productState.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ProductVariants, {\n              variants: (_productState$data = productState.data) === null || _productState$data === void 0 ? void 0 : _productState$data.variants\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          lg: 4,\n          spacing: 3,\n          sx: {\n            height: 'fit-content',\n            order: {\n              md: 2,\n              xs: 1\n            }\n          },\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ProductStatus, {\n              product: productState.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductInfoDialog, {\n        onClose: () => setOpenInfoDialog(false),\n        open: openInfoDialog,\n        product: productState.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Product: Summary | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        flexGrow: 1\n      },\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductSummary, \"3Y7h+0NBy5JmvYgRjwb5P7i4wmA=\", false, function () {\n  return [useMounted];\n});\n\n_c = ProductSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSummary\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/product-summary.js"],"names":["useState","useEffect","useCallback","Helmet","Box","Grid","productApi","ProductInfo","ProductInfoDialog","ProductStatus","ProductVariants","ResourceError","ResourceLoading","useMounted","gtm","ProductSummary","mounted","productState","setProductState","isLoading","openInfoDialog","setOpenInfoDialog","getProduct","result","current","data","err","console","error","message","catch","push","event","renderContent","height","order","md","xs","variants","backgroundColor","flexGrow"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Grid } from '@material-ui/core';\nimport { productApi } from '../api/product';\nimport { ProductInfo } from '../components/product/product-info';\nimport { ProductInfoDialog } from '../components/product/product-info-dialog';\nimport { ProductStatus } from '../components/product/product-status';\nimport { ProductVariants } from '../components/product/product-variants';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceLoading } from '../components/resource-loading';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\n\nexport const ProductSummary = () => {\n  const mounted = useMounted();\n  const [productState, setProductState] = useState({ isLoading: true });\n  const [openInfoDialog, setOpenInfoDialog] = useState(false);\n\n  const getProduct = useCallback(async () => {\n    setProductState(() => ({ isLoading: true }));\n\n    try {\n      const result = await productApi.getProduct();\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getProduct().catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const renderContent = () => {\n    if (productState.isLoading) {\n      return <ResourceLoading />;\n    }\n\n    if (productState.error) {\n      return <ResourceError />;\n    }\n\n    return (\n      <>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            container\n            item\n            lg={8}\n            spacing={3}\n            sx={{\n              height: 'fit-content',\n              order: {\n                md: 2,\n                xs: 1\n              }\n            }}\n            xs={12}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <ProductInfo\n                onEdit={() => setOpenInfoDialog(true)}\n                product={productState.data}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n            >\n              <ProductVariants variants={productState.data?.variants} />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            lg={4}\n            spacing={3}\n            sx={{\n              height: 'fit-content',\n              order: {\n                md: 2,\n                xs: 1\n              }\n            }}\n            xs={12}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <ProductStatus product={productState.data} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <ProductInfoDialog\n          onClose={() => setOpenInfoDialog(false)}\n          open={openInfoDialog}\n          product={productState.data}\n        />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Product: Summary | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1\n        }}\n      >\n        {renderContent()}\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}