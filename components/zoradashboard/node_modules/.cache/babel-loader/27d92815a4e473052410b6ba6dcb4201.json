{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/filter-dialog.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, Divider, IconButton, Typography } from '@material-ui/core';\nimport { useFilters } from '../hooks/use-filters';\nimport { X as XIcon } from '../icons/x';\nimport { FilterDialogItem } from './filter-dialog-item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterDialog = props => {\n  _s();\n\n  const {\n    open,\n    onClose,\n    operators,\n    properties,\n    onApply,\n    onClear,\n    ...other\n  } = props;\n  const {\n    addFilter,\n    clearFilters,\n    filters,\n    handleOperatorChange,\n    handlePropertyChange,\n    handleValueChange,\n    removeFilter\n  } = useFilters(properties, operators);\n\n  const handleFiltersClear = () => {\n    clearFilters();\n    onClear === null || onClear === void 0 ? void 0 : onClear();\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: onClose,\n    open: open,\n    PaperProps: {\n      sx: {\n        maxWidth: 500,\n        width: '100%'\n      }\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        variant: \"inherit\",\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: onClose,\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(XIcon, {\n          fontSize: \"small\",\n          sx: {\n            color: 'text.primary'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: filters.map((filter, index) =>\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      _jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FilterDialogItem, {\n          filter: filter,\n          index: index,\n          onAddFilter: addFilter,\n          onRemoveFilter: removeFilter,\n          onOperatorChange: handleOperatorChange,\n          onPropertyChange: handlePropertyChange,\n          onValueChange: handleValueChange,\n          operators: operators,\n          properties: properties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), filters.length > index + 1 && /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2,\n            '& .MuiDivider-wrapper': {\n              p: 0\n            }\n          },\n          textAlign: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"primary\",\n            label: \"AND\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        onClick: handleFiltersClear,\n        variant: \"text\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: () => {\n          onApply === null || onApply === void 0 ? void 0 : onApply(filters);\n          onClose === null || onClose === void 0 ? void 0 : onClose();\n        },\n        variant: \"contained\",\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterDialog, \"pmHfriM6l0bDTKLWYLzN2UT4YB0=\", false, function () {\n  return [useFilters];\n});\n\n_c = FilterDialog;\nFilterDialog.defaultProps = {\n  open: false\n};\nFilterDialog.propTypes = {\n  onApply: PropTypes.func,\n  onClear: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  operators: PropTypes.array.isRequired,\n  properties: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterDialog\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/filter-dialog.js"],"names":["Fragment","PropTypes","Button","Chip","Dialog","DialogActions","DialogContent","DialogTitle","Divider","IconButton","Typography","useFilters","X","XIcon","FilterDialogItem","FilterDialog","props","open","onClose","operators","properties","onApply","onClear","other","addFilter","clearFilters","filters","handleOperatorChange","handlePropertyChange","handleValueChange","removeFilter","handleFiltersClear","sx","maxWidth","width","alignItems","justifyContent","display","color","map","filter","index","length","my","p","defaultProps","propTypes","func","bool","array","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,OAPF,EAQEC,UARF,EASEC,UATF,QAUO,mBAVP;AAWA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,CAAC,IAAIC,KAAd,QAA2B,YAA3B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA,OAAxC;AAAiDC,IAAAA,OAAjD;AAA0D,OAAGC;AAA7D,MAAuEP,KAA7E;AACA,QAAM;AACJQ,IAAAA,SADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,oBAJI;AAKJC,IAAAA,oBALI;AAMJC,IAAAA,iBANI;AAOJC,IAAAA;AAPI,MAQFnB,UAAU,CAACS,UAAD,EAAaD,SAAb,CARd;;AAUA,QAAMY,kBAAkB,GAAG,MAAM;AAC/BN,IAAAA,YAAY;AACZH,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;AACPJ,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;AACR,GAJD;;AAMA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,UAAU,EAAE;AACVe,MAAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,GADR;AAEFC,QAAAA,KAAK,EAAE;AAFL;AADM,KAHd;AAAA,OASMX,KATN;AAAA,4BAWE,QAAC,WAAD;AACE,MAAA,EAAE,EAAE;AACFY,QAAAA,UAAU,EAAE,QADV;AAEFC,QAAAA,cAAc,EAAE,eAFd;AAGFC,QAAAA,OAAO,EAAE;AAHP,OADN;AAAA,8BAOE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,OAAO,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE,QAAC,UAAD;AACE,QAAA,OAAO,EAAEnB,OADX;AAEE,QAAA,IAAI,EAAC,OAFP;AAAA,+BAIE,QAAC,KAAD;AACE,UAAA,QAAQ,EAAC,OADX;AAEE,UAAA,EAAE,EAAE;AAAEoB,YAAAA,KAAK,EAAE;AAAT;AAFN;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAkCE,QAAC,aAAD;AAAA,gBACGZ,OAAO,CAACa,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT;AAAA;AACX;AACA,cAAC,QAAD;AAAA,gCACE,QAAC,gBAAD;AACE,UAAA,MAAM,EAAED,MADV;AAEE,UAAA,KAAK,EAAEC,KAFT;AAGE,UAAA,WAAW,EAAEjB,SAHf;AAIE,UAAA,cAAc,EAAEM,YAJlB;AAKE,UAAA,gBAAgB,EAAEH,oBALpB;AAME,UAAA,gBAAgB,EAAEC,oBANpB;AAOE,UAAA,aAAa,EAAEC,iBAPjB;AAQE,UAAA,SAAS,EAAEV,SARb;AASE,UAAA,UAAU,EAAEC;AATd;AAAA;AAAA;AAAA;AAAA,gBADF,EAYGM,OAAO,CAACgB,MAAR,GAAiBD,KAAK,GAAG,CAAzB,iBACC,QAAC,OAAD;AACE,UAAA,EAAE,EAAE;AACFE,YAAAA,EAAE,EAAE,CADF;AAEF,qCAAyB;AACvBC,cAAAA,CAAC,EAAE;AADoB;AAFvB,WADN;AAOE,UAAA,SAAS,EAAC,MAPZ;AAAA,iCASE,QAAC,IAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,KAAK,EAAC,KAFR;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA,SAAeH,KAAf;AAAA;AAAA;AAAA;AAAA,cAFD;AADH;AAAA;AAAA;AAAA;AAAA,YAlCF,eAqEE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,OAAO,EAAEV,kBAFX;AAGE,QAAA,OAAO,EAAC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,MAAM;AACbV,UAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGK,OAAH,CAAP;AACAR,UAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;AACR,SALH;AAME,QAAA,OAAO,EAAC,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YArEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2FD,CA7GM;;GAAMH,Y;UAUPJ,U;;;KAVOI,Y;AA+GbA,YAAY,CAAC8B,YAAb,GAA4B;AAC1B5B,EAAAA,IAAI,EAAE;AADoB,CAA5B;AAIAF,YAAY,CAAC+B,SAAb,GAAyB;AACvBzB,EAAAA,OAAO,EAAEpB,SAAS,CAAC8C,IADI;AAEvBzB,EAAAA,OAAO,EAAErB,SAAS,CAAC8C,IAFI;AAGvB7B,EAAAA,OAAO,EAAEjB,SAAS,CAAC8C,IAHI;AAIvB9B,EAAAA,IAAI,EAAEhB,SAAS,CAAC+C,IAJO;AAKvB7B,EAAAA,SAAS,EAAElB,SAAS,CAACgD,KAAV,CAAgBC,UALJ;AAMvB9B,EAAAA,UAAU,EAAEnB,SAAS,CAACgD,KAAV,CAAgBC;AANL,CAAzB","sourcesContent":["import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  Typography\n} from '@material-ui/core';\nimport { useFilters } from '../hooks/use-filters';\nimport { X as XIcon } from '../icons/x';\nimport { FilterDialogItem } from './filter-dialog-item';\n\nexport const FilterDialog = (props) => {\n  const { open, onClose, operators, properties, onApply, onClear, ...other } = props;\n  const {\n    addFilter,\n    clearFilters,\n    filters,\n    handleOperatorChange,\n    handlePropertyChange,\n    handleValueChange,\n    removeFilter\n  } = useFilters(properties, operators);\n\n  const handleFiltersClear = () => {\n    clearFilters();\n    onClear?.();\n    onClose?.();\n  };\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      PaperProps={{\n        sx: {\n          maxWidth: 500,\n          width: '100%'\n        }\n      }}\n      {...other}\n    >\n      <DialogTitle\n        sx={{\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          display: 'flex'\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"inherit\"\n        >\n          Filter\n        </Typography>\n        <IconButton\n          onClick={onClose}\n          size=\"small\"\n        >\n          <XIcon\n            fontSize=\"small\"\n            sx={{ color: 'text.primary' }}\n          />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        {filters.map((filter, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={index}>\n            <FilterDialogItem\n              filter={filter}\n              index={index}\n              onAddFilter={addFilter}\n              onRemoveFilter={removeFilter}\n              onOperatorChange={handleOperatorChange}\n              onPropertyChange={handlePropertyChange}\n              onValueChange={handleValueChange}\n              operators={operators}\n              properties={properties}\n            />\n            {filters.length > index + 1 && (\n              <Divider\n                sx={{\n                  my: 2,\n                  '& .MuiDivider-wrapper': {\n                    p: 0\n                  }\n                }}\n                textAlign=\"left\"\n              >\n                <Chip\n                  color=\"primary\"\n                  label=\"AND\"\n                  size=\"small\"\n                />\n              </Divider>\n            )}\n          </Fragment>\n        ))}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"error\"\n          onClick={handleFiltersClear}\n          variant=\"text\"\n        >\n          Reset\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => {\n            onApply?.(filters);\n            onClose?.();\n          }}\n          variant=\"contained\"\n        >\n          Filter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nFilterDialog.defaultProps = {\n  open: false\n};\n\nFilterDialog.propTypes = {\n  onApply: PropTypes.func,\n  onClear: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  operators: PropTypes.array.isRequired,\n  properties: PropTypes.array.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}