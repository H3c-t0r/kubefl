{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/customer-activity.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Button, Card, List, Skeleton } from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { CustomerActivityItem } from '../components/customer/customer-activity-item';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceUnavailable } from '../components/resource-unavailable';\nimport { useMounted } from '../hooks/use-mounted';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomerActivity = () => {\n  _s();\n\n  var _activitiesState$data, _activitiesState$data2;\n\n  const mounted = useMounted();\n  const [activitiesState, setActivitiesState] = useState({\n    isLoading: true\n  });\n  const getActivities = useCallback(async () => {\n    setActivitiesState(() => ({\n      isLoading: true\n    }));\n\n    try {\n      const result = await customerApi.getCustomerActivities();\n\n      if (mounted.current) {\n        setActivitiesState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setActivitiesState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    getActivities().catch(console.error);\n  }, []);\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  const displayLoading = activitiesState.isLoading;\n  const displayError = Boolean(!activitiesState.isLoading && activitiesState.error);\n  const displayUnavailable = Boolean(!activitiesState.isLoading && !activitiesState.error && !((_activitiesState$data = activitiesState.data) === null || _activitiesState$data === void 0 ? void 0 : _activitiesState$data.length));\n  const disableLoadMore = Boolean(activitiesState.isLoading || activitiesState.error);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Customer: Activity | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          children: (_activitiesState$data2 = activitiesState.data) === null || _activitiesState$data2 === void 0 ? void 0 : _activitiesState$data2.map(activity => /*#__PURE__*/_jsxDEV(CustomerActivityItem, {\n            divider: true,\n            ...activity\n          }, activity.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), displayLoading && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), displayError && /*#__PURE__*/_jsxDEV(ResourceError, {\n          error: activitiesState.error,\n          sx: {\n            m: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), displayUnavailable && /*#__PURE__*/_jsxDEV(ResourceUnavailable, {\n          sx: {\n            m: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mt: 'auto',\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: disableLoadMore,\n            endIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 24\n            }, this),\n            variant: \"text\",\n            children: \"Load more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomerActivity, \"3EulltJRy7QiFOeFX6uSjqObfFE=\", false, function () {\n  return [useMounted];\n});\n\n_c = CustomerActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerActivity\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/customer-activity.js"],"names":["useState","useEffect","useCallback","Helmet","Box","Button","Card","List","Skeleton","customerApi","CustomerActivityItem","ResourceError","ResourceUnavailable","useMounted","ChevronDown","ChevronDownIcon","gtm","CustomerActivity","mounted","activitiesState","setActivitiesState","isLoading","getActivities","result","getCustomerActivities","current","data","err","console","error","message","catch","push","event","displayLoading","displayError","Boolean","displayUnavailable","length","disableLoadMore","display","flexDirection","height","flexGrow","map","activity","id","p","m","justifyContent","mt"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,QAAlC,QAAkD,mBAAlD;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,oBAAT,QAAqC,+CAArC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,WAAW,IAAIC,eAAxB,QAA+C,uBAA/C;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAAA;;AACpC,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC;AAAEqB,IAAAA,SAAS,EAAE;AAAb,GAAD,CAAtD;AAEA,QAAMC,aAAa,GAAGpB,WAAW,CAAC,YAAY;AAC5CkB,IAAAA,kBAAkB,CAAC,OAAO;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAP,CAAD,CAAlB;;AAEA,QAAI;AACF,YAAME,MAAM,GAAG,MAAMd,WAAW,CAACe,qBAAZ,EAArB;;AAEA,UAAIN,OAAO,CAACO,OAAZ,EAAqB;AACnBL,QAAAA,kBAAkB,CAAC,OAAO;AACxBC,UAAAA,SAAS,EAAE,KADa;AAExBK,UAAAA,IAAI,EAAEH;AAFkB,SAAP,CAAD,CAAlB;AAID;AACF,KATD,CASE,OAAOI,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;;AAEA,UAAIT,OAAO,CAACO,OAAZ,EAAqB;AACnBL,QAAAA,kBAAkB,CAAC,OAAO;AACxBC,UAAAA,SAAS,EAAE,KADa;AAExBQ,UAAAA,KAAK,EAAEF,GAAG,CAACG;AAFa,SAAP,CAAD,CAAlB;AAID;AACF;AACF,GAtBgC,EAsB9B,EAtB8B,CAAjC;AAwBA7B,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,aAAa,GAAGS,KAAhB,CAAsBH,OAAO,CAACC,KAA9B;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA5B,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,GAAG,CAACgB,IAAJ,CAAS;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMC,cAAc,GAAGf,eAAe,CAACE,SAAvC;AACA,QAAMc,YAAY,GAAGC,OAAO,CAAC,CAACjB,eAAe,CAACE,SAAjB,IAA8BF,eAAe,CAACU,KAA/C,CAA5B;AACA,QAAMQ,kBAAkB,GAAGD,OAAO,CAAC,CAACjB,eAAe,CAACE,SAAjB,IAC9B,CAACF,eAAe,CAACU,KADa,IAE9B,2BAACV,eAAe,CAACO,IAAjB,0DAAC,sBAAsBY,MAAvB,CAF6B,CAAlC;AAGA,QAAMC,eAAe,GAAGH,OAAO,CAACjB,eAAe,CAACE,SAAhB,IAA6BF,eAAe,CAACU,KAA9C,CAA/B;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFW,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,aAAa,EAAE,QAFb;AAGFC,QAAAA,MAAM,EAAE;AAHN,OADN;AAAA,6BAOE,QAAC,IAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,EAAE,EAAE;AACFF,UAAAA,OAAO,EAAE,MADP;AAEFC,UAAAA,aAAa,EAAE,QAFb;AAGFE,UAAAA,QAAQ,EAAE;AAHR,SAFN;AAAA,gCAQE,QAAC,IAAD;AAAM,UAAA,cAAc,MAApB;AAAA,8CACGxB,eAAe,CAACO,IADnB,2DACG,uBAAsBkB,GAAtB,CAA2BC,QAAD,iBACzB,QAAC,oBAAD;AACE,YAAA,OAAO,MADT;AAAA,eAGMA;AAHN,aAEOA,QAAQ,CAACC,EAFhB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBARF,EAiBGZ,cAAc,iBACb,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEa,YAAAA,CAAC,EAAE;AAAL,WAAT;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,EAwBGZ,YAAY,iBACX,QAAC,aAAD;AACE,UAAA,KAAK,EAAEhB,eAAe,CAACU,KADzB;AAEE,UAAA,EAAE,EAAE;AAAEmB,YAAAA,CAAC,EAAE;AAAL;AAFN;AAAA;AAAA;AAAA;AAAA,gBAzBJ,EA8BGX,kBAAkB,iBAAI,QAAC,mBAAD;AAAqB,UAAA,EAAE,EAAE;AAAEW,YAAAA,CAAC,EAAE;AAAL;AAAzB;AAAA;AAAA;AAAA;AAAA,gBA9BzB,eA+BE,QAAC,GAAD;AACE,UAAA,EAAE,EAAE;AACFR,YAAAA,OAAO,EAAE,MADP;AAEFS,YAAAA,cAAc,EAAE,QAFd;AAGFC,YAAAA,EAAE,EAAE,MAHF;AAIFH,YAAAA,CAAC,EAAE;AAJD,WADN;AAAA,iCAQE,QAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,QAAQ,EAAER,eAFZ;AAGE,YAAA,OAAO,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,oBAHX;AAIE,YAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAgED,CA3GM;;GAAMtB,gB;UACKJ,U;;;KADLI,gB","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Button, Card, List, Skeleton } from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { CustomerActivityItem } from '../components/customer/customer-activity-item';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceUnavailable } from '../components/resource-unavailable';\nimport { useMounted } from '../hooks/use-mounted';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport gtm from '../lib/gtm';\n\nexport const CustomerActivity = () => {\n  const mounted = useMounted();\n  const [activitiesState, setActivitiesState] = useState({ isLoading: true });\n\n  const getActivities = useCallback(async () => {\n    setActivitiesState(() => ({ isLoading: true }));\n\n    try {\n      const result = await customerApi.getCustomerActivities();\n\n      if (mounted.current) {\n        setActivitiesState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setActivitiesState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getActivities().catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const displayLoading = activitiesState.isLoading;\n  const displayError = Boolean(!activitiesState.isLoading && activitiesState.error);\n  const displayUnavailable = Boolean(!activitiesState.isLoading\n    && !activitiesState.error\n    && !activitiesState.data?.length);\n  const disableLoadMore = Boolean(activitiesState.isLoading || activitiesState.error);\n\n  return (\n    <>\n      <Helmet>\n        <title>Customer: Activity | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        }}\n      >\n        <Card\n          variant=\"outlined\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flexGrow: 1\n          }}\n        >\n          <List disablePadding>\n            {activitiesState.data?.map((activity) => (\n              <CustomerActivityItem\n                divider\n                key={activity.id}\n                {...activity}\n              />\n            ))}\n          </List>\n          {displayLoading && (\n            <Box sx={{ p: 2 }}>\n              <Skeleton height={42} />\n              <Skeleton height={42} />\n              <Skeleton height={42} />\n            </Box>\n          )}\n          {displayError && (\n            <ResourceError\n              error={activitiesState.error}\n              sx={{ m: 2 }}\n            />\n          )}\n          {displayUnavailable && <ResourceUnavailable sx={{ m: 2 }} />}\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              mt: 'auto',\n              p: 2\n            }}\n          >\n            <Button\n              color=\"primary\"\n              disabled={disableLoadMore}\n              endIcon={<ChevronDownIcon />}\n              variant=\"text\"\n            >\n              Load more\n            </Button>\n          </Box>\n        </Card>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}