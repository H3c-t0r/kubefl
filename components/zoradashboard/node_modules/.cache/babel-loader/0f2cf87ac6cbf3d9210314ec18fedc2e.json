{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/product-variant-dialog.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormHelperText, Grid, IconButton, InputAdornment, MenuItem, Typography } from '@material-ui/core';\nimport { Trash as TrashIcon } from '../../icons/trash';\nimport { InputField } from '../input-field';\nimport { ImageDropzone } from '../image-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currencyOptions = [{\n  label: 'EUR',\n  value: 'eur'\n}, {\n  label: 'USD',\n  value: 'usd'\n}];\nexport const ProductVariantDialog = props => {\n  _s();\n\n  const {\n    open,\n    onClose,\n    onExited,\n    onVariantsChange,\n    variant,\n    ...other\n  } = props;\n  const mode = variant ? 'update' : 'add';\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      currency: (variant === null || variant === void 0 ? void 0 : variant.currency) || 'eur',\n      description: (variant === null || variant === void 0 ? void 0 : variant.description) || '',\n      image: (variant === null || variant === void 0 ? void 0 : variant.image) || '',\n      name: (variant === null || variant === void 0 ? void 0 : variant.name) || '',\n      price: (variant === null || variant === void 0 ? void 0 : variant.price) || 0,\n      sku: (variant === null || variant === void 0 ? void 0 : variant.sku) || '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      currency: Yup.string().oneOf(currencyOptions.map(option => option.value)).required('Currency is required'),\n      description: Yup.string().max(1024).required('Description name is required'),\n      image: Yup.string(),\n      name: Yup.string().max(255).required('Variant name is required'),\n      price: Yup.number().required('Price is required'),\n      sku: Yup.string().max(255).required('Sku is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success(mode === 'update' ? 'Variant updated' : 'Variant saved');\n        onVariantsChange === null || onVariantsChange === void 0 ? void 0 : onVariantsChange({ ...variant,\n          ...values\n        }, mode);\n        helpers.setStatus({\n          success: true\n        });\n        helpers.setSubmitting(false);\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: onClose,\n    open: open,\n    PaperProps: {\n      sx: {\n        width: '100%'\n      }\n    },\n    TransitionProps: {\n      onExited: () => {\n        onExited === null || onExited === void 0 ? void 0 : onExited();\n        formik.resetForm();\n      }\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: mode === 'update' ? 'Update Variant' : 'Add Variant'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.name && formik.errors.name),\n            fullWidth: true,\n            helperText: formik.touched.name && formik.errors.name,\n            label: \"Name\",\n            name: \"name\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            placeholder: \"e.g Green\",\n            value: formik.values.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.sku && formik.errors.sku),\n            fullWidth: true,\n            helperText: formik.touched.sku && formik.errors.sku,\n            label: \"SKU\",\n            name: \"sku\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            placeholder: \"D-293TX\",\n            value: formik.values.sku\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.description && formik.errors.description),\n            fullWidth: true,\n            helperText: formik.touched.description && formik.errors.description,\n            label: \"Description\",\n            multiline: true,\n            name: \"description\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            placeholder: \"Product description\",\n            rows: 4,\n            value: formik.values.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.currency && formik.errors.currency),\n            helperText: formik.touched.currency && formik.errors.currency,\n            label: \"Currency\",\n            name: \"currency\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            select: true,\n            sx: {\n              minWidth: 236\n            },\n            value: formik.values.currency,\n            children: currencyOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.price && formik.errors.price),\n            helperText: formik.touched.price && formik.errors.price,\n            label: \"Price\",\n            name: \"price\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            type: \"number\",\n            sx: {\n              maxWidth: 236\n            },\n            value: formik.values.price,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: currencyOptions.find(option => option.value === formik.values.currency).label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            sx: {\n              mb: 1.25\n            },\n            variant: \"subtitle2\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), formik.values.image ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              borderRadius: 1,\n              boxShadow: '0 0 0 1px rgba(24, 33, 77, 0.23)',\n              display: 'flex',\n              position: 'relative',\n              width: 'fit-content',\n              '& img': {\n                borderRadius: 1,\n                display: 'block',\n                maxWidth: 126\n              },\n              '&:hover': {\n                boxShadow: theme => `0 0 0 1px ${theme.palette.primary.main}`,\n                '& > button': {\n                  display: 'block'\n                },\n                '& img': {\n                  opacity: 0.3\n                }\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: formik.values.name,\n              src: formik.values.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"error\",\n              onClick: () => formik.setFieldValue('image', ''),\n              sx: {\n                display: 'none',\n                left: 0,\n                position: 'absolute',\n                top: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ImageDropzone, {\n            onDrop: files => formik.setFieldValue('image', URL.createObjectURL(files[0])),\n            sx: {\n              minHeight: 126,\n              maxWidth: 126\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: formik.errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onClose,\n        variant: \"text\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: () => {\n          formik.handleSubmit();\n        },\n        variant: \"contained\",\n        children: mode === 'update' ? 'Update Variant' : 'Add Variant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductVariantDialog, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ProductVariantDialog;\nProductVariantDialog.defaultProps = {\n  open: false\n};\nProductVariantDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func,\n  onVariantsChange: PropTypes.func,\n  variant: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductVariantDialog\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/product-variant-dialog.js"],"names":["PropTypes","useFormik","Yup","toast","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormHelperText","Grid","IconButton","InputAdornment","MenuItem","Typography","Trash","TrashIcon","InputField","ImageDropzone","currencyOptions","label","value","ProductVariantDialog","props","open","onClose","onExited","onVariantsChange","variant","other","mode","formik","enableReinitialize","initialValues","currency","description","image","name","price","sku","submit","validationSchema","object","shape","string","oneOf","map","option","required","max","number","onSubmit","values","helpers","success","setStatus","setSubmitting","err","console","error","setErrors","message","sx","width","resetForm","Boolean","touched","errors","handleBlur","handleChange","minWidth","maxWidth","startAdornment","find","mb","borderRadius","boxShadow","display","position","theme","palette","primary","main","opacity","setFieldValue","left","top","files","URL","createObjectURL","minHeight","handleSubmit","defaultProps","propTypes","bool","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport { Trash as TrashIcon } from '../../icons/trash';\nimport { InputField } from '../input-field';\nimport { ImageDropzone } from '../image-dropzone';\n\nconst currencyOptions = [\n  {\n    label: 'EUR',\n    value: 'eur'\n  },\n  {\n    label: 'USD',\n    value: 'usd'\n  }\n];\n\nexport const ProductVariantDialog = (props) => {\n  const { open, onClose, onExited, onVariantsChange, variant, ...other } = props;\n  const mode = variant ? 'update' : 'add';\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      currency: variant?.currency || 'eur',\n      description: variant?.description || '',\n      image: variant?.image || '',\n      name: variant?.name || '',\n      price: variant?.price || 0,\n      sku: variant?.sku || '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      currency: Yup\n        .string()\n        .oneOf(currencyOptions.map((option) => option.value))\n        .required('Currency is required'),\n      description: Yup.string().max(1024).required('Description name is required'),\n      image: Yup.string(),\n      name: Yup.string().max(255).required('Variant name is required'),\n      price: Yup.number().required('Price is required'),\n      sku: Yup.string().max(255).required('Sku is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success(mode === 'update' ? 'Variant updated' : 'Variant saved');\n        onVariantsChange?.({ ...variant, ...values }, mode);\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n        onClose?.();\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      PaperProps={{\n        sx: {\n          width: '100%'\n        }\n      }}\n      TransitionProps={{\n        onExited: () => {\n          onExited?.();\n          formik.resetForm();\n        }\n      }}\n      {...other}\n    >\n      <DialogTitle>\n        {mode === 'update' ? 'Update Variant' : 'Add Variant'}\n      </DialogTitle>\n      <DialogContent>\n        <Grid\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.name && formik.errors.name)}\n              fullWidth\n              helperText={formik.touched.name && formik.errors.name}\n              label=\"Name\"\n              name=\"name\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              placeholder=\"e.g Green\"\n              value={formik.values.name}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.sku && formik.errors.sku)}\n              fullWidth\n              helperText={formik.touched.sku && formik.errors.sku}\n              label=\"SKU\"\n              name=\"sku\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              placeholder=\"D-293TX\"\n              value={formik.values.sku}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.description && formik.errors.description)}\n              fullWidth\n              helperText={formik.touched.description && formik.errors.description}\n              label=\"Description\"\n              multiline\n              name=\"description\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              placeholder=\"Product description\"\n              rows={4}\n              value={formik.values.description}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.currency && formik.errors.currency)}\n              helperText={formik.touched.currency && formik.errors.currency}\n              label=\"Currency\"\n              name=\"currency\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              select\n              sx={{ minWidth: 236 }}\n              value={formik.values.currency}\n            >\n              {currencyOptions.map((option) => (\n                <MenuItem\n                  key={option.value}\n                  value={option.value}\n                >\n                  {option.label}\n                </MenuItem>\n              ))}\n            </InputField>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.price && formik.errors.price)}\n              helperText={formik.touched.price && formik.errors.price}\n              label=\"Price\"\n              name=\"price\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              type=\"number\"\n              sx={{ maxWidth: 236 }}\n              value={formik.values.price}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    {currencyOptions\n                      .find((option) => option.value === formik.values.currency).label}\n                  </InputAdornment>\n                )\n              }}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mb: 1.25 }}\n              variant=\"subtitle2\"\n            >\n              Image\n            </Typography>\n            {formik.values.image\n              ? (\n                <Box\n                  sx={{\n                    borderRadius: 1,\n                    boxShadow: '0 0 0 1px rgba(24, 33, 77, 0.23)',\n                    display: 'flex',\n                    position: 'relative',\n                    width: 'fit-content',\n                    '& img': {\n                      borderRadius: 1,\n                      display: 'block',\n                      maxWidth: 126\n                    },\n                    '&:hover': {\n                      boxShadow: (theme) => `0 0 0 1px ${theme.palette.primary.main}`,\n                      '& > button': {\n                        display: 'block'\n                      },\n                      '& img': {\n                        opacity: 0.3\n                      }\n                    }\n                  }}\n                >\n                  <img\n                    alt={formik.values.name}\n                    src={formik.values.image}\n                  />\n                  <IconButton\n                    color=\"error\"\n                    onClick={() => formik.setFieldValue('image', '')}\n                    sx={{\n                      display: 'none',\n                      left: 0,\n                      position: 'absolute',\n                      top: 0\n                    }}\n                  >\n                    <TrashIcon fontSize=\"small\" />\n                  </IconButton>\n                </Box>\n              ) : (\n                <ImageDropzone\n                  onDrop={(files) => formik.setFieldValue('image', URL.createObjectURL(files[0]))}\n                  sx={{\n                    minHeight: 126,\n                    maxWidth: 126\n                  }}\n                />\n              )}\n          </Grid>\n          {formik.errors.submit && (\n            <Grid\n              item\n              xs={12}\n            >\n              <FormHelperText error>\n                {formik.errors.submit}\n              </FormHelperText>\n            </Grid>\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onClose}\n          variant=\"text\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => { formik.handleSubmit(); }}\n          variant=\"contained\"\n        >\n          {mode === 'update' ? 'Update Variant' : 'Add Variant'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nProductVariantDialog.defaultProps = {\n  open: false\n};\n\nProductVariantDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func,\n  onVariantsChange: PropTypes.func,\n  variant: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}