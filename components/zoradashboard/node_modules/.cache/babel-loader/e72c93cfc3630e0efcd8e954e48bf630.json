{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/reports/performance-indicators.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { ActionsMenu } from '../actions-menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stats = [{\n  content: '€4,800.00',\n  label: 'Revenue'\n}, {\n  content: '€4,900,24',\n  label: 'NET'\n}, {\n  content: '€1,600.50',\n  label: 'Pending orders'\n}, {\n  content: '€6,900.10',\n  label: 'Due'\n}, {\n  content: '€6,500.80',\n  label: 'Overdue'\n}];\nconst data = {\n  categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  series: [{\n    data: [0, 20, 40, 30, 30, 44, 90],\n    name: 'Revenue'\n  }]\n};\nexport const PerformanceIndicators = props => {\n  _s();\n\n  const theme = useTheme();\n  const [range, setRange] = useState('Last 7 days');\n  const ranges = [{\n    label: 'Last 7 days',\n    onClick: () => {\n      setRange('Last 7 days');\n    }\n  }, {\n    label: 'Last Month',\n    onClick: () => {\n      setRange('Last Month');\n    }\n  }, {\n    label: 'Last Year',\n    onClick: () => {\n      setRange('Last Year');\n    }\n  }];\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    legend: {\n      show: true\n    },\n    colors: ['rgba(49, 129, 237, 1)'],\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'gradient'\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      theme: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: data.categories,\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        offsetX: -12,\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      action: /*#__PURE__*/_jsxDEV(ActionsMenu, {\n        actions: ranges,\n        label: range,\n        size: \"small\",\n        variant: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this),\n      title: \"Key Performance Indicators\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          gap: 3,\n          display: 'grid',\n          gridTemplateColumns: {\n            md: 'repeat(5, 1fr)',\n            sm: 'repeat(2, 1fr)',\n            xs: 'repeat(1, 1fr)'\n          }\n        },\n        children: stats.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          sx: {\n            alignItems: 'center',\n            borderRadius: 1,\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"overline\",\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"h6\",\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, item.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        height: \"350\",\n        options: chartOptions,\n        series: data.series,\n        type: \"area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PerformanceIndicators, \"i2bGPP1lTeGsrqym7Z7p0scKLDU=\", false, function () {\n  return [useTheme];\n});\n\n_c = PerformanceIndicators;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformanceIndicators\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/reports/performance-indicators.js"],"names":["useState","Chart","Box","Card","CardContent","CardHeader","Divider","Typography","useTheme","ActionsMenu","stats","content","label","data","categories","series","name","PerformanceIndicators","props","theme","range","setRange","ranges","onClick","chartOptions","chart","background","stacked","toolbar","show","zoom","enabled","legend","colors","dataLabels","fill","type","grid","borderColor","palette","divider","xaxis","lines","yaxis","stroke","curve","mode","tooltip","axisBorder","color","axisTicks","labels","style","text","secondary","offsetX","gap","display","gridTemplateColumns","md","sm","xs","map","item","alignItems","borderRadius","p"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { ActionsMenu } from '../actions-menu';\n\nconst stats = [\n  {\n    content: '€4,800.00',\n    label: 'Revenue'\n  },\n  {\n    content: '€4,900,24',\n    label: 'NET'\n  },\n  {\n    content: '€1,600.50',\n    label: 'Pending orders'\n  },\n  {\n    content: '€6,900.10',\n    label: 'Due'\n  },\n  {\n    content: '€6,500.80',\n    label: 'Overdue'\n  }\n];\n\nconst data = {\n  categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  series: [\n    {\n      data: [0, 20, 40, 30, 30, 44, 90],\n      name: 'Revenue'\n    }\n  ]\n};\n\nexport const PerformanceIndicators = (props) => {\n  const theme = useTheme();\n  const [range, setRange] = useState('Last 7 days');\n\n  const ranges = [\n    {\n      label: 'Last 7 days',\n      onClick: () => { setRange('Last 7 days'); }\n    },\n    {\n      label: 'Last Month',\n      onClick: () => { setRange('Last Month'); }\n    },\n    {\n      label: 'Last Year',\n      onClick: () => { setRange('Last Year'); }\n    }\n  ];\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    legend: {\n      show: true\n    },\n    colors: ['rgba(49, 129, 237, 1)'],\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'gradient'\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      theme: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: data.categories,\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        offsetX: -12,\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n\n  return (\n    <Card\n      variant=\"outlined\"\n      {...props}\n    >\n      <CardHeader\n        action={(\n          <ActionsMenu\n            actions={ranges}\n            label={range}\n            size=\"small\"\n            variant=\"text\"\n          />\n        )}\n        title=\"Key Performance Indicators\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          sx={{\n            gap: 3,\n            display: 'grid',\n            gridTemplateColumns: {\n              md: 'repeat(5, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              xs: 'repeat(1, 1fr)'\n            }\n          }}\n        >\n          {stats.map((item) => (\n            <Card\n              key={item.label}\n              variant=\"outlined\"\n              sx={{\n                alignItems: 'center',\n                borderRadius: 1,\n                p: 2\n              }}\n            >\n              <Typography\n                color=\"textSecondary\"\n                variant=\"overline\"\n              >\n                {item.label}\n              </Typography>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h6\"\n              >\n                {item.content}\n              </Typography>\n            </Card>\n          ))}\n        </Box>\n        <Chart\n          height=\"350\"\n          options={chartOptions}\n          series={data.series}\n          type=\"area\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}