{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/components-data-states.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Button, Container, Skeleton, Table, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\nimport { DemoPreview } from '../components/demo-preview';\nimport { Scrollbar } from '../components/scrollbar';\nimport { ExclamationOutlined as ExclamationIcon } from '../icons/exclamation-outlined';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { QuestionMarkOutlined as QuestionMarkIcon } from '../icons/question-mark-outlined';\nimport { Refresh as RefreshIcon } from '../icons/refresh';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ComponentsDataStates = () => {\n  _s();\n\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Components: Data States | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        flexGrow: 1,\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          sx: {\n            mb: 4\n          },\n          variant: \"h4\",\n          children: \"Data States\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gap: 5,\n            gridAutoFlow: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(DemoPreview, {\n            description: \"Display a placeholder preview of your content before the data gets loaded to reduce load-time frustration.\",\n            title: \"Table loading state\",\n            children: [/*#__PURE__*/_jsxDEV(Scrollbar, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                sx: {\n                  minWidth: 600\n                },\n                children: /*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: ['Name', 'Phone', 'Email', 'Create at', 'Actions'].map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: column\n                    }, column, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 42\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 42\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 42\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DemoPreview, {\n            description: \"Display a feedback placeholder to let users know there is an empty object.\",\n            title: \"Component empty state\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                alignItems: 'center',\n                backgroundColor: 'neutral.100',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(QuestionMarkIcon, {\n                sx: {\n                  color: 'text.secondary'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                sx: {\n                  mt: 2\n                },\n                variant: \"body2\",\n                children: \"There are not objects here yet.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 30\n                }, this),\n                sx: {\n                  mt: 2\n                },\n                variant: \"contained\",\n                children: \"Create Object\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DemoPreview, {\n            description: \"Display a feedback placeholder to let users know there\\u2019s an server error.\",\n            title: \"Component error state\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                alignItems: 'center',\n                backgroundColor: 'neutral.100',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(ExclamationIcon, {\n                sx: {\n                  color: 'text.secondary'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                sx: {\n                  mt: 2\n                },\n                variant: \"body2\",\n                children: \"Error loading data, please try again.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 30\n                }, this),\n                sx: {\n                  mt: 2\n                },\n                variant: \"text\",\n                children: \"Reload Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ComponentsDataStates, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ComponentsDataStates;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentsDataStates\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/components-data-states.js"],"names":["useEffect","Helmet","Box","Button","Container","Skeleton","Table","TableCell","TableHead","TableRow","Typography","DemoPreview","Scrollbar","ExclamationOutlined","ExclamationIcon","Plus","PlusIcon","QuestionMarkOutlined","QuestionMarkIcon","Refresh","RefreshIcon","gtm","ComponentsDataStates","push","event","backgroundColor","flexGrow","py","mb","display","gap","gridAutoFlow","minWidth","map","column","p","alignItems","flexDirection","justifyContent","color","mt"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,QARF,EASEC,UATF,QAUO,mBAVP;AAWA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,mBAAmB,IAAIC,eAAhC,QAAuD,+BAAvD;AACA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,eAAjC;AACA,SAASC,oBAAoB,IAAIC,gBAAjC,QAAyD,iCAAzD;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACxCtB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,eAAe,EAAE,oBADf;AAEFC,QAAAA,QAAQ,EAAE,CAFR;AAGFC,QAAAA,EAAE,EAAE;AAHF,OADN;AAAA,6BAOE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,aADR;AAEE,UAAA,EAAE,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAFN;AAGE,UAAA,OAAO,EAAC,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,GAAD;AACE,UAAA,EAAE,EAAE;AACFC,YAAAA,OAAO,EAAE,MADP;AAEFC,YAAAA,GAAG,EAAE,CAFH;AAGFC,YAAAA,YAAY,EAAE;AAHZ,WADN;AAAA,kCAOE,QAAC,WAAD;AACE,YAAA,WAAW,EAAC,4GADd;AAEE,YAAA,KAAK,EAAC,qBAFR;AAAA,oCAIE,QAAC,SAAD;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAX;AAAA,uCACE,QAAC,SAAD;AAAA,yCACE,QAAC,QAAD;AAAA,8BACG,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,WAA3B,EAAwC,SAAxC,EAAmDC,GAAnD,CAAwDC,MAAD,iBACtD,QAAC,SAAD;AAAA,gCACGA;AADH,uBAAgBA,MAAhB;AAAA;AAAA;AAAA;AAAA,4BADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAiBE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE;AAAEC,gBAAAA,CAAC,EAAE;AAAL,eAAT;AAAA,sCACE,QAAC,QAAD;AAAU,gBAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AAAU,gBAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,QAAD;AAAU,gBAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eA8BE,QAAC,WAAD;AACE,YAAA,WAAW,EAAC,4EADd;AAEE,YAAA,KAAK,EAAC,uBAFR;AAAA,mCAIE,QAAC,GAAD;AACE,cAAA,EAAE,EAAE;AACFC,gBAAAA,UAAU,EAAE,QADV;AAEFX,gBAAAA,eAAe,EAAE,aAFf;AAGFI,gBAAAA,OAAO,EAAE,MAHP;AAIFQ,gBAAAA,aAAa,EAAE,QAJb;AAKFC,gBAAAA,cAAc,EAAE,QALd;AAMFH,gBAAAA,CAAC,EAAE;AAND,eADN;AAAA,sCAUE,QAAC,gBAAD;AAAkB,gBAAA,EAAE,EAAE;AAAEI,kBAAAA,KAAK,EAAE;AAAT;AAAtB;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE,QAAC,UAAD;AACE,gBAAA,KAAK,EAAC,eADR;AAEE,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,EAAE,EAAE;AAAN,iBAFN;AAGE,gBAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAkBE,QAAC,MAAD;AACE,gBAAA,KAAK,EAAC,SADR;AAEE,gBAAA,SAAS,eAAE,QAAC,QAAD;AAAU,kBAAA,QAAQ,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,wBAFb;AAGE,gBAAA,EAAE,EAAE;AAAEA,kBAAAA,EAAE,EAAE;AAAN,iBAHN;AAIE,gBAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBA9BF,eA8DE,QAAC,WAAD;AACE,YAAA,WAAW,EAAC,gFADd;AAEE,YAAA,KAAK,EAAC,uBAFR;AAAA,mCAIE,QAAC,GAAD;AACE,cAAA,EAAE,EAAE;AACFJ,gBAAAA,UAAU,EAAE,QADV;AAEFX,gBAAAA,eAAe,EAAE,aAFf;AAGFI,gBAAAA,OAAO,EAAE,MAHP;AAIFQ,gBAAAA,aAAa,EAAE,QAJb;AAKFC,gBAAAA,cAAc,EAAE,QALd;AAMFH,gBAAAA,CAAC,EAAE;AAND,eADN;AAAA,sCAUE,QAAC,eAAD;AAAiB,gBAAA,EAAE,EAAE;AAAEI,kBAAAA,KAAK,EAAE;AAAT;AAArB;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE,QAAC,UAAD;AACE,gBAAA,KAAK,EAAC,eADR;AAEE,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,EAAE,EAAE;AAAN,iBAFN;AAGE,gBAAA,OAAO,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAkBE,QAAC,MAAD;AACE,gBAAA,KAAK,EAAC,SADR;AAEE,gBAAA,SAAS,eAAE,QAAC,WAAD;AAAa,kBAAA,QAAQ,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,wBAFb;AAGE,gBAAA,EAAE,EAAE;AAAEA,kBAAAA,EAAE,EAAE;AAAN,iBAHN;AAIE,gBAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBA9DF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAuHD,CA5HM;;GAAMlB,oB;;KAAAA,oB","sourcesContent":["import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Button,\n  Container,\n  Skeleton,\n  Table,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { DemoPreview } from '../components/demo-preview';\nimport { Scrollbar } from '../components/scrollbar';\nimport { ExclamationOutlined as ExclamationIcon } from '../icons/exclamation-outlined';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { QuestionMarkOutlined as QuestionMarkIcon } from '../icons/question-mark-outlined';\nimport { Refresh as RefreshIcon } from '../icons/refresh';\nimport gtm from '../lib/gtm';\n\nexport const ComponentsDataStates = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Components: Data States | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1,\n          py: 4\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 4 }}\n            variant=\"h4\"\n          >\n            Data States\n          </Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              gap: 5,\n              gridAutoFlow: 'row'\n            }}\n          >\n            <DemoPreview\n              description=\"Display a placeholder preview of your content before the data gets loaded to reduce load-time frustration.\"\n              title=\"Table loading state\"\n            >\n              <Scrollbar>\n                <Table sx={{ minWidth: 600 }}>\n                  <TableHead>\n                    <TableRow>\n                      {['Name', 'Phone', 'Email', 'Create at', 'Actions'].map((column) => (\n                        <TableCell key={column}>\n                          {column}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </Scrollbar>\n              <Box sx={{ p: 2 }}>\n                <Skeleton height={42} />\n                <Skeleton height={42} />\n                <Skeleton height={42} />\n              </Box>\n            </DemoPreview>\n            <DemoPreview\n              description=\"Display a feedback placeholder to let users know there is an empty object.\"\n              title=\"Component empty state\"\n            >\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  backgroundColor: 'neutral.100',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'center',\n                  p: 3\n                }}\n              >\n                <QuestionMarkIcon sx={{ color: 'text.secondary' }} />\n                <Typography\n                  color=\"textSecondary\"\n                  sx={{ mt: 2 }}\n                  variant=\"body2\"\n                >\n                  There are not objects here yet.\n                </Typography>\n                <Button\n                  color=\"primary\"\n                  startIcon={<PlusIcon fontSize=\"small\" />}\n                  sx={{ mt: 2 }}\n                  variant=\"contained\"\n                >\n                  Create Object\n                </Button>\n              </Box>\n            </DemoPreview>\n            <DemoPreview\n              description=\"Display a feedback placeholder to let users know there’s an server error.\"\n              title=\"Component error state\"\n            >\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  backgroundColor: 'neutral.100',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'center',\n                  p: 3\n                }}\n              >\n                <ExclamationIcon sx={{ color: 'text.secondary' }} />\n                <Typography\n                  color=\"textSecondary\"\n                  sx={{ mt: 2 }}\n                  variant=\"body2\"\n                >\n                  Error loading data, please try again.\n                </Typography>\n                <Button\n                  color=\"primary\"\n                  startIcon={<RefreshIcon fontSize=\"small\" />}\n                  sx={{ mt: 2 }}\n                  variant=\"text\"\n                >\n                  Reload Data\n                </Button>\n              </Box>\n            </DemoPreview>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}