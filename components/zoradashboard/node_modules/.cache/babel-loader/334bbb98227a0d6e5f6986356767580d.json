{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/invoice-create.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport numeral from 'numeral';\nimport toast from 'react-hot-toast';\nimport { Box, Button, Card, CardActions, CardContent, Checkbox, Container, Divider, FormControlLabel, Grid, IconButton, InputAdornment, Typography } from '@material-ui/core';\nimport { DateField } from '../components/date-field';\nimport { InputField } from '../components/input-field';\nimport { ArrowLeft as ArrowLeftIcon } from '../icons/arrow-left';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { Trash as TrashIcon } from '../icons/trash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InvoiceCreate = () => {\n  _s();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      customerEmail: '',\n      customerName: '',\n      dueDate: null,\n      id: '#DEV5438',\n      issueDate: null,\n      isTaxable: false,\n      items: [{\n        description: '',\n        price: '',\n        quantity: 1\n      }],\n      note: '',\n      subject: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      customerEmail: Yup.string().email().max(255).required('Customer email is required'),\n      customerName: Yup.string().max(255).required('Customer name is required'),\n      dueDate: Yup.date().required('Due date is required'),\n      issueDate: Yup.date().required('Issued date is required'),\n      isTaxable: Yup.boolean().required('Taxable is required'),\n      items: Yup.array().of(Yup.object().shape({\n        description: Yup.string().max(255).required('Service description is required'),\n        quantity: Yup.number().min(1).required('Quantity is required'),\n        price: Yup.number().required('Price is required')\n      })),\n      note: Yup.string().max(1024),\n      subject: Yup.string().max(255).required('Subject is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Invoice created');\n        helpers.setStatus({\n          success: true\n        });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  const handleAddItem = () => {\n    formik.setFieldValue('items', [...formik.values.items, {\n      description: '',\n      price: '',\n      quantity: 1\n    }]);\n  };\n\n  const handleDeleteItem = itemIndex => {\n    if (formik.values.items.length > 1) {\n      formik.setFieldValue('items', formik.values.items.filter((item, index) => index !== itemIndex));\n    }\n  };\n\n  const totalInvoicePrice = formik.values.items.reduce((acc, item) => acc + Number.parseFloat(item.price) * item.quantity, 0);\n\n  const getItemError = (index, property) => {\n    var _formik$touched, _formik$errors, _formik$touched2, _formik$touched2$item, _formik$errors2, _formik$errors2$items;\n\n    return (formik === null || formik === void 0 ? void 0 : (_formik$touched = formik.touched) === null || _formik$touched === void 0 ? void 0 : _formik$touched.items) && (formik === null || formik === void 0 ? void 0 : (_formik$errors = formik.errors) === null || _formik$errors === void 0 ? void 0 : _formik$errors.items) && (formik === null || formik === void 0 ? void 0 : (_formik$touched2 = formik.touched) === null || _formik$touched2 === void 0 ? void 0 : (_formik$touched2$item = _formik$touched2.items[index]) === null || _formik$touched2$item === void 0 ? void 0 : _formik$touched2$item[property]) && (formik === null || formik === void 0 ? void 0 : (_formik$errors2 = formik.errors) === null || _formik$errors2 === void 0 ? void 0 : (_formik$errors2$items = _formik$errors2.items[index]) === null || _formik$errors2$items === void 0 ? void 0 : _formik$errors2$items[property]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Invoice: Create | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            py: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              component: RouterLink,\n              startIcon: /*#__PURE__*/_jsxDEV(ArrowLeftIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 28\n              }, this),\n              to: \"/dashboard/invoices\",\n              variant: \"text\",\n              children: \"Invoices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"h4\",\n            children: \"Create Invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.subject && formik.errors.subject),\n                    fullWidth: true,\n                    helperText: formik.touched.subject && formik.errors.subject,\n                    label: \"Subject\",\n                    name: \"subject\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.subject\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    disabled: true,\n                    error: Boolean(formik.touched.id && formik.errors.id),\n                    fullWidth: true,\n                    helperText: formik.touched.id && formik.errors.id,\n                    label: \"Invoice #\",\n                    name: \"id\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.customerName && formik.errors.customerName),\n                    fullWidth: true,\n                    helperText: formik.touched.customerName && formik.errors.customerName,\n                    label: \"Customer Name\",\n                    name: \"customerName\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    placeholder: \"Dinesh Chugtai\",\n                    value: formik.values.customerName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.customerEmail && formik.errors.customerEmail),\n                    fullWidth: true,\n                    helperText: formik.touched.customerEmail && formik.errors.customerEmail,\n                    label: \"Customer Email\",\n                    name: \"customerEmail\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    type: \"email\",\n                    placeholder: \"dinesh@pipedpiper.com\",\n                    value: formik.values.customerEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(DateField, {\n                    error: Boolean(formik.touched.issueDate && formik.errors.issueDate),\n                    fullWidth: true,\n                    helperText: formik.touched.issueDate && formik.errors.issueDate,\n                    label: \"Issued Date\",\n                    name: \"issueDate\",\n                    onChange: date => formik.setFieldValue('issueDate', date),\n                    value: formik.values.issueDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(DateField, {\n                    error: Boolean(formik.touched.dueDate && formik.errors.dueDate),\n                    fullWidth: true,\n                    helperText: formik.touched.dueDate && formik.errors.dueDate,\n                    label: \"Due Date\",\n                    name: \"dueDate\",\n                    onChange: date => formik.setFieldValue('dueDate', date),\n                    value: formik.values.dueDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), formik.values.items.map((item, index) => {\n                  const totalPrice = Number.parseFloat(item.price) * item.quantity;\n                  return (\n                    /*#__PURE__*/\n                    // eslint-disable-next-line react/no-array-index-key\n                    _jsxDEV(Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        md: 6,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(InputField, {\n                          error: Boolean(getItemError(index, 'description')),\n                          fullWidth: true,\n                          helperText: getItemError(index, 'description'),\n                          label: \"Item\",\n                          name: `items[${index}].description`,\n                          onBlur: formik.handleBlur,\n                          onChange: formik.handleChange,\n                          placeholder: \"Service description\",\n                          value: item.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 260,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        md: 6,\n                        xs: 12,\n                        sx: {\n                          display: 'flex'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          container: true,\n                          spacing: 2,\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: /*#__PURE__*/_jsxDEV(InputField, {\n                              error: Boolean(getItemError(index, 'quantity')),\n                              fullWidth: true,\n                              helperText: getItemError(index, 'quantity'),\n                              label: \"Qty\",\n                              name: `items[${index}].quantity`,\n                              onBlur: formik.handleBlur,\n                              onChange: formik.handleChange,\n                              value: item.quantity\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 286,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 282,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: /*#__PURE__*/_jsxDEV(InputField, {\n                              error: Boolean(getItemError(index, 'price')),\n                              fullWidth: true,\n                              helperText: getItemError(index, 'price'),\n                              label: \"Price\",\n                              name: `items[${index}].price`,\n                              onBlur: formik.handleBlur,\n                              onChange: formik.handleChange,\n                              value: item.price,\n                              InputProps: {\n                                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                  position: \"start\",\n                                  children: \"$\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 312,\n                                  columnNumber: 37\n                                }, this)\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 301,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 297,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: /*#__PURE__*/_jsxDEV(InputField, {\n                              disabled: true,\n                              fullWidth: true,\n                              label: \"Total\",\n                              onBlur: formik.handleBlur,\n                              onChange: formik.handleChange,\n                              value: Number.isNaN(totalPrice) ? '' : totalPrice,\n                              InputProps: {\n                                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                  position: \"start\",\n                                  children: \"$\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 330,\n                                  columnNumber: 37\n                                }, this)\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 321,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 317,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            ml: 2,\n                            mt: 3\n                          },\n                          children: /*#__PURE__*/_jsxDEV(IconButton, {\n                            color: \"primary\",\n                            onClick: () => handleDeleteItem(index),\n                            type: \"button\",\n                            children: /*#__PURE__*/_jsxDEV(TrashIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 347,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 342,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 336,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 25\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this)\n                  );\n                }), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sx: {\n                    alignItems: 'center',\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    onClick: handleAddItem,\n                    startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 34\n                    }, this),\n                    variant: \"text\",\n                    children: \"Add Item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      flexGrow: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    sx: {\n                      mr: 1\n                    },\n                    variant: \"subtitle2\",\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textPrimary\",\n                    variant: \"h6\",\n                    children: numeral(totalInvoicePrice).format('$0,0.00')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: formik.values.isTaxable,\n                      onChange: event => formik.setFieldValue('isTaxable', event.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 25\n                    }, this),\n                    label: \"Taxable (VAT 19%)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.note && formik.errors.note),\n                    fullWidth: true,\n                    helperText: formik.touched.note && formik.errors.note,\n                    label: \"Additional Notes\",\n                    multiline: true,\n                    name: \"note\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    placeholder: \"Client notes\",\n                    rows: 4,\n                    value: formik.values.note\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              sx: {\n                justifyContent: 'flex-end'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Create Invoice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(InvoiceCreate, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = InvoiceCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceCreate\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/invoice-create.js"],"names":["Fragment","Link","RouterLink","Helmet","useFormik","Yup","numeral","toast","Box","Button","Card","CardActions","CardContent","Checkbox","Container","Divider","FormControlLabel","Grid","IconButton","InputAdornment","Typography","DateField","InputField","ArrowLeft","ArrowLeftIcon","Plus","PlusIcon","Trash","TrashIcon","InvoiceCreate","formik","enableReinitialize","initialValues","customerEmail","customerName","dueDate","id","issueDate","isTaxable","items","description","price","quantity","note","subject","submit","validationSchema","object","shape","string","email","max","required","date","boolean","array","of","number","min","onSubmit","values","helpers","success","setStatus","setSubmitting","err","console","error","setErrors","message","handleAddItem","setFieldValue","handleDeleteItem","itemIndex","length","filter","item","index","totalInvoicePrice","reduce","acc","Number","parseFloat","getItemError","property","touched","errors","backgroundColor","flexGrow","py","mb","handleSubmit","Boolean","handleBlur","handleChange","map","totalPrice","display","startAdornment","isNaN","ml","mt","alignItems","mr","format","event","target","checked","justifyContent"],"mappings":"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","sourcesContent":["import { Fragment } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport numeral from 'numeral';\nimport toast from 'react-hot-toast';\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Checkbox,\n  Container,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Typography\n} from '@material-ui/core';\nimport { DateField } from '../components/date-field';\nimport { InputField } from '../components/input-field';\nimport { ArrowLeft as ArrowLeftIcon } from '../icons/arrow-left';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { Trash as TrashIcon } from '../icons/trash';\n\nexport const InvoiceCreate = () => {\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      customerEmail: '',\n      customerName: '',\n      dueDate: null,\n      id: '#DEV5438',\n      issueDate: null,\n      isTaxable: false,\n      items: [\n        {\n          description: '',\n          price: '',\n          quantity: 1\n        }\n      ],\n      note: '',\n      subject: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      customerEmail: Yup.string().email().max(255).required('Customer email is required'),\n      customerName: Yup.string().max(255).required('Customer name is required'),\n      dueDate: Yup.date().required('Due date is required'),\n      issueDate: Yup.date().required('Issued date is required'),\n      isTaxable: Yup.boolean().required('Taxable is required'),\n      items: Yup.array().of(Yup.object().shape({\n        description: Yup.string().max(255).required('Service description is required'),\n        quantity: Yup.number().min(1).required('Quantity is required'),\n        price: Yup.number().required('Price is required')\n      })),\n      note: Yup.string().max(1024),\n      subject: Yup.string().max(255).required('Subject is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Invoice created');\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  const handleAddItem = () => {\n    formik.setFieldValue('items', [\n      ...formik.values.items, {\n        description: '',\n        price: '',\n        quantity: 1\n      }\n    ]);\n  };\n\n  const handleDeleteItem = (itemIndex) => {\n    if (formik.values.items.length > 1) {\n      formik.setFieldValue('items',\n        formik.values.items.filter((item, index) => index !== itemIndex));\n    }\n  };\n\n  const totalInvoicePrice = formik.values.items.reduce((acc, item) => acc\n    + (Number.parseFloat(item.price) * item.quantity), 0);\n\n  const getItemError = (index, property) => formik?.touched?.items\n    && formik?.errors?.items\n    && formik?.touched?.items[index]?.[property]\n    && formik?.errors?.items[index]?.[property];\n\n  return (\n    <>\n      <Helmet>\n        <title>Invoice: Create | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Box sx={{ py: 4 }}>\n            <Box sx={{ mb: 2 }}>\n              <Button\n                color=\"primary\"\n                component={RouterLink}\n                startIcon={<ArrowLeftIcon />}\n                to=\"/dashboard/invoices\"\n                variant=\"text\"\n              >\n                Invoices\n              </Button>\n            </Box>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              Create Invoice\n            </Typography>\n          </Box>\n          <Card variant=\"outlined\">\n            <form onSubmit={formik.handleSubmit}>\n              <CardContent>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.subject && formik.errors.subject)}\n                      fullWidth\n                      helperText={formik.touched.subject && formik.errors.subject}\n                      label=\"Subject\"\n                      name=\"subject\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.subject}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <InputField\n                      disabled\n                      error={Boolean(formik.touched.id && formik.errors.id)}\n                      fullWidth\n                      helperText={formik.touched.id && formik.errors.id}\n                      label=\"Invoice #\"\n                      name=\"id\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.id}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.customerName\n                        && formik.errors.customerName)}\n                      fullWidth\n                      helperText={formik.touched.customerName\n                      && formik.errors.customerName}\n                      label=\"Customer Name\"\n                      name=\"customerName\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      placeholder=\"Dinesh Chugtai\"\n                      value={formik.values.customerName}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.customerEmail\n                        && formik.errors.customerEmail)}\n                      fullWidth\n                      helperText={formik.touched.customerEmail\n                      && formik.errors.customerEmail}\n                      label=\"Customer Email\"\n                      name=\"customerEmail\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      type=\"email\"\n                      placeholder=\"dinesh@pipedpiper.com\"\n                      value={formik.values.customerEmail}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <DateField\n                      error={Boolean(formik.touched.issueDate && formik.errors.issueDate)}\n                      fullWidth\n                      helperText={formik.touched.issueDate && formik.errors.issueDate}\n                      label=\"Issued Date\"\n                      name=\"issueDate\"\n                      onChange={(date) => formik.setFieldValue('issueDate', date)}\n                      value={formik.values.issueDate}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <DateField\n                      error={Boolean(formik.touched.dueDate && formik.errors.dueDate)}\n                      fullWidth\n                      helperText={formik.touched.dueDate && formik.errors.dueDate}\n                      label=\"Due Date\"\n                      name=\"dueDate\"\n                      onChange={(date) => formik.setFieldValue('dueDate', date)}\n                      value={formik.values.dueDate}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <Divider />\n                  </Grid>\n                  {formik.values.items.map((item, index) => {\n                    const totalPrice = Number.parseFloat(item.price) * item.quantity;\n\n                    return (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <Fragment key={index}>\n                        <Grid\n                          item\n                          md={6}\n                          xs={12}\n                        >\n                          <InputField\n                            error={Boolean(getItemError(index, 'description'))}\n                            fullWidth\n                            helperText={getItemError(index, 'description')}\n                            label=\"Item\"\n                            name={`items[${index}].description`}\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            placeholder=\"Service description\"\n                            value={item.description}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          md={6}\n                          xs={12}\n                          sx={{ display: 'flex' }}\n                        >\n                          <Grid\n                            container\n                            spacing={2}\n                          >\n                            <Grid\n                              item\n                              xs={4}\n                            >\n                              <InputField\n                                error={Boolean(getItemError(index, 'quantity'))}\n                                fullWidth\n                                helperText={getItemError(index, 'quantity')}\n                                label=\"Qty\"\n                                name={`items[${index}].quantity`}\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                value={item.quantity}\n                              />\n                            </Grid>\n                            <Grid\n                              item\n                              xs={4}\n                            >\n                              <InputField\n                                error={Boolean(getItemError(index, 'price'))}\n                                fullWidth\n                                helperText={getItemError(index, 'price')}\n                                label=\"Price\"\n                                name={`items[${index}].price`}\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                value={item.price}\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">$</InputAdornment>\n                                  )\n                                }}\n                              />\n                            </Grid>\n                            <Grid\n                              item\n                              xs={4}\n                            >\n                              <InputField\n                                disabled\n                                fullWidth\n                                label=\"Total\"\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                value={Number.isNaN(totalPrice) ? '' : totalPrice}\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">$</InputAdornment>\n                                  )\n                                }}\n                              />\n                            </Grid>\n                          </Grid>\n                          <Box\n                            sx={{\n                              ml: 2,\n                              mt: 3\n                            }}\n                          >\n                            <IconButton\n                              color=\"primary\"\n                              onClick={() => handleDeleteItem(index)}\n                              type=\"button\"\n                            >\n                              <TrashIcon />\n                            </IconButton>\n                          </Box>\n                        </Grid>\n                      </Fragment>\n                    );\n                  })}\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      alignItems: 'center',\n                      display: 'flex'\n                    }}\n                  >\n                    <Button\n                      color=\"primary\"\n                      onClick={handleAddItem}\n                      startIcon={<PlusIcon fontSize=\"small\" />}\n                      variant=\"text\"\n                    >\n                      Add Item\n                    </Button>\n                    <Box sx={{ flexGrow: 1 }} />\n                    <Typography\n                      color=\"textSecondary\"\n                      sx={{ mr: 1 }}\n                      variant=\"subtitle2\"\n                    >\n                      Total\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h6\"\n                    >\n                      {numeral(totalInvoicePrice).format('$0,0.00')}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <FormControlLabel\n                      control={(\n                        <Checkbox\n                          checked={formik.values.isTaxable}\n                          onChange={(event) => formik.setFieldValue('isTaxable',\n                            event.target.checked)}\n                        />\n                      )}\n                      label=\"Taxable (VAT 19%)\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <Divider />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.note && formik.errors.note)}\n                      fullWidth\n                      helperText={formik.touched.note && formik.errors.note}\n                      label=\"Additional Notes\"\n                      multiline\n                      name=\"note\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      placeholder=\"Client notes\"\n                      rows={4}\n                      value={formik.values.note}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n              <CardActions sx={{ justifyContent: 'flex-end' }}>\n                <Button\n                  color=\"primary\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Create Invoice\n                </Button>\n              </CardActions>\n            </form>\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}