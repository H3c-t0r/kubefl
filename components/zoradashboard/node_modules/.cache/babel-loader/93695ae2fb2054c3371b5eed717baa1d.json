{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/image-dropzone.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { Avatar, Box, Button, Typography } from '@material-ui/core';\nimport { Upload as UploadIcon } from '../icons/upload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageDropzone = props => {\n  _s();\n\n  const {\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop,\n    sx\n  } = props;\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      alignItems: 'center',\n      borderColor: 'neutral.200',\n      borderRadius: 1,\n      borderStyle: 'dashed',\n      borderWidth: 1,\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      outline: 'none',\n      width: '100%',\n      py: 2,\n      ...(isDragActive && {\n        borderColor: 'primary.main',\n        backgroundColor: 'action.hover'\n      }),\n      '&:hover': {\n        borderColor: 'primary.main',\n        backgroundColor: 'action.hover'\n      },\n      ...sx\n    },\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n      sx: {\n        backgroundColor: 'rgba(238, 240, 242, 1)',\n        color: 'text.secondary',\n        height: 36,\n        width: 36\n      },\n      children: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"text\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      sx: {\n        color: 'text.secondary'\n      },\n      variant: \"caption\",\n      children: \"Select images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageDropzone, \"YfI2qKQYNDOj7ozxGshQtast5Mk=\", false, function () {\n  return [useDropzone];\n});\n\n_c = ImageDropzone;\nImageDropzone.propTypes = {\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  onDrop: PropTypes.func,\n  sx: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageDropzone\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/image-dropzone.js"],"names":["PropTypes","useDropzone","Avatar","Box","Button","Typography","Upload","UploadIcon","ImageDropzone","props","accept","maxFiles","maxSize","minSize","onDrop","sx","getRootProps","getInputProps","isDragActive","alignItems","borderColor","borderRadius","borderStyle","borderWidth","cursor","display","flexDirection","flexWrap","justifyContent","outline","width","py","backgroundColor","color","height","propTypes","oneOfType","string","arrayOf","number","func","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { Avatar, Box, Button, Typography } from '@material-ui/core';\nimport { Upload as UploadIcon } from '../icons/upload';\n\nexport const ImageDropzone = (props) => {\n  const { accept, maxFiles, maxSize, minSize, onDrop, sx } = props;\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop\n  });\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        borderColor: 'neutral.200',\n        borderRadius: 1,\n        borderStyle: 'dashed',\n        borderWidth: 1,\n        cursor: 'pointer',\n        display: 'flex',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        outline: 'none',\n        width: '100%',\n        py: 2,\n        ...(isDragActive && {\n          borderColor: 'primary.main',\n          backgroundColor: 'action.hover'\n        }),\n        '&:hover': {\n          borderColor: 'primary.main',\n          backgroundColor: 'action.hover'\n        },\n        ...sx\n      }}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <Avatar\n        sx={{\n          backgroundColor: 'rgba(238, 240, 242, 1)',\n          color: 'text.secondary',\n          height: 36,\n          width: 36\n        }}\n      >\n        <UploadIcon />\n      </Avatar>\n      <Button\n        color=\"primary\"\n        variant=\"text\"\n      >\n        Upload\n      </Button>\n      <Typography\n        align=\"center\"\n        sx={{ color: 'text.secondary' }}\n        variant=\"caption\"\n      >\n        Select images\n      </Typography>\n    </Box>\n  );\n};\n\nImageDropzone.propTypes = {\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  onDrop: PropTypes.func,\n  sx: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}