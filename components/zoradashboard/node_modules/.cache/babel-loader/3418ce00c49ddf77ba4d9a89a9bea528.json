{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/dashboard-sidebar-item.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Collapse, List, Typography } from '@material-ui/core';\nimport { ChevronRight as ChevronRightIcon } from '../icons/chevron-right';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport { ExternalLink as ExternalLinkIcon } from '../icons/external-link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardSidebarItem = props => {\n  _s();\n\n  const {\n    active,\n    activeHref,\n    external,\n    href,\n    icon: Icon,\n    items,\n    onOpen,\n    open,\n    pinned,\n    title\n  } = props;\n  const {\n    t\n  } = useTranslation(); // Branch\n\n  if (items) {\n    return /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          endIcon: open ? /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this),\n          fullWidth: true,\n          onClick: onOpen,\n          startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }, this),\n          sx: {\n            justifyContent: 'flex-start',\n            lineHeight: 0,\n            minWidth: 'fit-content',\n            px: 1.25,\n            py: 1.25,\n            '& .MuiButton-startIcon': {\n              color: active ? 'primary' : 'text.secondary',\n              margin: 0\n            },\n            '& .MuiButton-endIcon': {\n              color: 'action.disabled',\n              display: pinned ? 'flex' : 'none',\n              marginLeft: 'auto'\n            }\n          },\n          variant: \"text\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            sx: {\n              color: active ? 'primary' : 'text.primary',\n              display: pinned ? 'flex' : 'none',\n              ml: 1.25\n            },\n            variant: \"inherit\",\n            children: t(title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          sx: {\n            width: '100%'\n          },\n          children: items.map(item => {\n            const isActive = activeHref === item.href;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                component: RouterLink,\n                fullWidth: true,\n                sx: {\n                  color: isActive ? 'primary' : 'text.secondary',\n                  fontWeight: 400,\n                  justifyContent: 'flex-start',\n                  pl: 5,\n                  whiteSpace: 'nowrap'\n                },\n                to: item.href,\n                variant: \"text\",\n                children: t(item.title)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, item.href, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } // Leaf\n\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      component: RouterLink,\n      endIcon: external && /*#__PURE__*/_jsxDEV(ExternalLinkIcon, {\n        sx: {\n          color: 'action.disabled'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 30\n      }, this),\n      fullWidth: true,\n      startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 20\n      }, this),\n      target: external ? '_target' : '_self',\n      sx: {\n        justifyContent: 'flex-start',\n        lineHeight: 0,\n        minWidth: 'fit-content',\n        px: 1.25,\n        py: 1.25,\n        '& .MuiButton-startIcon': {\n          color: active ? 'primary' : 'text.secondary',\n          margin: 0\n        },\n        '& .MuiButton-endIcon': {\n          color: 'action.disabled',\n          display: pinned ? 'flex' : 'none',\n          marginLeft: 'auto'\n        }\n      },\n      to: href,\n      variant: \"text\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        sx: {\n          color: active ? 'primary' : 'text.primary',\n          display: pinned ? 'flex' : 'none',\n          ml: 1.25\n        },\n        variant: \"inherit\",\n        children: t(title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardSidebarItem, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DashboardSidebarItem;\nDashboardSidebarItem.defaultProps = {\n  open: false,\n  pinned: false\n};\nDashboardSidebarItem.propTypes = {\n  active: PropTypes.bool,\n  activeHref: PropTypes.string,\n  external: PropTypes.bool,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  items: PropTypes.array,\n  onOpen: PropTypes.func,\n  open: PropTypes.bool,\n  pinned: PropTypes.bool,\n  title: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardSidebarItem\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/dashboard-sidebar-item.js"],"names":["Link","RouterLink","PropTypes","useTranslation","Button","Collapse","List","Typography","ChevronRight","ChevronRightIcon","ChevronDown","ChevronDownIcon","ExternalLink","ExternalLinkIcon","DashboardSidebarItem","props","active","activeHref","external","href","icon","Icon","items","onOpen","open","pinned","title","t","width","justifyContent","lineHeight","minWidth","px","py","color","margin","display","marginLeft","ml","map","item","isActive","fontWeight","pl","whiteSpace","defaultProps","propTypes","bool","string","elementType","array","func"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Collapse, List, Typography } from '@material-ui/core';\nimport { ChevronRight as ChevronRightIcon } from '../icons/chevron-right';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport { ExternalLink as ExternalLinkIcon } from '../icons/external-link';\n\nexport const DashboardSidebarItem = (props) => {\n  const {\n    active,\n    activeHref,\n    external,\n    href,\n    icon: Icon,\n    items,\n    onOpen,\n    open,\n    pinned,\n    title\n  } = props;\n  const { t } = useTranslation();\n\n  // Branch\n  if (items) {\n    return (\n      <List\n        disablePadding\n        sx={{ width: '100%' }}\n      >\n        <li>\n          <Button\n            endIcon={open\n              ? <ChevronDownIcon fontSize=\"small\" />\n              : <ChevronRightIcon fontSize=\"small\" />}\n            fullWidth\n            onClick={onOpen}\n            startIcon={<Icon />}\n            sx={{\n              justifyContent: 'flex-start',\n              lineHeight: 0,\n              minWidth: 'fit-content',\n              px: 1.25,\n              py: 1.25,\n              '& .MuiButton-startIcon': {\n                color: active ? 'primary' : 'text.secondary',\n                margin: 0\n              },\n              '& .MuiButton-endIcon': {\n                color: 'action.disabled',\n                display: pinned ? 'flex' : 'none',\n                marginLeft: 'auto'\n              }\n            }}\n            variant=\"text\"\n          >\n            <Typography\n              color=\"textPrimary\"\n              sx={{\n                color: active ? 'primary' : 'text.primary',\n                display: pinned ? 'flex' : 'none',\n                ml: 1.25\n              }}\n              variant=\"inherit\"\n            >\n              {t(title)}\n            </Typography>\n          </Button>\n        </li>\n        <Collapse\n          in={open}\n          unmountOnExit\n        >\n          <List\n            disablePadding\n            sx={{ width: '100%' }}\n          >\n            {items.map((item) => {\n              const isActive = activeHref === item.href;\n\n              return (\n                <li key={item.href}>\n                  <Button\n                    component={RouterLink}\n                    fullWidth\n                    sx={{\n                      color: isActive ? 'primary' : 'text.secondary',\n                      fontWeight: 400,\n                      justifyContent: 'flex-start',\n                      pl: 5,\n                      whiteSpace: 'nowrap'\n                    }}\n                    to={item.href}\n                    variant=\"text\"\n                  >\n                    {t(item.title)}\n                  </Button>\n                </li>\n              );\n            })}\n          </List>\n        </Collapse>\n      </List>\n    );\n  }\n\n  // Leaf\n  return (\n    <li>\n      <Button\n        component={RouterLink}\n        endIcon={external && <ExternalLinkIcon sx={{ color: 'action.disabled' }} />}\n        fullWidth\n        startIcon={<Icon />}\n        target={external ? '_target' : '_self'}\n        sx={{\n          justifyContent: 'flex-start',\n          lineHeight: 0,\n          minWidth: 'fit-content',\n          px: 1.25,\n          py: 1.25,\n          '& .MuiButton-startIcon': {\n            color: active ? 'primary' : 'text.secondary',\n            margin: 0\n          },\n          '& .MuiButton-endIcon': {\n            color: 'action.disabled',\n            display: pinned ? 'flex' : 'none',\n            marginLeft: 'auto'\n          }\n        }}\n        to={href}\n        variant=\"text\"\n      >\n        <Typography\n          color=\"textPrimary\"\n          sx={{\n            color: active ? 'primary' : 'text.primary',\n            display: pinned ? 'flex' : 'none',\n            ml: 1.25\n          }}\n          variant=\"inherit\"\n        >\n          {t(title)}\n        </Typography>\n      </Button>\n    </li>\n  );\n};\n\nDashboardSidebarItem.defaultProps = {\n  open: false,\n  pinned: false\n};\n\nDashboardSidebarItem.propTypes = {\n  active: PropTypes.bool,\n  activeHref: PropTypes.string,\n  external: PropTypes.bool,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  items: PropTypes.array,\n  onOpen: PropTypes.func,\n  open: PropTypes.bool,\n  pinned: PropTypes.bool,\n  title: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}