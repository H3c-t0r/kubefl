{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/filter-dialog-item.js\";\nimport PropTypes from 'prop-types';\nimport { Button, Grid, MenuItem, Typography } from '@material-ui/core';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { DateField } from './date-field';\nimport { InputField } from './input-field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterDialogItem = props => {\n  const {\n    properties,\n    filter,\n    index,\n    onAddFilter,\n    onRemoveFilter,\n    onPropertyChange,\n    onOperatorChange,\n    onValueChange,\n    operators\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textSecondary\",\n      sx: {\n        mb: 1\n      },\n      variant: \"caption\",\n      children: \"Where\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        pb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          fullWidth: true,\n          onChange: event => onPropertyChange(index, event.target.value),\n          select: true,\n          value: filter.property.name,\n          children: properties.map(property => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: property.name,\n            children: property.label\n          }, property.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          fullWidth: true,\n          value: filter.operator.value,\n          select: true,\n          onChange: event => onOperatorChange(index, event.target.value),\n          children: operators.filter(operator => operator.typesAccepted.includes(filter.property.type) || operator.typesAccepted.includes('blank')).map(operator => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: operator.value,\n            children: operator.label\n          }, operator.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), !filter.operator.typesAccepted.includes('blank') && (filter.operator.typesAccepted.includes('date') ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(DateField, {\n          fullWidth: true,\n          onChange: date => onValueChange(index, date),\n          value: filter.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          fullWidth: true,\n          onChange: event => onValueChange(index, event.target.value),\n          value: filter.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: () => onAddFilter(index + 1),\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 20\n      }, this),\n      sx: {\n        mr: 2\n      },\n      variant: \"text\",\n      children: \"Add Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => onRemoveFilter(index),\n      size: \"small\",\n      sx: {\n        color: 'text.secondary'\n      },\n      variant: \"text\",\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = FilterDialogItem;\nFilterDialogItem.propTypes = {\n  properties: PropTypes.array,\n  filter: PropTypes.object,\n  index: PropTypes.number,\n  onAddFilter: PropTypes.func,\n  onRemoveFilter: PropTypes.func,\n  onPropertyChange: PropTypes.func,\n  onOperatorChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  operators: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterDialogItem\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/filter-dialog-item.js"],"names":["PropTypes","Button","Grid","MenuItem","Typography","Plus","PlusIcon","DateField","InputField","FilterDialogItem","props","properties","filter","index","onAddFilter","onRemoveFilter","onPropertyChange","onOperatorChange","onValueChange","operators","mb","pb","event","target","value","property","name","map","label","operator","typesAccepted","includes","type","date","mr","color","propTypes","array","object","number","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,eAAjC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACzC,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,gBANI;AAOJC,IAAAA,gBAPI;AAQJC,IAAAA,aARI;AASJC,IAAAA;AATI,MAUFT,KAVJ;AAYA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,EAAE,EAAE;AAAEU,QAAAA,EAAE,EAAE;AAAN,OAFN;AAGE,MAAA,OAAO,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAE,CAFX;AAGE,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAHN;AAAA,8BAKE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,CAFN;AAAA,+BAIE,QAAC,UAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,QAAQ,EAAGC,KAAD,IAAWN,gBAAgB,CAACH,KAAD,EAAQS,KAAK,CAACC,MAAN,CAAaC,KAArB,CAFvC;AAGE,UAAA,MAAM,MAHR;AAIE,UAAA,KAAK,EAAEZ,MAAM,CAACa,QAAP,CAAgBC,IAJzB;AAAA,oBAMGf,UAAU,CAACgB,GAAX,CAAgBF,QAAD,iBACd,QAAC,QAAD;AAEE,YAAA,KAAK,EAAEA,QAAQ,CAACC,IAFlB;AAAA,sBAIGD,QAAQ,CAACG;AAJZ,aACOH,QAAQ,CAACC,IADhB;AAAA;AAAA;AAAA;AAAA,kBADD;AANH;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cALF,eAyBE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,CAFN;AAAA,+BAIE,QAAC,UAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,KAAK,EAAEd,MAAM,CAACiB,QAAP,CAAgBL,KAFzB;AAGE,UAAA,MAAM,MAHR;AAIE,UAAA,QAAQ,EAAGF,KAAD,IAAWL,gBAAgB,CAACJ,KAAD,EAAQS,KAAK,CAACC,MAAN,CAAaC,KAArB,CAJvC;AAAA,oBAMGL,SAAS,CACPP,MADF,CACUiB,QAAD,IAAeA,QAAQ,CAACC,aAAT,CAAuBC,QAAvB,CAAgCnB,MAAM,CAACa,QAAP,CAAgBO,IAAhD,KAClBH,QAAQ,CAACC,aAAT,CAAuBC,QAAvB,CAAgC,OAAhC,CAFN,EAGEJ,GAHF,CAGOE,QAAD,iBACH,QAAC,QAAD;AAEE,YAAA,KAAK,EAAEA,QAAQ,CAACL,KAFlB;AAAA,sBAIGK,QAAQ,CAACD;AAJZ,aACOC,QAAQ,CAACL,KADhB;AAAA;AAAA;AAAA;AAAA,kBAJH;AANH;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAzBF,EAgDG,CAACZ,MAAM,CAACiB,QAAP,CAAgBC,aAAhB,CAA8BC,QAA9B,CAAuC,OAAvC,CAAD,KACGnB,MAAM,CAACiB,QAAP,CAAgBC,aAAhB,CAA8BC,QAA9B,CAAuC,MAAvC,iBAEA,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,EAFN;AAAA,+BAIE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,QAAQ,EAAGE,IAAD,IAAUf,aAAa,CAACL,KAAD,EAAQoB,IAAR,CAFnC;AAGE,UAAA,KAAK,EAAErB,MAAM,CAACY;AAHhB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAFA,gBAcA,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,EAFN;AAAA,+BAIE,QAAC,UAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,QAAQ,EAAGF,KAAD,IAAWJ,aAAa,CAACL,KAAD,EAAQS,KAAK,CAACC,MAAN,CAAaC,KAArB,CAFpC;AAGE,UAAA,KAAK,EAAEZ,MAAM,CAACY;AAHhB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAfH,CAhDH;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAmFE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAE,MAAMV,WAAW,CAACD,KAAK,GAAG,CAAT,CAF5B;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAJb;AAKE,MAAA,EAAE,EAAE;AAAEqB,QAAAA,EAAE,EAAE;AAAN,OALN;AAME,MAAA,OAAO,EAAC,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnFF,eA6FE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAMnB,cAAc,CAACF,KAAD,CAD/B;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,EAAE,EAAE;AAAEsB,QAAAA,KAAK,EAAE;AAAT,OAHN;AAIE,MAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7FF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwGD,CArHM;KAAM1B,gB;AAuHbA,gBAAgB,CAAC2B,SAAjB,GAA6B;AAC3BzB,EAAAA,UAAU,EAAEX,SAAS,CAACqC,KADK;AAE3BzB,EAAAA,MAAM,EAAEZ,SAAS,CAACsC,MAFS;AAG3BzB,EAAAA,KAAK,EAAEb,SAAS,CAACuC,MAHU;AAI3BzB,EAAAA,WAAW,EAAEd,SAAS,CAACwC,IAJI;AAK3BzB,EAAAA,cAAc,EAAEf,SAAS,CAACwC,IALC;AAM3BxB,EAAAA,gBAAgB,EAAEhB,SAAS,CAACwC,IAND;AAO3BvB,EAAAA,gBAAgB,EAAEjB,SAAS,CAACwC,IAPD;AAQ3BtB,EAAAA,aAAa,EAAElB,SAAS,CAACwC,IARE;AAS3BrB,EAAAA,SAAS,EAAEnB,SAAS,CAACqC;AATM,CAA7B","sourcesContent":["import PropTypes from 'prop-types';\nimport { Button, Grid, MenuItem, Typography } from '@material-ui/core';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { DateField } from './date-field';\nimport { InputField } from './input-field';\n\nexport const FilterDialogItem = (props) => {\n  const {\n    properties,\n    filter,\n    index,\n    onAddFilter,\n    onRemoveFilter,\n    onPropertyChange,\n    onOperatorChange,\n    onValueChange,\n    operators\n  } = props;\n\n  return (\n    <div>\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mb: 1 }}\n        variant=\"caption\"\n      >\n        Where\n      </Typography>\n      <Grid\n        container\n        spacing={2}\n        sx={{ pb: 1 }}\n      >\n        <Grid\n          item\n          xs={6}\n        >\n          <InputField\n            fullWidth\n            onChange={(event) => onPropertyChange(index, event.target.value)}\n            select\n            value={filter.property.name}\n          >\n            {properties.map((property) => (\n              <MenuItem\n                key={property.name}\n                value={property.name}\n              >\n                {property.label}\n              </MenuItem>\n            ))}\n          </InputField>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n        >\n          <InputField\n            fullWidth\n            value={filter.operator.value}\n            select\n            onChange={(event) => onOperatorChange(index, event.target.value)}\n          >\n            {operators\n              .filter((operator) => (operator.typesAccepted.includes(filter.property.type)\n                || operator.typesAccepted.includes('blank')))\n              .map((operator) => (\n                <MenuItem\n                  key={operator.value}\n                  value={operator.value}\n                >\n                  {operator.label}\n                </MenuItem>\n              ))}\n          </InputField>\n        </Grid>\n        {!filter.operator.typesAccepted.includes('blank')\n        && (filter.operator.typesAccepted.includes('date')\n          ? (\n            <Grid\n              item\n              xs={12}\n            >\n              <DateField\n                fullWidth\n                onChange={(date) => onValueChange(index, date)}\n                value={filter.value}\n              />\n            </Grid>\n          )\n          : (\n            <Grid\n              item\n              xs={12}\n            >\n              <InputField\n                fullWidth\n                onChange={(event) => onValueChange(index, event.target.value)}\n                value={filter.value}\n              />\n            </Grid>\n          ))}\n      </Grid>\n      <Button\n        color=\"primary\"\n        onClick={() => onAddFilter(index + 1)}\n        size=\"small\"\n        startIcon={<PlusIcon />}\n        sx={{ mr: 2 }}\n        variant=\"text\"\n      >\n        Add Filter\n      </Button>\n      <Button\n        onClick={() => onRemoveFilter(index)}\n        size=\"small\"\n        sx={{ color: 'text.secondary' }}\n        variant=\"text\"\n      >\n        Remove\n      </Button>\n    </div>\n  );\n};\n\nFilterDialogItem.propTypes = {\n  properties: PropTypes.array,\n  filter: PropTypes.object,\n  index: PropTypes.number,\n  onAddFilter: PropTypes.func,\n  onRemoveFilter: PropTypes.func,\n  onPropertyChange: PropTypes.func,\n  onOperatorChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  operators: PropTypes.array\n};\n"]},"metadata":{},"sourceType":"module"}