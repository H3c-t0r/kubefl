{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/customer.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink, Outlet, useLocation } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Box, Button, Container, Divider, Grid, Skeleton, Tab, Tabs, Typography } from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { ActionsMenu } from '../components/actions-menu';\nimport { ConfirmationDialog } from '../components/confirmation-dialog';\nimport { useDialog } from '../hooks/use-dialog';\nimport { useMounted } from '../hooks/use-mounted';\nimport { ArrowLeft as ArrowLeftIcon } from '../icons/arrow-left';\nimport { Calendar as CalendarIcon } from '../icons/calendar';\nimport { Cash as CashIcon } from '../icons/cash';\nimport { ExclamationOutlined as ExclamationOutlinedIcon } from '../icons/exclamation-outlined';\nimport { ShoppingCart as ShoppingCartIcon } from '../icons/shopping-cart'; // NOTE: This should be generated based on user data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stats = [{\n  content: 'Since: Apr 2021',\n  icon: /*#__PURE__*/_jsxDEV(CalendarIcon, {\n    fontSize: \"small\",\n    sx: {\n      color: 'text.secondary'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this)\n}, {\n  content: 'Orders: 17',\n  icon: /*#__PURE__*/_jsxDEV(ShoppingCartIcon, {\n    fontSize: \"small\",\n    sx: {\n      color: 'text.secondary'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this)\n}, {\n  content: 'Spent: $ 69.00',\n  icon: /*#__PURE__*/_jsxDEV(CashIcon, {\n    fontSize: \"small\",\n    sx: {\n      color: 'text.secondary'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this)\n}]; // NOTE: This should be generated based on user data because \"/1\" represents \"/:id\" from routing\n//  strategy where \":id\" is dynamic depending on current customer id\n\nconst tabs = [{\n  href: '/dashboard/customers/1',\n  label: 'Summary'\n}, {\n  href: '/dashboard/customers/1/orders',\n  label: 'Orders'\n}, {\n  href: '/dashboard/customers/1/activity',\n  label: 'Activity'\n}];\nexport const Customer = () => {\n  _s();\n\n  const mounted = useMounted();\n  const location = useLocation();\n  const [banDialogOpen, handleOpenBanDialog, handleCloseBanDialog] = useDialog();\n  const [customerState, setCustomerState] = useState({\n    isLoading: true\n  });\n  const getCustomer = useCallback(async () => {\n    setCustomerState(() => ({\n      isLoading: true\n    }));\n\n    try {\n      const result = await customerApi.getCustomer();\n\n      if (mounted.current) {\n        setCustomerState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setCustomerState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    getCustomer().catch(console.error);\n  }, []);\n\n  const handleSendVerification = () => {\n    toast.error('This action is not available on demo');\n  };\n\n  const handleSendPasswordReset = () => {\n    toast.error('This action is not available on demo');\n  };\n\n  const handleBanAccount = () => {\n    handleCloseBanDialog();\n    toast.error('This action is not available on demo');\n  };\n\n  const actions = [{\n    label: 'Send Verification Email',\n    onClick: handleSendVerification\n  }, {\n    label: 'Send Password Reset Email',\n    onClick: handleSendPasswordReset\n  }, {\n    label: 'Ban Account',\n    onClick: handleOpenBanDialog\n  }];\n\n  const renderContent = () => {\n    if (customerState.isLoading) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 42\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (customerState.error) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            backgroundColor: 'background.default',\n            display: 'flex',\n            flexDirection: 'column',\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(ExclamationOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            sx: {\n              mt: 2\n            },\n            variant: \"body2\",\n            children: customerState.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            component: RouterLink,\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 26\n            }, this),\n            to: \"/dashboard/customers\",\n            variant: \"text\",\n            children: \"Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"h4\",\n            children: customerState.data.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ActionsMenu, {\n            actions: actions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 2\n          },\n          wrap: \"wrap\",\n          children: stats.map(({\n            content,\n            icon\n          }) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              width: {\n                md: 'auto',\n                xs: '100%'\n              }\n            },\n            children: [icon, /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              sx: {\n                ml: 0.5\n              },\n              variant: \"body2\",\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, content, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          allowScrollButtonsMobile: true,\n          sx: {\n            mt: 4\n          },\n          value: tabs.findIndex(tab => tab.href === location.pathname),\n          variant: \"scrollable\",\n          children: tabs.map(option => /*#__PURE__*/_jsxDEV(Tab, {\n            component: RouterLink,\n            label: option.label,\n            to: option.href\n          }, option.href, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n        message: \"Are you sure you want to ban this account? This can't be undone.\",\n        onCancel: handleCloseBanDialog,\n        onConfirm: handleBanAccount,\n        open: banDialogOpen,\n        title: \"Ban Customer\",\n        variant: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: 'background.default',\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      },\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Customer, \"mq1KU+izAMiD0aCbVtsK9Hc3F5Q=\", false, function () {\n  return [useMounted, useLocation, useDialog];\n});\n\n_c = Customer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customer\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/customer.js"],"names":["useCallback","useEffect","useState","Link","RouterLink","Outlet","useLocation","toast","Box","Button","Container","Divider","Grid","Skeleton","Tab","Tabs","Typography","customerApi","ActionsMenu","ConfirmationDialog","useDialog","useMounted","ArrowLeft","ArrowLeftIcon","Calendar","CalendarIcon","Cash","CashIcon","ExclamationOutlined","ExclamationOutlinedIcon","ShoppingCart","ShoppingCartIcon","stats","content","icon","color","tabs","href","label","Customer","mounted","location","banDialogOpen","handleOpenBanDialog","handleCloseBanDialog","customerState","setCustomerState","isLoading","getCustomer","result","current","data","err","console","error","message","catch","handleSendVerification","handleSendPasswordReset","handleBanAccount","actions","onClick","renderContent","py","alignItems","backgroundColor","display","flexDirection","p","mt","mb","fullName","flexGrow","map","width","md","xs","ml","findIndex","tab","pathname","option","height"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink, Outlet, useLocation } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Skeleton,\n  Tab,\n  Tabs,\n  Typography\n} from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { ActionsMenu } from '../components/actions-menu';\nimport { ConfirmationDialog } from '../components/confirmation-dialog';\nimport { useDialog } from '../hooks/use-dialog';\nimport { useMounted } from '../hooks/use-mounted';\nimport { ArrowLeft as ArrowLeftIcon } from '../icons/arrow-left';\nimport { Calendar as CalendarIcon } from '../icons/calendar';\nimport { Cash as CashIcon } from '../icons/cash';\nimport { ExclamationOutlined as ExclamationOutlinedIcon } from '../icons/exclamation-outlined';\nimport { ShoppingCart as ShoppingCartIcon } from '../icons/shopping-cart';\n\n// NOTE: This should be generated based on user data\nconst stats = [\n  {\n    content: 'Since: Apr 2021',\n    icon: (\n      <CalendarIcon\n        fontSize=\"small\"\n        sx={{ color: 'text.secondary' }}\n      />\n    )\n  },\n  {\n    content: 'Orders: 17',\n    icon: (\n      <ShoppingCartIcon\n        fontSize=\"small\"\n        sx={{ color: 'text.secondary' }}\n      />\n    )\n  },\n  {\n    content: 'Spent: $ 69.00',\n    icon: (\n      <CashIcon\n        fontSize=\"small\"\n        sx={{ color: 'text.secondary' }}\n      />\n    )\n  }\n];\n\n// NOTE: This should be generated based on user data because \"/1\" represents \"/:id\" from routing\n//  strategy where \":id\" is dynamic depending on current customer id\nconst tabs = [\n  {\n    href: '/dashboard/customers/1',\n    label: 'Summary'\n  },\n  {\n    href: '/dashboard/customers/1/orders',\n    label: 'Orders'\n  },\n  {\n    href: '/dashboard/customers/1/activity',\n    label: 'Activity'\n  }\n];\n\nexport const Customer = () => {\n  const mounted = useMounted();\n  const location = useLocation();\n  const [banDialogOpen, handleOpenBanDialog, handleCloseBanDialog] = useDialog();\n  const [customerState, setCustomerState] = useState({ isLoading: true });\n\n  const getCustomer = useCallback(async () => {\n    setCustomerState(() => ({ isLoading: true }));\n\n    try {\n      const result = await customerApi.getCustomer();\n\n      if (mounted.current) {\n        setCustomerState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setCustomerState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getCustomer().catch(console.error);\n  }, []);\n\n  const handleSendVerification = () => {\n    toast.error('This action is not available on demo');\n  };\n\n  const handleSendPasswordReset = () => {\n    toast.error('This action is not available on demo');\n  };\n\n  const handleBanAccount = () => {\n    handleCloseBanDialog();\n    toast.error('This action is not available on demo');\n  };\n\n  const actions = [\n    {\n      label: 'Send Verification Email',\n      onClick: handleSendVerification\n    },\n    {\n      label: 'Send Password Reset Email',\n      onClick: handleSendPasswordReset\n    },\n    {\n      label: 'Ban Account',\n      onClick: handleOpenBanDialog\n    }\n  ];\n\n  const renderContent = () => {\n    if (customerState.isLoading) {\n      return (\n        <Box sx={{ py: 4 }}>\n          <Skeleton height={42} />\n          <Skeleton />\n          <Skeleton />\n        </Box>\n      );\n    }\n\n    if (customerState.error) {\n      return (\n        <Box sx={{ py: 4 }}>\n          <Box\n            sx={{\n              alignItems: 'center',\n              backgroundColor: 'background.default',\n              display: 'flex',\n              flexDirection: 'column',\n              p: 3\n            }}\n          >\n            <ExclamationOutlinedIcon />\n            <Typography\n              color=\"textSecondary\"\n              sx={{ mt: 2 }}\n              variant=\"body2\"\n            >\n              {customerState.error}\n            </Typography>\n          </Box>\n        </Box>\n      );\n    }\n\n    return (\n      <>\n        <Box sx={{ py: 4 }}>\n          <Box sx={{ mb: 2 }}>\n            <Button\n              color=\"primary\"\n              component={RouterLink}\n              startIcon={<ArrowLeftIcon />}\n              to=\"/dashboard/customers\"\n              variant=\"text\"\n            >\n              Customers\n            </Button>\n          </Box>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {customerState.data.fullName}\n            </Typography>\n            <Box sx={{ flexGrow: 1 }} />\n            <ActionsMenu actions={actions} />\n          </Box>\n          <Grid\n            container\n            spacing={2}\n            sx={{\n              mt: 2\n            }}\n            wrap=\"wrap\"\n          >\n            {stats.map(({ content, icon }) => (\n              <Grid\n                item\n                key={content}\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  width: {\n                    md: 'auto',\n                    xs: '100%'\n                  }\n                }}\n              >\n                {icon}\n                <Typography\n                  color=\"textSecondary\"\n                  sx={{ ml: 0.5 }}\n                  variant=\"body2\"\n                >\n                  {content}\n                </Typography>\n              </Grid>\n            ))}\n          </Grid>\n          <Tabs\n            allowScrollButtonsMobile\n            sx={{ mt: 4 }}\n            value={tabs.findIndex((tab) => tab.href === location.pathname)}\n            variant=\"scrollable\"\n          >\n            {tabs.map((option) => (\n              <Tab\n                component={RouterLink}\n                key={option.href}\n                label={option.label}\n                to={option.href}\n              />\n            ))}\n          </Tabs>\n          <Divider />\n        </Box>\n        <Outlet />\n        <ConfirmationDialog\n          message=\"Are you sure you want to ban this account? This can't be undone.\"\n          onCancel={handleCloseBanDialog}\n          onConfirm={handleBanAccount}\n          open={banDialogOpen}\n          title=\"Ban Customer\"\n          variant=\"error\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        flexGrow: 1\n      }}\n    >\n      <Container\n        maxWidth=\"lg\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        }}\n      >\n        {renderContent()}\n      </Container>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}