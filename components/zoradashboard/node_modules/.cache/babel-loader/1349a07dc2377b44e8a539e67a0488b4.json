{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/product-create-dialog.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormHelperText, Grid } from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductCreateDialog = props => {\n  _s();\n\n  const {\n    open,\n    onClose,\n    ...other\n  } = props;\n  const formik = useFormik({\n    initialValues: {\n      description: '',\n      name: '',\n      submit: 'null'\n    },\n    validationSchema: Yup.object().shape({\n      description: Yup.string().max(500).required('Description is required'),\n      name: Yup.string().max(255).required('Name is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Product created');\n        helpers.setStatus({\n          success: true\n        });\n        helpers.setSubmitting(false);\n        helpers.resetForm();\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: onClose,\n    open: open,\n    TransitionProps: {\n      onExited: () => formik.resetForm()\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.name && formik.errors.name),\n            fullWidth: true,\n            helperText: formik.touched.name && formik.errors.name,\n            label: \"Product name\",\n            name: \"name\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            value: formik.values.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.description && formik.errors.description),\n            fullWidth: true,\n            helperText: formik.touched.description && formik.errors.description,\n            label: \"Description\",\n            multiline: true,\n            name: \"description\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            rows: 4,\n            value: formik.values.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: formik.errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onClose,\n        variant: \"text\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        disabled: formik.isSubmitting,\n        onClick: () => {\n          formik.handleSubmit();\n        },\n        variant: \"contained\",\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductCreateDialog, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ProductCreateDialog;\nProductCreateDialog.defaultProps = {\n  open: false\n};\nProductCreateDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCreateDialog\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/product-create-dialog.js"],"names":["PropTypes","useFormik","Yup","toast","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormHelperText","Grid","InputField","ProductCreateDialog","props","open","onClose","other","formik","initialValues","description","name","submit","validationSchema","object","shape","string","max","required","onSubmit","values","helpers","success","setStatus","setSubmitting","resetForm","err","console","error","setErrors","message","onExited","Boolean","touched","errors","handleBlur","handleChange","isSubmitting","handleSubmit","defaultProps","propTypes","func","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  Grid\n} from '@material-ui/core';\nimport { InputField } from '../input-field';\n\nexport const ProductCreateDialog = (props) => {\n  const { open, onClose, ...other } = props;\n  const formik = useFormik({\n    initialValues: {\n      description: '',\n      name: '',\n      submit: 'null'\n    },\n    validationSchema: Yup.object().shape({\n      description: Yup.string().max(500).required('Description is required'),\n      name: Yup.string().max(255).required('Name is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Product created');\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n        helpers.resetForm();\n        onClose?.();\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      TransitionProps={{\n        onExited: () => formik.resetForm()\n      }}\n      {...other}\n    >\n      <DialogTitle>\n        Create Product\n      </DialogTitle>\n      <DialogContent>\n        <Grid\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.name && formik.errors.name)}\n              fullWidth\n              helperText={formik.touched.name && formik.errors.name}\n              label=\"Product name\"\n              name=\"name\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.name}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.description && formik.errors.description)}\n              fullWidth\n              helperText={formik.touched.description && formik.errors.description}\n              label=\"Description\"\n              multiline\n              name=\"description\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              rows={4}\n              value={formik.values.description}\n            />\n          </Grid>\n          {formik.errors.submit && (\n            <Grid\n              item\n              xs={12}\n            >\n              <FormHelperText error>\n                {formik.errors.submit}\n              </FormHelperText>\n            </Grid>\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onClose}\n          variant=\"text\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          disabled={formik.isSubmitting}\n          onClick={() => { formik.handleSubmit(); }}\n          variant=\"contained\"\n        >\n          Create Product\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nProductCreateDialog.defaultProps = {\n  open: false\n};\n\nProductCreateDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}