{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/notifications-popover.js\",\n    _s = $RefreshSig$();\n\nimport { format } from 'date-fns';\nimport { Badge, Box, IconButton, Typography, Popover, List, ListItem, ListSubheader } from '@material-ui/core';\nimport { usePopover } from '../hooks/use-popover';\nimport { Bell as BellIcon } from '../icons/bell';\nimport { Sparkles as SparklesIcon } from '../icons/sparkles';\nimport { Speakerphone as SpeakerphoneIcon } from '../icons/speakerphone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst notifications = [{\n  id: '1',\n  content: 'Sit occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim.',\n  createdAt: new Date().getTime(),\n  icon: SparklesIcon,\n  iconColor: '#ffb400',\n  title: 'New Customer layout!'\n}, {\n  id: '2',\n  content: 'Sit occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim.',\n  createdAt: new Date().getTime(),\n  icon: SparklesIcon,\n  iconColor: '#ffb400',\n  title: 'Inline Edit is now available'\n}, {\n  id: '3',\n  content: 'Sit occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim.',\n  createdAt: new Date().getTime(),\n  icon: SpeakerphoneIcon,\n  iconColor: '#4970ff',\n  title: 'New feature just deployed'\n}];\nexport const NotificationsPopover = props => {\n  _s();\n\n  const [anchorRef, open, handleOpen, handleClose] = usePopover();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Badge, {\n      color: \"success\",\n      variant: \"dot\",\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleOpen,\n        ref: anchorRef,\n        sx: {\n          color: 'primary.contrastText'\n        },\n        children: /*#__PURE__*/_jsxDEV(BellIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      anchorEl: anchorRef.current,\n      anchorOrigin: {\n        horizontal: 'center',\n        vertical: 'bottom'\n      },\n      keepMounted: true,\n      onClose: handleClose,\n      open: open,\n      PaperProps: {\n        sx: {\n          width: 320\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n          sx: {\n            py: 1\n          },\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), notifications.map((notification, index) => {\n          const {\n            title,\n            content,\n            createdAt,\n            icon: Icon,\n            iconColor\n          } = notification;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            disableGutters: true,\n            divider: notifications.length > index + 1,\n            sx: {\n              display: 'flex',\n              alignItems: 'flex-start',\n              flexDirection: 'column',\n              p: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                fontSize: \"small\",\n                sx: {\n                  color: iconColor\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                sx: {\n                  ml: 1.25\n                },\n                variant: \"body1\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"caption\",\n              children: format(createdAt, 'MMM dd, yyyy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotificationsPopover, \"Li+ZlAVS7crgWolWA5SiSLLMKeA=\", false, function () {\n  return [usePopover];\n});\n\n_c = NotificationsPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsPopover\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/notifications-popover.js"],"names":["format","Badge","Box","IconButton","Typography","Popover","List","ListItem","ListSubheader","usePopover","Bell","BellIcon","Sparkles","SparklesIcon","Speakerphone","SpeakerphoneIcon","notifications","id","content","createdAt","Date","getTime","icon","iconColor","title","NotificationsPopover","props","anchorRef","open","handleOpen","handleClose","color","current","horizontal","vertical","sx","width","py","map","notification","index","Icon","length","display","alignItems","flexDirection","p","ml"],"mappings":"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","sourcesContent":["import { format } from 'date-fns';\nimport {\n  Badge,\n  Box,\n  IconButton,\n  Typography,\n  Popover,\n  List,\n  ListItem,\n  ListSubheader\n} from '@material-ui/core';\nimport { usePopover } from '../hooks/use-popover';\nimport { Bell as BellIcon } from '../icons/bell';\nimport { Sparkles as SparklesIcon } from '../icons/sparkles';\nimport { Speakerphone as SpeakerphoneIcon } from '../icons/speakerphone';\n\nconst notifications = [\n  {\n    id: '1',\n    content: 'Sit occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim.',\n    createdAt: new Date().getTime(),\n    icon: SparklesIcon,\n    iconColor: '#ffb400',\n    title: 'New Customer layout!'\n  },\n  {\n    id: '2',\n    content: 'Sit occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim.',\n    createdAt: new Date().getTime(),\n    icon: SparklesIcon,\n    iconColor: '#ffb400',\n    title: 'Inline Edit is now available'\n  },\n  {\n    id: '3',\n    content: 'Sit occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim.',\n    createdAt: new Date().getTime(),\n    icon: SpeakerphoneIcon,\n    iconColor: '#4970ff',\n    title: 'New feature just deployed'\n  }\n];\n\nexport const NotificationsPopover = (props) => {\n  const [anchorRef, open, handleOpen, handleClose] = usePopover();\n\n  return (\n    <>\n      <Badge\n        color=\"success\"\n        variant=\"dot\"\n        {...props}\n      >\n        <IconButton\n          onClick={handleOpen}\n          ref={anchorRef}\n          sx={{\n            color: 'primary.contrastText'\n          }}\n        >\n          <BellIcon />\n        </IconButton>\n      </Badge>\n      <Popover\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'center',\n          vertical: 'bottom'\n        }}\n        keepMounted\n        onClose={handleClose}\n        open={open}\n        PaperProps={{\n          sx: { width: 320 }\n        }}\n      >\n        <List>\n          <ListSubheader sx={{ py: 1 }}>\n            Notifications\n          </ListSubheader>\n          {notifications.map((notification, index) => {\n            const { title, content, createdAt, icon: Icon, iconColor } = notification;\n\n            return (\n              <ListItem\n                disableGutters\n                divider={notifications.length > index + 1}\n                key={notification.id}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'flex-start',\n                  flexDirection: 'column',\n                  p: 2\n                }}\n              >\n                <Box sx={{ display: 'flex' }}>\n                  <Icon\n                    fontSize=\"small\"\n                    sx={{ color: iconColor }}\n                  />\n                  <Typography\n                    color=\"textPrimary\"\n                    sx={{ ml: 1.25 }}\n                    variant=\"body1\"\n                  >\n                    {title}\n                  </Typography>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body2\"\n                >\n                  {content}\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"caption\"\n                >\n                  {format(createdAt, 'MMM dd, yyyy')}\n                </Typography>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Popover>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}