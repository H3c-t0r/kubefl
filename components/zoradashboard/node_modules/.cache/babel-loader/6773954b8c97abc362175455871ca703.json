{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/password-recovery.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { AppBar, Box, Button, Card, CardContent, Container, FormHelperText, Grid, Toolbar, Typography } from '@material-ui/core';\nimport { ProductFeatures } from '../components/auth/product-features';\nimport { InputField } from '../components/input-field';\nimport { Logo } from '../components/logo';\nimport { useSettings } from '../contexts/settings-context';\nimport { useAuth } from '../hooks/use-auth';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PasswordRecovery = () => {\n  _s();\n\n  const mounted = useMounted();\n  const {\n    passwordRecovery\n  } = useAuth();\n  const {\n    settings\n  } = useSettings();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        await (passwordRecovery === null || passwordRecovery === void 0 ? void 0 : passwordRecovery(values.email));\n        navigate('/password-reset', {\n          state: {\n            username: values.email\n          }\n        });\n      } catch (err) {\n        console.error(err);\n\n        if (mounted.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Password Recovery | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      elevation: 0,\n      sx: {\n        backgroundColor: 'background.paper'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          sx: {\n            height: 64\n          },\n          children: /*#__PURE__*/_jsxDEV(RouterLink, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Logo, {\n              variant: settings.theme === 'dark' ? 'light' : 'dark'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        pt: '64px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 9\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 6,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              sx: {\n                display: {\n                  md: 'block',\n                  xs: 'none'\n                }\n              },\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(ProductFeatures, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  backgroundColor: 'background.default'\n                },\n                elevation: 0,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: formik.handleSubmit,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          color: \"textPrimary\",\n                          variant: \"h4\",\n                          children: \"Forgot password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          color: \"textPrimary\",\n                          variant: \"body1\",\n                          children: \"Enter the email address you used when you joined and we\\u2019ll send you instructions to reset your password.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 139,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(InputField, {\n                          autoFocus: true,\n                          error: Boolean(formik.touched.email && formik.errors.email),\n                          fullWidth: true,\n                          helperText: formik.touched.email && formik.errors.email,\n                          label: \"Email Address\",\n                          name: \"email\",\n                          onBlur: formik.handleBlur,\n                          onChange: formik.handleChange,\n                          type: \"email\",\n                          value: formik.values.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 151,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 25\n                      }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                          error: true,\n                          children: formik.errors.submit\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          color: \"primary\",\n                          disabled: formik.isSubmitting,\n                          fullWidth: true,\n                          size: \"large\",\n                          type: \"submit\",\n                          variant: \"contained\",\n                          children: \"Send Verification Email\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PasswordRecovery, \"gHMl975XbnV4uP0K0f9vNcFRQDw=\", false, function () {\n  return [useMounted, useAuth, useSettings, useNavigate, useFormik];\n});\n\n_c = PasswordRecovery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordRecovery\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/password-recovery.js"],"names":["useEffect","Helmet","Link","RouterLink","useNavigate","useFormik","Yup","AppBar","Box","Button","Card","CardContent","Container","FormHelperText","Grid","Toolbar","Typography","ProductFeatures","InputField","Logo","useSettings","useAuth","useMounted","gtm","PasswordRecovery","mounted","passwordRecovery","settings","navigate","formik","initialValues","email","submit","validationSchema","object","shape","string","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","state","username","err","console","error","current","success","message","push","event","backgroundColor","height","theme","minHeight","pt","py","display","md","xs","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","isSubmitting"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,IAAI,IAAIC,UAAjB,EAA6BC,WAA7B,QAAgD,kBAAhD;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,SANF,EAOEC,cAPF,EAQEC,IARF,EASEC,OATF,EAUEC,UAVF,QAWO,mBAXP;AAYA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AACpC,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAuBL,OAAO,EAApC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeP,WAAW,EAAhC;AACA,QAAMQ,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAMyB,MAAM,GAAGxB,SAAS,CAAC;AACvByB,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,MAAM,EAAE;AAFK,KADQ;AAKvBC,IAAAA,gBAAgB,EAAE3B,GAAG,CAAC4B,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,MAAAA,KAAK,EAAEzB,GAAG,CAAC8B,MAAJ,GAAaL,KAAb,CAAmB,uBAAnB,EAA4CM,GAA5C,CAAgD,GAAhD,EAAqDC,QAArD,CAA8D,mBAA9D;AAD4B,KAAnB,CALK;AAQvBC,IAAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,KAAf,KAA2D;AACnE,UAAI;AACF,eAAMjB,gBAAN,aAAMA,gBAAN,uBAAMA,gBAAgB,CAAGc,MAAM,CAACT,KAAV,CAAtB;AAEAH,QAAAA,QAAQ,CAAC,iBAAD,EAAoB;AAC1BgB,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAEL,MAAM,CAACT;AADZ;AADmB,SAApB,CAAR;AAKD,OARD,CAQE,OAAOe,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;;AACA,YAAIrB,OAAO,CAACwB,OAAZ,EAAqB;AACnBP,UAAAA,SAAS,CAAC;AAAEQ,YAAAA,OAAO,EAAE;AAAX,WAAD,CAAT;AACAT,UAAAA,SAAS,CAAC;AAAET,YAAAA,MAAM,EAAEc,GAAG,CAACK;AAAd,WAAD,CAAT;AACAR,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF;AACF;AAzBsB,GAAD,CAAxB;AA4BA3C,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,GAAG,CAAC6B,IAAJ,CAAS;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AACE,MAAA,SAAS,EAAE,CADb;AAEE,MAAA,EAAE,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAFN;AAAA,6BAIE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,cAAc,MADhB;AAEE,UAAA,EAAE,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAFN;AAAA,iCAIE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,GAAf;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,OAAO,EAAE5B,QAAQ,CAAC6B,KAAT,KAAmB,MAAnB,GAA4B,OAA5B,GAAsC;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAJF,eAmBE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFF,QAAAA,eAAe,EAAE,oBADf;AAEFG,QAAAA,SAAS,EAAE,MAFT;AAGFC,QAAAA,EAAE,EAAE;AAHF,OADN;AAAA,6BAOE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,IAApB;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,OAAO,EAAE,CAFX;AAAA,oCAIE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,EAAE,EAAE,CAFN;AAGE,cAAA,EAAE,EAAE;AACFC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,EAAE,EAAE,OADG;AAEPC,kBAAAA,EAAE,EAAE;AAFG;AADP,eAHN;AASE,cAAA,EAAE,EAAE,EATN;AAAA,qCAWE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAiBE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,EAAE,EAAE,CAFN;AAGE,cAAA,EAAE,EAAE,EAHN;AAAA,qCAKE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAE;AAAER,kBAAAA,eAAe,EAAE;AAAnB,iBADN;AAEE,gBAAA,SAAS,EAAE,CAFb;AAAA,uCAIE,QAAC,WAAD;AAAA,yCACE;AAAM,oBAAA,QAAQ,EAAEzB,MAAM,CAACkC,YAAvB;AAAA,2CACE,QAAC,IAAD;AACE,sBAAA,SAAS,MADX;AAEE,sBAAA,OAAO,EAAE,CAFX;AAAA,8CAIE,QAAC,IAAD;AACE,wBAAA,IAAI,MADN;AAEE,wBAAA,EAAE,EAAE,EAFN;AAAA,+CAIE,QAAC,UAAD;AACE,0BAAA,KAAK,EAAC,aADR;AAEE,0BAAA,OAAO,EAAC,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,8BAJF,eAeE,QAAC,IAAD;AACE,wBAAA,IAAI,MADN;AAEE,wBAAA,EAAE,EAAE,EAFN;AAAA,+CAIE,QAAC,UAAD;AACE,0BAAA,KAAK,EAAC,aADR;AAEE,0BAAA,OAAO,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,8BAfF,eA2BE,QAAC,IAAD;AACE,wBAAA,IAAI,MADN;AAEE,wBAAA,EAAE,EAAE,EAFN;AAAA,+CAIE,QAAC,UAAD;AACE,0BAAA,SAAS,MADX;AAEE,0BAAA,KAAK,EAAEC,OAAO,CAACnC,MAAM,CAACoC,OAAP,CAAelC,KAAf,IAAwBF,MAAM,CAACqC,MAAP,CAAcnC,KAAvC,CAFhB;AAGE,0BAAA,SAAS,MAHX;AAIE,0BAAA,UAAU,EAAEF,MAAM,CAACoC,OAAP,CAAelC,KAAf,IAAwBF,MAAM,CAACqC,MAAP,CAAcnC,KAJpD;AAKE,0BAAA,KAAK,EAAC,eALR;AAME,0BAAA,IAAI,EAAC,OANP;AAOE,0BAAA,MAAM,EAAEF,MAAM,CAACsC,UAPjB;AAQE,0BAAA,QAAQ,EAAEtC,MAAM,CAACuC,YARnB;AASE,0BAAA,IAAI,EAAC,OATP;AAUE,0BAAA,KAAK,EAAEvC,MAAM,CAACW,MAAP,CAAcT;AAVvB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,8BA3BF,EA4CGF,MAAM,CAACqC,MAAP,CAAclC,MAAd,iBACC,QAAC,IAAD;AACE,wBAAA,IAAI,MADN;AAEE,wBAAA,EAAE,EAAE,EAFN;AAAA,+CAIE,QAAC,cAAD;AAAgB,0BAAA,KAAK,MAArB;AAAA,oCACGH,MAAM,CAACqC,MAAP,CAAclC;AADjB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,8BA7CJ,eAsDE,QAAC,IAAD;AACE,wBAAA,IAAI,MADN;AAEE,wBAAA,EAAE,EAAE,EAFN;AAAA,+CAIE,QAAC,MAAD;AACE,0BAAA,KAAK,EAAC,SADR;AAEE,0BAAA,QAAQ,EAAEH,MAAM,CAACwC,YAFnB;AAGE,0BAAA,SAAS,MAHX;AAIE,0BAAA,IAAI,EAAC,OAJP;AAKE,0BAAA,IAAI,EAAC,QALP;AAME,0BAAA,OAAO,EAAC,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,8BAtDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AAyID,CA9KM;;GAAM7C,gB;UACKF,U,EACaD,O,EACRD,W,EACJhB,W,EACFC,S;;;KALJmB,gB","sourcesContent":["import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  AppBar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  FormHelperText,\n  Grid,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { ProductFeatures } from '../components/auth/product-features';\nimport { InputField } from '../components/input-field';\nimport { Logo } from '../components/logo';\nimport { useSettings } from '../contexts/settings-context';\nimport { useAuth } from '../hooks/use-auth';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\n\nexport const PasswordRecovery = () => {\n  const mounted = useMounted();\n  const { passwordRecovery } = useAuth();\n  const { settings } = useSettings();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n    }),\n    onSubmit: async (values, { setErrors, setStatus, setSubmitting }) => {\n      try {\n        await passwordRecovery?.(values.email);\n\n        navigate('/password-reset', {\n          state: {\n            username: values.email\n          }\n        });\n      } catch (err) {\n        console.error(err);\n        if (mounted.current) {\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Password Recovery | Carpatin Dashboard</title>\n      </Helmet>\n      <AppBar\n        elevation={0}\n        sx={{ backgroundColor: 'background.paper' }}\n      >\n        <Container maxWidth=\"md\">\n          <Toolbar\n            disableGutters\n            sx={{ height: 64 }}\n          >\n            <RouterLink to=\"/\">\n              <Logo variant={settings.theme === 'dark' ? 'light' : 'dark'} />\n            </RouterLink>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          pt: '64px'\n        }}\n      >\n        <Box sx={{ py: 9 }}>\n          <Container maxWidth=\"md\">\n            <Grid\n              container\n              spacing={6}\n            >\n              <Grid\n                item\n                md={6}\n                sx={{\n                  display: {\n                    md: 'block',\n                    xs: 'none'\n                  }\n                }}\n                xs={12}\n              >\n                <ProductFeatures />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Card\n                  sx={{ backgroundColor: 'background.default' }}\n                  elevation={0}\n                >\n                  <CardContent>\n                    <form onSubmit={formik.handleSubmit}>\n                      <Grid\n                        container\n                        spacing={2}\n                      >\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <Typography\n                            color=\"textPrimary\"\n                            variant=\"h4\"\n                          >\n                            Forgot password\n                          </Typography>\n                        </Grid>\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <Typography\n                            color=\"textPrimary\"\n                            variant=\"body1\"\n                          >\n                            Enter the email address you used when you\n                            joined and we’ll send you instructions to reset your password.\n                          </Typography>\n                        </Grid>\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <InputField\n                            autoFocus\n                            error={Boolean(formik.touched.email && formik.errors.email)}\n                            fullWidth\n                            helperText={formik.touched.email && formik.errors.email}\n                            label=\"Email Address\"\n                            name=\"email\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            type=\"email\"\n                            value={formik.values.email}\n                          />\n                        </Grid>\n                        {formik.errors.submit && (\n                          <Grid\n                            item\n                            xs={12}\n                          >\n                            <FormHelperText error>\n                              {formik.errors.submit}\n                            </FormHelperText>\n                          </Grid>\n                        )}\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <Button\n                            color=\"primary\"\n                            disabled={formik.isSubmitting}\n                            fullWidth\n                            size=\"large\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Send Verification Email\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </form>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Container>\n        </Box>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}