{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/invoices/invoices-stats.js\",\n    _s = $RefreshSig$();\n\nimport Chart from 'react-apexcharts';\nimport numeral from 'numeral';\nimport { Box, Card, CardContent, Grid, List, ListItem, Typography } from '@material-ui/core';\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport { StatusBadge } from '../status-badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InvoicesStats = () => {\n  _s();\n\n  const theme = useTheme();\n  const series = [{\n    color: theme.palette.info.main,\n    data: 121,\n    name: 'Ongoing'\n  }, {\n    color: theme.palette.success.main,\n    data: 21,\n    name: 'Paid'\n  }, {\n    color: theme.palette.error.main,\n    data: 10,\n    name: 'Overdue'\n  }];\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    colors: series.map(item => item.color),\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      padding: {\n        left: 0,\n        right: 0\n      }\n    },\n    labels: series.map(item => item.name),\n    legend: {\n      show: false\n    },\n    stroke: {\n      width: 0\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      theme: theme.palette.mode\n    }\n  };\n  const chartSeries = series.map(item => item.data);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    elevation: 0,\n    sx: {\n      backgroundColor: alpha(theme.palette.info.main, 0.1),\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"overline\",\n            children: \"Total net income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            sx: {\n              mb: 3\n            },\n            variant: \"h4\",\n            children: \"$12,200.00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: [\"From a total of\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), ' ', \"Invoices\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          sx: {\n            display: 'flex',\n            flexDirection: {\n              sm: 'row',\n              xs: 'column'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chart, {\n            options: chartOptions,\n            series: chartSeries,\n            type: \"donut\",\n            width: 150\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              flex: 1\n            },\n            children: series.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n              disableGutters: true,\n              sx: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(StatusBadge, {\n                color: item.color,\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"body2\",\n                children: numeral(item.data).format('$0,0.00')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, item.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoicesStats, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = InvoicesStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoicesStats\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/invoices/invoices-stats.js"],"names":["Chart","numeral","Box","Card","CardContent","Grid","List","ListItem","Typography","alpha","useTheme","StatusBadge","InvoicesStats","theme","series","color","palette","info","main","data","name","success","error","chartOptions","chart","background","stacked","toolbar","show","zoom","enabled","colors","map","item","dataLabels","grid","padding","left","right","labels","legend","stroke","width","mode","tooltip","chartSeries","backgroundColor","mb","display","flexDirection","sm","xs","flex","mr","flexGrow","format"],"mappings":"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","sourcesContent":["import Chart from 'react-apexcharts';\nimport numeral from 'numeral';\nimport { Box, Card, CardContent, Grid, List, ListItem, Typography } from '@material-ui/core';\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport { StatusBadge } from '../status-badge';\n\nexport const InvoicesStats = () => {\n  const theme = useTheme();\n\n  const series = [\n    {\n      color: theme.palette.info.main,\n      data: 121,\n      name: 'Ongoing'\n    },\n    {\n      color: theme.palette.success.main,\n      data: 21,\n      name: 'Paid'\n    },\n    {\n      color: theme.palette.error.main,\n      data: 10,\n      name: 'Overdue'\n    }\n  ];\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    colors: series.map((item) => item.color),\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      padding: {\n        left: 0,\n        right: 0\n      }\n    },\n    labels: series.map((item) => item.name),\n    legend: {\n      show: false\n    },\n    stroke: {\n      width: 0\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      theme: theme.palette.mode\n    }\n  };\n\n  const chartSeries = series.map((item) => item.data);\n\n  return (\n    <Card\n      elevation={0}\n      sx={{\n        backgroundColor: alpha(theme.palette.info.main, 0.1),\n        mb: 4\n      }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <Typography\n              color=\"textSecondary\"\n              variant=\"overline\"\n            >\n              Total net income\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mb: 3 }}\n              variant=\"h4\"\n            >\n              $12,200.00\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              From a total of\n              {' '}\n              <strong>6</strong>\n              {' '}\n              Invoices\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n            sx={{\n              display: 'flex',\n              flexDirection: {\n                sm: 'row',\n                xs: 'column'\n              }\n            }}\n          >\n            <Chart\n              options={chartOptions}\n              series={chartSeries}\n              type=\"donut\"\n              width={150}\n            />\n            <List sx={{ flex: 1 }}>\n              {series.map((item) => (\n                <ListItem\n                  disableGutters\n                  key={item.name}\n                  sx={{ display: 'flex' }}\n                >\n                  <StatusBadge\n                    color={item.color}\n                    sx={{ mr: 1 }}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    {item.name}\n                  </Typography>\n                  <Box sx={{ flexGrow: 1 }} />\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"body2\"\n                  >\n                    {numeral(item.data).format('$0,0.00')}\n                  </Typography>\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}