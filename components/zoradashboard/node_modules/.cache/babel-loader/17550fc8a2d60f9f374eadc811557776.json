{"ast":null,"code":"// Profile api to get current profile\nimport jwt_decode from \"jwt-decode\";\n\nclass ProfileAPI {\n  async me(accessToken) {\n    // await wait(500)\n    return new Promise((resolve, reject) => {\n      const {\n        user_id\n      } = jwt_decode(accessToken);\n      console.log(user_id);\n      console.log(\"before making request\");\n      axios.get('http://localhost:8000/zoracloud/profiles/me', {\n        headers: {\n          'Authorization': `JWT ${accessToken}`\n        }\n      }).then(function ({\n        data\n      }) {\n        resolve(data);\n      }).catch(function (error) {\n        console.error('[Auth Api]: ', err);\n        reject(new Error('Internal server error'));\n      });\n    });\n  }\n\n}\n\nexport const profileAPI = new ProfileAPI();","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/api/profile.js"],"names":["jwt_decode","ProfileAPI","me","accessToken","Promise","resolve","reject","user_id","console","log","axios","get","headers","then","data","catch","error","err","Error","profileAPI"],"mappings":"AAAA;AACA,OAAOA,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,UAAN,CAAiB;AACL,QAAFC,EAAE,CAACC,WAAD,EAAc;AAClB;AAEA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEtC,YAAM;AAAEC,QAAAA;AAAF,UAAcP,UAAU,CAACG,WAAD,CAA9B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEEC,MAAAA,KAAK,CAACC,GAAN,CAAU,6CAAV,EAAyD;AACnDC,QAAAA,OAAO,EAAE;AACP,2BAAkB,OAAMT,WAAY;AAD7B;AAD0C,OAAzD,EAKGU,IALH,CAKQ,UAAS;AACbC,QAAAA;AADa,OAAT,EAEJ;AACAT,QAAAA,OAAO,CAACS,IAAD,CAAP;AACD,OATH,EAUGC,KAVH,CAUS,UAASC,KAAT,EAAe;AACpBR,QAAAA,OAAO,CAACQ,KAAR,CAAc,cAAd,EAA8BC,GAA9B;AACAX,QAAAA,MAAM,CAAC,IAAIY,KAAJ,CAAU,uBAAV,CAAD,CAAN;AACD,OAbH;AAcD,KArBI,CAAP;AAuBE;;AA3BO;;AA+BjB,OAAO,MAAMC,UAAU,GAAG,IAAIlB,UAAJ,EAAnB","sourcesContent":["// Profile api to get current profile\nimport jwt_decode from \"jwt-decode\";\n\nclass ProfileAPI {\n    async me(accessToken) {\n        // await wait(500)\n        \n        return new Promise((resolve, reject) => {\n\n          const { user_id } = jwt_decode(accessToken);\n          console.log(user_id)\n\n          console.log(\"before making request\")\n  \n            axios.get('http://localhost:8000/zoracloud/profiles/me', {\n                  headers: {\n                    'Authorization': `JWT ${accessToken}`\n                  }\n                })\n              .then(function({\n                data\n              }){\n                resolve(data)\n              })\n              .catch(function(error){\n                console.error('[Auth Api]: ', err);\n                reject(new Error('Internal server error'));\n              })\n          }\n\n        )}\n\n}\n\nexport const profileAPI = new ProfileAPI();"]},"metadata":{},"sourceType":"module"}