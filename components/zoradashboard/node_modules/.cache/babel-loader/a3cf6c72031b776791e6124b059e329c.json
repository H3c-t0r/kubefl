{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/dashboard-navbar-menu-item.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Collapse, List, ListItemButton, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { ChevronRight as ChevronRightIcon } from '../icons/chevron-right';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport { ExternalLink as ExternalLinkIcon } from '../icons/external-link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DashboardNavbarMenuItem = props => {\n  _s();\n\n  const {\n    active,\n    activeHref,\n    external,\n    href,\n    icon: Icon,\n    items,\n    onClose,\n    onOpenItem,\n    open,\n    title\n  } = props;\n  const {\n    t\n  } = useTranslation(); // Branch\n\n  if (items) {\n    return /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        divider: true,\n        onClick: onOpenItem,\n        sx: {\n          alignItems: 'center',\n          borderColor: '#3F455A',\n          display: 'flex',\n          px: 3,\n          py: 1.5,\n          ...(active && {\n            backgroundColor: '#383D4D',\n            color: '#ffffff'\n          }),\n          '&:hover': {\n            backgroundColor: '#383D4D',\n            color: '#ffffff'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          sx: {\n            color: 'inherit',\n            minWidth: 0,\n            mr: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: t(title),\n          primaryTypographyProps: {\n            color: 'inherit',\n            variant: 'caption'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), open ? /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n          fontSize: \"small\",\n          sx: {\n            color: '#506176'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n          fontSize: \"small\",\n          sx: {\n            color: '#506176'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          sx: {\n            width: '100%'\n          },\n          children: items.map(item => {\n            const isActive = activeHref === item.href;\n            return /*#__PURE__*/_jsxDEV(ListItemButton, {\n              component: RouterLink,\n              divider: true,\n              onClick: onClose,\n              sx: {\n                alignItems: 'center',\n                borderColor: '#3F455A',\n                display: 'flex',\n                px: 3,\n                py: 1.5,\n                ...(isActive && {\n                  backgroundColor: '#383D4D',\n                  color: '#ffffff'\n                }),\n                '&:hover': {\n                  backgroundColor: '#383D4D',\n                  color: '#ffffff'\n                }\n              },\n              to: item.href,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: t(item.title),\n                primaryTypographyProps: {\n                  color: 'inherit',\n                  variant: 'caption'\n                },\n                sx: {\n                  my: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, item.href, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } // Leaf\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n      component: RouterLink,\n      divider: true,\n      onClick: onClose,\n      sx: {\n        alignItems: 'center',\n        borderColor: '#3F455A',\n        display: 'flex',\n        px: 3,\n        py: 1.5,\n        ...(active && {\n          backgroundColor: '#383D4D',\n          color: '#ffffff'\n        }),\n        '&:hover': {\n          backgroundColor: '#383D4D',\n          color: '#ffffff'\n        }\n      },\n      target: external ? '_target' : '_self',\n      to: href,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        sx: {\n          color: 'inherit',\n          minWidth: 0,\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: t(title),\n        primaryTypographyProps: {\n          color: 'inherit',\n          variant: 'caption'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), external && /*#__PURE__*/_jsxDEV(ExternalLinkIcon, {\n        sx: {\n          color: '#506176'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(DashboardNavbarMenuItem, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DashboardNavbarMenuItem;\nDashboardNavbarMenuItem.defaultProps = {\n  open: false\n};\nDashboardNavbarMenuItem.propTypes = {\n  active: PropTypes.bool,\n  activeHref: PropTypes.string,\n  external: PropTypes.bool,\n  href: PropTypes.string,\n  // @ts-ignore\n  icon: PropTypes.elementType,\n  items: PropTypes.array,\n  onClose: PropTypes.func,\n  onOpenItem: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbarMenuItem\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/dashboard-navbar-menu-item.js"],"names":["Link","RouterLink","PropTypes","useTranslation","Collapse","List","ListItemButton","ListItemIcon","ListItemText","ChevronRight","ChevronRightIcon","ChevronDown","ChevronDownIcon","ExternalLink","ExternalLinkIcon","DashboardNavbarMenuItem","props","active","activeHref","external","href","icon","Icon","items","onClose","onOpenItem","open","title","t","width","alignItems","borderColor","display","px","py","backgroundColor","color","minWidth","mr","variant","map","item","isActive","my","defaultProps","propTypes","bool","string","elementType","array","func"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Collapse, List, ListItemButton, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { ChevronRight as ChevronRightIcon } from '../icons/chevron-right';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport { ExternalLink as ExternalLinkIcon } from '../icons/external-link';\n\nexport const DashboardNavbarMenuItem = (props) => {\n  const {\n    active,\n    activeHref,\n    external,\n    href,\n    icon: Icon,\n    items,\n    onClose,\n    onOpenItem,\n    open,\n    title\n  } = props;\n  const { t } = useTranslation();\n\n  // Branch\n  if (items) {\n    return (\n      <List\n        disablePadding\n        sx={{ width: '100%' }}\n      >\n        <ListItemButton\n          divider\n          key={title}\n          onClick={onOpenItem}\n          sx={{\n            alignItems: 'center',\n            borderColor: '#3F455A',\n            display: 'flex',\n            px: 3,\n            py: 1.5,\n            ...active && ({\n              backgroundColor: '#383D4D',\n              color: '#ffffff'\n            }),\n            '&:hover': {\n              backgroundColor: '#383D4D',\n              color: '#ffffff'\n            }\n          }}\n        >\n          <ListItemIcon\n            sx={{\n              color: 'inherit',\n              minWidth: 0,\n              mr: 1\n            }}\n          >\n            <Icon />\n          </ListItemIcon>\n          <ListItemText\n            primary={t(title)}\n            primaryTypographyProps={{\n              color: 'inherit',\n              variant: 'caption'\n            }}\n          />\n          {open\n            ? (\n              <ChevronDownIcon\n                fontSize=\"small\"\n                sx={{ color: '#506176' }}\n              />\n            )\n            : (\n              <ChevronRightIcon\n                fontSize=\"small\"\n                sx={{ color: '#506176' }}\n              />\n            )}\n        </ListItemButton>\n        <Collapse\n          in={open}\n          unmountOnExit\n        >\n          <List\n            disablePadding\n            sx={{ width: '100%' }}\n          >\n            {items.map((item) => {\n              const isActive = activeHref === item.href;\n\n              return (\n                <ListItemButton\n                  component={RouterLink}\n                  divider\n                  key={item.href}\n                  onClick={onClose}\n                  sx={{\n                    alignItems: 'center',\n                    borderColor: '#3F455A',\n                    display: 'flex',\n                    px: 3,\n                    py: 1.5,\n                    ...isActive && ({\n                      backgroundColor: '#383D4D',\n                      color: '#ffffff'\n                    }),\n                    '&:hover': {\n                      backgroundColor: '#383D4D',\n                      color: '#ffffff'\n                    }\n                  }}\n                  to={item.href}\n                >\n                  <ListItemText\n                    primary={t(item.title)}\n                    primaryTypographyProps={{\n                      color: 'inherit',\n                      variant: 'caption'\n                    }}\n                    sx={{ my: 0 }}\n                  />\n                </ListItemButton>\n              );\n            })}\n          </List>\n        </Collapse>\n      </List>\n    );\n  }\n\n  // Leaf\n  return (\n    <>\n      <ListItemButton\n        component={RouterLink}\n        divider\n        onClick={onClose}\n        sx={{\n          alignItems: 'center',\n          borderColor: '#3F455A',\n          display: 'flex',\n          px: 3,\n          py: 1.5,\n          ...active && ({\n            backgroundColor: '#383D4D',\n            color: '#ffffff'\n          }),\n          '&:hover': {\n            backgroundColor: '#383D4D',\n            color: '#ffffff'\n          }\n        }}\n        target={external ? '_target' : '_self'}\n        to={href}\n      >\n        <ListItemIcon\n          sx={{\n            color: 'inherit',\n            minWidth: 0,\n            mr: 1\n          }}\n        >\n          <Icon />\n        </ListItemIcon>\n        <ListItemText\n          primary={t(title)}\n          primaryTypographyProps={{\n            color: 'inherit',\n            variant: 'caption'\n          }}\n        />\n        {external && <ExternalLinkIcon sx={{ color: '#506176' }} />}\n      </ListItemButton>\n    </>\n  );\n};\n\nDashboardNavbarMenuItem.defaultProps = {\n  open: false\n};\n\nDashboardNavbarMenuItem.propTypes = {\n  active: PropTypes.bool,\n  activeHref: PropTypes.string,\n  external: PropTypes.bool,\n  href: PropTypes.string,\n  // @ts-ignore\n  icon: PropTypes.elementType,\n  items: PropTypes.array,\n  onClose: PropTypes.func,\n  onOpenItem: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}