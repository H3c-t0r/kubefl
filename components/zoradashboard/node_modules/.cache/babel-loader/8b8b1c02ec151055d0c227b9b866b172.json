{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/home/user-flows.js\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, Button, Chip, Container, Grid, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = ['Customers', 'Products', 'Orders', 'Invoices', 'Organization'];\nexport const UserFlows = () => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    backgroundColor: 'primary.main',\n    py: {\n      md: 0,\n      xs: 10\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      alignItems: \"center\",\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 6,\n        sx: {\n          mb: {\n            md: 0,\n            xs: 6\n          }\n        },\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: 'primary.contrastText'\n          },\n          variant: \"h1\",\n          children: \"Management User Flows\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: 'primary.contrastText',\n            fontSize: 22,\n            mb: 3,\n            mt: 2\n          },\n          children: \"Rather than a generic template, we focused on management-specific screens to enable developers focus on the important part of the development process.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          wrap: \"wrap\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              label: item,\n              sx: {\n                backgroundColor: 'rgba(255, 255, 255, 0.16)',\n                color: 'primary.contrastText'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          component: RouterLink,\n          size: \"large\",\n          sx: {\n            backgroundColor: 'primary.contrastText',\n            color: 'primary.main',\n            mt: 3,\n            '&:hover': {\n              backgroundColor: 'primary.contrastText'\n            }\n          },\n          to: \"/dashboard\",\n          variant: \"contained\",\n          children: \"Live Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 6,\n        sx: {\n          display: {\n            md: 'block',\n            xs: 'none'\n          },\n          '& img': {\n            display: 'block',\n            maxWidth: '100%'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"user flows\",\n          src: \"/static/screens.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c = UserFlows;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserFlows\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/home/user-flows.js"],"names":["Link","RouterLink","Box","Button","Chip","Container","Grid","Typography","items","UserFlows","backgroundColor","py","md","xs","mb","color","fontSize","mt","map","item","display","maxWidth"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport { Box, Button, Chip, Container, Grid, Typography } from '@material-ui/core';\n\nconst items = [\n  'Customers',\n  'Products',\n  'Orders',\n  'Invoices',\n  'Organization'\n];\n\nexport const UserFlows = () => (\n  <Box\n    sx={{\n      backgroundColor: 'primary.main',\n      py: {\n        md: 0,\n        xs: 10\n      }\n    }}\n  >\n    <Container maxWidth=\"lg\">\n      <Grid\n        alignItems=\"center\"\n        container\n      >\n        <Grid\n          item\n          md={6}\n          sx={{\n            mb: {\n              md: 0,\n              xs: 6\n            }\n          }}\n          xs={12}\n        >\n          <Typography\n            sx={{ color: 'primary.contrastText' }}\n            variant=\"h1\"\n          >\n            Management User Flows\n          </Typography>\n          <Typography\n            sx={{\n              color: 'primary.contrastText',\n              fontSize: 22,\n              mb: 3,\n              mt: 2\n            }}\n          >\n            Rather than a generic template, we focused on management-specific screens to enable\n            developers focus on the important part of the development process.\n          </Typography>\n          <Grid\n            container\n            spacing={2}\n            wrap=\"wrap\"\n          >\n            {items.map((item) => (\n              <Grid\n                item\n                key={item}\n              >\n                <Chip\n                  label={item}\n                  sx={{\n                    backgroundColor: 'rgba(255, 255, 255, 0.16)',\n                    color: 'primary.contrastText'\n                  }}\n                />\n              </Grid>\n            ))}\n          </Grid>\n          <Button\n            component={RouterLink}\n            size=\"large\"\n            sx={{\n              backgroundColor: 'primary.contrastText',\n              color: 'primary.main',\n              mt: 3,\n              '&:hover': {\n                backgroundColor: 'primary.contrastText'\n              }\n            }}\n            to=\"/dashboard\"\n            variant=\"contained\"\n          >\n            Live Demo\n          </Button>\n        </Grid>\n        <Grid\n          item\n          md={6}\n          sx={{\n            display: {\n              md: 'block',\n              xs: 'none'\n            },\n            '& img': {\n              display: 'block',\n              maxWidth: '100%'\n            }\n          }}\n        >\n          <img\n            alt=\"user flows\"\n            src=\"/static/screens.png\"\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  </Box>\n);\n"]},"metadata":{},"sourceType":"module"}