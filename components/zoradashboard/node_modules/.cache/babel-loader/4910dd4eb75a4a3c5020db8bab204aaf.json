{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/wizard-notifications.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, CardHeader, Divider, List, ListItem, Switch, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notificationOptions = [{\n  name: 'newOrders',\n  label: 'New Orders'\n}, {\n  name: 'newCompanySignups',\n  label: ' New Company Signups'\n}, {\n  name: 'publishErrors',\n  label: 'Publish Errors'\n}];\nexport const WizardNotifications = props => {\n  _s();\n\n  const {\n    initialNotifications,\n    onNextStep,\n    onPreviousStep\n  } = props;\n  const [notifications, setNotifications] = useState(initialNotifications);\n\n  const handleNotificationsChange = event => {\n    setNotifications(prevNotifications => ({ ...prevNotifications,\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => onNextStep({\n        notifications\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        sx: {\n          mb: 5,\n          mt: 2\n        },\n        variant: \"h6\",\n        children: \"Step 3. Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          subheader: \"Manage your alert notifications\",\n          title: \"Email Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          children: notificationOptions.map((option, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            divider: index + 1 < notificationOptions.length,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              variant: \"body2\",\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              checked: notifications[option.name],\n              name: option.name,\n              onChange: handleNotificationsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, option.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: onPreviousStep,\n          size: \"large\",\n          sx: {\n            mr: 2\n          },\n          type: \"button\",\n          variant: \"text\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Next Step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WizardNotifications, \"5UqXDPgVY9Xt3KRbPZxKUI4mDn8=\");\n\n_c = WizardNotifications;\nWizardNotifications.propTypes = {\n  // @ts-ignore\n  initialNotifications: PropTypes.shape({\n    newCompanySignups: PropTypes.bool.isRequired,\n    newOrders: PropTypes.bool.isRequired,\n    publishErrors: PropTypes.bool.isRequired\n  }).isRequired,\n  onNextStep: PropTypes.func.isRequired,\n  onPreviousStep: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"WizardNotifications\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/wizard-notifications.js"],"names":["useState","PropTypes","Box","Button","Card","CardHeader","Divider","List","ListItem","Switch","Typography","notificationOptions","name","label","WizardNotifications","props","initialNotifications","onNextStep","onPreviousStep","notifications","setNotifications","handleNotificationsChange","event","prevNotifications","target","checked","mb","mt","map","option","index","length","flexGrow","display","justifyContent","mr","propTypes","shape","newCompanySignups","bool","isRequired","newOrders","publishErrors","func"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  Switch,\n  Typography\n} from '@material-ui/core';\n\nconst notificationOptions = [\n  {\n    name: 'newOrders',\n    label: 'New Orders'\n  },\n  {\n    name: 'newCompanySignups',\n    label: ' New Company Signups'\n  },\n  {\n    name: 'publishErrors',\n    label: 'Publish Errors'\n  }\n];\n\nexport const WizardNotifications = (props) => {\n  const { initialNotifications, onNextStep, onPreviousStep } = props;\n  const [notifications, setNotifications] = useState(initialNotifications);\n\n  const handleNotificationsChange = (event) => {\n    setNotifications((prevNotifications) => ({\n      ...prevNotifications,\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  return (\n    <div>\n      <form onSubmit={() => onNextStep({ notifications })}>\n        <Typography\n          color=\"textPrimary\"\n          sx={{\n            mb: 5,\n            mt: 2\n          }}\n          variant=\"h6\"\n        >\n          Step 3. Notifications\n        </Typography>\n        <Card variant=\"outlined\">\n          <CardHeader\n            subheader=\"Manage your alert notifications\"\n            title=\"Email Notifications\"\n          />\n          <Divider />\n          <List disablePadding>\n            {notificationOptions.map((option, index) => (\n              <ListItem\n                divider={index + 1 < notificationOptions.length}\n                key={option.name}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  {option.label}\n                </Typography>\n                <Box sx={{ flexGrow: 1 }} />\n                <Switch\n                  checked={notifications[option.name]}\n                  name={option.name}\n                  onChange={handleNotificationsChange}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Card>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            mt: 3\n          }}\n        >\n          <Button\n            color=\"primary\"\n            onClick={onPreviousStep}\n            size=\"large\"\n            sx={{ mr: 2 }}\n            type=\"button\"\n            variant=\"text\"\n          >\n            Back\n          </Button>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Next Step\n          </Button>\n        </Box>\n      </form>\n    </div>\n  );\n};\n\nWizardNotifications.propTypes = {\n  // @ts-ignore\n  initialNotifications: PropTypes.shape({\n    newCompanySignups: PropTypes.bool.isRequired,\n    newOrders: PropTypes.bool.isRequired,\n    publishErrors: PropTypes.bool.isRequired\n  }).isRequired,\n  onNextStep: PropTypes.func.isRequired,\n  onPreviousStep: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}