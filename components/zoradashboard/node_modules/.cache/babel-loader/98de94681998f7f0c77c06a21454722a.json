{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/account/account-details.js\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Avatar, Box, Button, Card, CardContent, FormHelperText, Grid, MenuItem, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useProfile } from '../../hooks/use-profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst companySizeOptions = ['1-10', '11-30', '31-50', '50+'];\nexport const AccountDetails = props => {\n  _s();\n\n  const {\n    getProfile,\n    testFunc\n  } = useProfile();\n  useEffect(() => {\n    function loadPro() {\n      // const loading = async () =>{\n      //   await getProfile()\n      //   // try {\n      //   //   await getProfile()\n      //   //   console.log(result)\n      //   // } catch (err) {\n      //   //   console.log(err)\n      //   // }\n      // }\n      // return loading()\n      console.log(\"loaded 1\");\n    }\n\n    function execute() {\n      result = testFunc(); // async () => {\n      //   await getProfile(\"token\")\n      // }\n\n      cons;\n    } // console.log(execute())\n\n\n    execute();\n    loadPro();\n  }); // console.log(profileContext)\n  // loadPro(profileContext)\n  // console.log(currentProfile)\n  // function loadProfile(){\n  //   await currentProfile.getProfile()\n  // }\n  // function loadPro(){\n  //   const loading = async () =>{\n  //     try {\n  //       // await getProfile()\n  //       console.log(\"1\")\n  //     } catch (err) {\n  //       console.log(err)\n  //     }\n  //   }\n  //   return loading()\n  // }\n  //  console.log(loadPro())\n  // console.log(loadProf)\n  // const {\n  //   profile: profileProp,\n  // } = props;\n\n  const formik = useFormik({\n    initialValues: {\n      companyName: 'ACME Corp LLC.',\n      companySize: '1-10',\n      email: 'chen.simmons@acmecorp.com',\n      fullName: 'Chen Simmons',\n      jobTitle: 'Operation',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      companyName: Yup.string().max(255).required('Company name is required'),\n      companySize: Yup.string().max(255).oneOf(companySizeOptions).required('Company size is required'),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      fullName: Yup.string().max(255).required('Full Name is required'),\n      jobTitle: Yup.string().max(255).required('Job name is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Settings saved');\n        helpers.resetForm();\n        helpers.setStatus({\n          success: true\n        });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  const myState = useState(); // console.log(myState)\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 5,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"h6\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 7,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  alignItems: 'center',\n                  display: 'flex',\n                  pb: 3\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: \"/static/user-chen_simmons.png\",\n                  sx: {\n                    height: 64,\n                    mr: 2,\n                    width: 64\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 1,\n                    sx: {\n                      pb: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        size: \"small\",\n                        type: \"button\",\n                        variant: \"outlined\",\n                        children: \"Upload new picture\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        size: \"small\",\n                        type: \"button\",\n                        variant: \"text\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    variant: \"caption\",\n                    children: \"Recommended dimensions: 200x200, maximum file size: 5MB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.fullName && formik.errors.fullName),\n                    fullWidth: true,\n                    helperText: formik.touched.fullName && formik.errors.fullName,\n                    label: \"Full Name\",\n                    name: \"fullName\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.fullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.email && formik.errors.email),\n                    fullWidth: true,\n                    helperText: formik.touched.email && formik.errors.email,\n                    label: \"Email address\",\n                    name: \"email\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    type: \"email\",\n                    value: formik.values.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.jobTitle && formik.errors.jobTitle),\n                    fullWidth: true,\n                    helperText: formik.touched.jobTitle && formik.errors.jobTitle,\n                    label: \"Job title\",\n                    name: \"jobTitle\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.jobTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.companyName && formik.errors.companyName),\n                    fullWidth: true,\n                    helperText: formik.touched.companyName && formik.errors.companyName,\n                    label: \"Company name\",\n                    name: \"companyName\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.companyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.companySize && formik.errors.companySize),\n                    fullWidth: true,\n                    helperText: formik.touched.companySize && formik.errors.companySize,\n                    label: \"Company size\",\n                    name: \"companySize\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    select: true,\n                    value: formik.values.companySize,\n                    children: companySizeOptions.map(companySizeOption => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: companySizeOption,\n                      children: companySizeOption\n                    }, companySizeOption, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    error: true,\n                    children: formik.errors.submit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    size: \"large\",\n                    type: \"submit\",\n                    variant: \"contained\",\n                    children: \"Save settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountDetails, \"oxlAnsygbupzbS05SJcsy/7tb0M=\", false, function () {\n  return [useProfile, useFormik];\n});\n\n_c = AccountDetails;\nAccountDetails.defaultProps = {\n  profile: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountDetails\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/account/account-details.js"],"names":["useFormik","Yup","toast","Avatar","Box","Button","Card","CardContent","FormHelperText","Grid","MenuItem","Typography","InputField","React","useEffect","useState","useContext","useProfile","companySizeOptions","AccountDetails","props","getProfile","testFunc","loadPro","console","log","execute","result","cons","formik","initialValues","companyName","companySize","email","fullName","jobTitle","submit","validationSchema","object","shape","string","max","required","oneOf","onSubmit","values","helpers","success","resetForm","setStatus","setSubmitting","err","error","setErrors","message","myState","handleSubmit","alignItems","display","pb","height","mr","width","Boolean","touched","errors","handleBlur","handleChange","map","companySizeOption","defaultProps","profile"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,cANF,EAOEC,IAPF,EAQEC,QARF,EASEC,UATF,QAUO,mBAVP;AAWA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,MAAMC,kBAAkB,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,KAA3B,CAA3B;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAEvC,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAAyBL,UAAU,EAAzC;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,aAASS,OAAT,GAAkB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AAED,aAASC,OAAT,GAAkB;AAChBC,MAAAA,MAAM,GAAGL,QAAQ,EAAjB,CADgB,CAEhB;AACA;AACA;;AACAM,MAAAA,IAAI;AACL,KArBa,CAuBd;;;AACAF,IAAAA,OAAO;AACPH,IAAAA,OAAO;AACR,GA1BQ,CAAT,CANuC,CAkCvC;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKF;AAKE;AACA;AACA;AACA;;AAEA,QAAMM,MAAM,GAAG7B,SAAS,CAAC;AACvB8B,IAAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE,gBADA;AAEbC,MAAAA,WAAW,EAAE,MAFA;AAGbC,MAAAA,KAAK,EAAE,2BAHM;AAIbC,MAAAA,QAAQ,EAAE,cAJG;AAKbC,MAAAA,QAAQ,EAAE,WALG;AAMbC,MAAAA,MAAM,EAAE;AANK,KADQ;AASvBC,IAAAA,gBAAgB,EAAEpC,GAAG,CAACqC,MAAJ,GAAaC,KAAb,CAAmB;AACnCR,MAAAA,WAAW,EAAE9B,GAAG,CAACuC,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,EAAsBC,QAAtB,CAA+B,0BAA/B,CADsB;AAEnCV,MAAAA,WAAW,EAAE/B,GAAG,CACbuC,MADU,GAEVC,GAFU,CAEN,GAFM,EAGVE,KAHU,CAGJzB,kBAHI,EAIVwB,QAJU,CAID,0BAJC,CAFsB;AAOnCT,MAAAA,KAAK,EAAEhC,GAAG,CAACuC,MAAJ,GAAaP,KAAb,CAAmB,uBAAnB,EAA4CQ,GAA5C,CAAgD,GAAhD,EAAqDC,QAArD,CAA8D,mBAA9D,CAP4B;AAQnCR,MAAAA,QAAQ,EAAEjC,GAAG,CAACuC,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,EAAsBC,QAAtB,CAA+B,uBAA/B,CARyB;AASnCP,MAAAA,QAAQ,EAAElC,GAAG,CAACuC,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,EAAsBC,QAAtB,CAA+B,sBAA/B;AATyB,KAAnB,CATK;AAoBvBE,IAAAA,QAAQ,EAAE,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AACnC,UAAI;AACF5C,QAAAA,KAAK,CAAC6C,OAAN,CAAc,gBAAd;AACAD,QAAAA,OAAO,CAACE,SAAR;AACAF,QAAAA,OAAO,CAACG,SAAR,CAAkB;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAlB;AACAD,QAAAA,OAAO,CAACI,aAAR,CAAsB,KAAtB;AACD,OALD,CAKE,OAAOC,GAAP,EAAY;AACZ3B,QAAAA,OAAO,CAAC4B,KAAR,CAAcD,GAAd;AACAL,QAAAA,OAAO,CAACG,SAAR,CAAkB;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAlB;AACAD,QAAAA,OAAO,CAACO,SAAR,CAAkB;AAAEjB,UAAAA,MAAM,EAAEe,GAAG,CAACG;AAAd,SAAlB;AACAR,QAAAA,OAAO,CAACI,aAAR,CAAsB,KAAtB;AACD;AACF;AAhCsB,GAAD,CAAxB;AAkCA,QAAMK,OAAO,GAAGxC,QAAQ,EAAxB,CAxGuC,CA0GvC;;AACA,sBACE,QAAC,IAAD;AACE,IAAA,OAAO,EAAC,UADV;AAAA,OAEMK,KAFN;AAAA,2BAIE,QAAC,WAAD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE,CAFX;AAAA,gCAIE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,EAAE,EAAE,EAHN;AAAA,iCAKE,QAAC,UAAD;AACE,YAAA,KAAK,EAAC,aADR;AAEE,YAAA,OAAO,EAAC,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAgBE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,EAAE,EAAE,EAHN;AAAA,iCAKE;AAAM,YAAA,QAAQ,EAAES,MAAM,CAAC2B,YAAvB;AAAA,mCACE;AAAA,sCACE,QAAC,GAAD;AACE,gBAAA,EAAE,EAAE;AACFC,kBAAAA,UAAU,EAAE,QADV;AAEFC,kBAAAA,OAAO,EAAE,MAFP;AAGFC,kBAAAA,EAAE,EAAE;AAHF,iBADN;AAAA,wCAOE,QAAC,MAAD;AACE,kBAAA,GAAG,EAAC,+BADN;AAEE,kBAAA,EAAE,EAAE;AACFC,oBAAAA,MAAM,EAAE,EADN;AAEFC,oBAAAA,EAAE,EAAE,CAFF;AAGFC,oBAAAA,KAAK,EAAE;AAHL;AAFN;AAAA;AAAA;AAAA;AAAA,wBAPF,eAeE;AAAA,0CACE,QAAC,IAAD;AACE,oBAAA,SAAS,MADX;AAEE,oBAAA,OAAO,EAAE,CAFX;AAGE,oBAAA,EAAE,EAAE;AAAEH,sBAAAA,EAAE,EAAE;AAAN,qBAHN;AAAA,4CAKE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAA,6CACE,QAAC,MAAD;AACE,wBAAA,KAAK,EAAC,SADR;AAEE,wBAAA,IAAI,EAAC,OAFP;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BALF,eAeE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAA,6CACE,QAAC,MAAD;AACE,wBAAA,KAAK,EAAC,SADR;AAEE,wBAAA,IAAI,EAAC,OAFP;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eA2BE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAC,eADR;AAEE,oBAAA,OAAO,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAmDE,QAAC,IAAD;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,OAAO,EAAE,CAFX;AAAA,wCAIE,QAAC,IAAD;AACE,kBAAA,IAAI,MADN;AAEE,kBAAA,EAAE,EAAE,EAFN;AAAA,yCAIE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAEI,OAAO,CAAClC,MAAM,CAACmC,OAAP,CAAe9B,QAAf,IAA2BL,MAAM,CAACoC,MAAP,CAAc/B,QAA1C,CADhB;AAEE,oBAAA,SAAS,MAFX;AAGE,oBAAA,UAAU,EAAEL,MAAM,CAACmC,OAAP,CAAe9B,QAAf,IAA2BL,MAAM,CAACoC,MAAP,CAAc/B,QAHvD;AAIE,oBAAA,KAAK,EAAC,WAJR;AAKE,oBAAA,IAAI,EAAC,UALP;AAME,oBAAA,MAAM,EAAEL,MAAM,CAACqC,UANjB;AAOE,oBAAA,QAAQ,EAAErC,MAAM,CAACsC,YAPnB;AAQE,oBAAA,KAAK,EAAEtC,MAAM,CAACgB,MAAP,CAAcX;AARvB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBAJF,eAmBE,QAAC,IAAD;AACE,kBAAA,IAAI,MADN;AAEE,kBAAA,EAAE,EAAE,EAFN;AAAA,yCAIE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAE6B,OAAO,CAAClC,MAAM,CAACmC,OAAP,CAAe/B,KAAf,IAAwBJ,MAAM,CAACoC,MAAP,CAAchC,KAAvC,CADhB;AAEE,oBAAA,SAAS,MAFX;AAGE,oBAAA,UAAU,EAAEJ,MAAM,CAACmC,OAAP,CAAe/B,KAAf,IAAwBJ,MAAM,CAACoC,MAAP,CAAchC,KAHpD;AAIE,oBAAA,KAAK,EAAC,eAJR;AAKE,oBAAA,IAAI,EAAC,OALP;AAME,oBAAA,MAAM,EAAEJ,MAAM,CAACqC,UANjB;AAOE,oBAAA,QAAQ,EAAErC,MAAM,CAACsC,YAPnB;AAQE,oBAAA,IAAI,EAAC,OARP;AASE,oBAAA,KAAK,EAAEtC,MAAM,CAACgB,MAAP,CAAcZ;AATvB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBAnBF,eAmCE,QAAC,IAAD;AACE,kBAAA,IAAI,MADN;AAEE,kBAAA,EAAE,EAAE,EAFN;AAAA,yCAIE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAE8B,OAAO,CAAClC,MAAM,CAACmC,OAAP,CAAe7B,QAAf,IAA2BN,MAAM,CAACoC,MAAP,CAAc9B,QAA1C,CADhB;AAEE,oBAAA,SAAS,MAFX;AAGE,oBAAA,UAAU,EAAEN,MAAM,CAACmC,OAAP,CAAe7B,QAAf,IAA2BN,MAAM,CAACoC,MAAP,CAAc9B,QAHvD;AAIE,oBAAA,KAAK,EAAC,WAJR;AAKE,oBAAA,IAAI,EAAC,UALP;AAME,oBAAA,MAAM,EAAEN,MAAM,CAACqC,UANjB;AAOE,oBAAA,QAAQ,EAAErC,MAAM,CAACsC,YAPnB;AAQE,oBAAA,KAAK,EAAEtC,MAAM,CAACgB,MAAP,CAAcV;AARvB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBAnCF,eAkDE,QAAC,IAAD;AACE,kBAAA,IAAI,MADN;AAEE,kBAAA,EAAE,EAAE,EAFN;AAAA,yCAIE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAE4B,OAAO,CAAClC,MAAM,CAACmC,OAAP,CAAejC,WAAf,IACVF,MAAM,CAACoC,MAAP,CAAclC,WADL,CADhB;AAGE,oBAAA,SAAS,MAHX;AAIE,oBAAA,UAAU,EAAEF,MAAM,CAACmC,OAAP,CAAejC,WAAf,IAA8BF,MAAM,CAACoC,MAAP,CAAclC,WAJ1D;AAKE,oBAAA,KAAK,EAAC,cALR;AAME,oBAAA,IAAI,EAAC,aANP;AAOE,oBAAA,MAAM,EAAEF,MAAM,CAACqC,UAPjB;AAQE,oBAAA,QAAQ,EAAErC,MAAM,CAACsC,YARnB;AASE,oBAAA,KAAK,EAAEtC,MAAM,CAACgB,MAAP,CAAcd;AATvB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBAlDF,eAkEE,QAAC,IAAD;AACE,kBAAA,IAAI,MADN;AAEE,kBAAA,EAAE,EAAE,EAFN;AAAA,yCAIE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAEgC,OAAO,CAAClC,MAAM,CAACmC,OAAP,CAAehC,WAAf,IACVH,MAAM,CAACoC,MAAP,CAAcjC,WADL,CADhB;AAGE,oBAAA,SAAS,MAHX;AAIE,oBAAA,UAAU,EAAEH,MAAM,CAACmC,OAAP,CAAehC,WAAf,IAA8BH,MAAM,CAACoC,MAAP,CAAcjC,WAJ1D;AAKE,oBAAA,KAAK,EAAC,cALR;AAME,oBAAA,IAAI,EAAC,aANP;AAOE,oBAAA,MAAM,EAAEH,MAAM,CAACqC,UAPjB;AAQE,oBAAA,QAAQ,EAAErC,MAAM,CAACsC,YARnB;AASE,oBAAA,MAAM,MATR;AAUE,oBAAA,KAAK,EAAEtC,MAAM,CAACgB,MAAP,CAAcb,WAVvB;AAAA,8BAYGd,kBAAkB,CAACkD,GAAnB,CAAwBC,iBAAD,iBACtB,QAAC,QAAD;AAEE,sBAAA,KAAK,EAAEA,iBAFT;AAAA,gCAIGA;AAJH,uBACOA,iBADP;AAAA;AAAA;AAAA;AAAA,4BADD;AAZH;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBAlEF,EA4FGxC,MAAM,CAACoC,MAAP,CAAc7B,MAAd,iBACC,QAAC,IAAD;AACE,kBAAA,IAAI,MADN;AAEE,kBAAA,EAAE,EAAE,EAFN;AAAA,yCAIE,QAAC,cAAD;AAAgB,oBAAA,KAAK,MAArB;AAAA,8BACGP,MAAM,CAACoC,MAAP,CAAc7B;AADjB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBA7FJ,eAsGE,QAAC,IAAD;AACE,kBAAA,IAAI,MADN;AAEE,kBAAA,EAAE,EAAE,EAFN;AAAA,yCAIE,QAAC,MAAD;AACE,oBAAA,KAAK,EAAC,SADR;AAEE,oBAAA,IAAI,EAAC,OAFP;AAGE,oBAAA,IAAI,EAAC,QAHP;AAIE,oBAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBAtGF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AA0MD,CArTM;;GAAMjB,c;UAEoBF,U,EAoEhBjB,S;;;KAtEJmB,c;AAuTbA,cAAc,CAACmD,YAAf,GAA8B;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAA9B","sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport React, {useEffect, useState, useContext} from 'react';\nimport { useProfile } from '../../hooks/use-profile';\n\nconst companySizeOptions = ['1-10', '11-30', '31-50', '50+'];\n\nexport const AccountDetails = (props) => {\n\n  const {getProfile, testFunc} = useProfile()\n\n  \n\n  useEffect(() => {\n    function loadPro(){\n      // const loading = async () =>{\n      //   await getProfile()\n      //   // try {\n      //   //   await getProfile()\n      //   //   console.log(result)\n      //   // } catch (err) {\n      //   //   console.log(err)\n      //   // }\n      // }\n      // return loading()\n      console.log(\"loaded 1\")\n    }\n\n    function execute(){\n      result = testFunc()\n      // async () => {\n      //   await getProfile(\"token\")\n      // }\n      cons\n    }\n  \n    // console.log(execute())\n    execute()\n    loadPro()\n  })\n\n  // console.log(profileContext)\n\n  // loadPro(profileContext)\n\n  // console.log(currentProfile)\n\n  // function loadProfile(){\n  //   await currentProfile.getProfile()\n  // }\n\n\n  // function loadPro(){\n  //   const loading = async () =>{\n  //     try {\n  //       // await getProfile()\n  //       console.log(\"1\")\n  //     } catch (err) {\n  //       console.log(err)\n  //     }\n  //   }\n  //   return loading()\n  // }\n\n  \n  \n\n//  console.log(loadPro())\n\n  \n  \n\n  // console.log(loadProf)\n  // const {\n  //   profile: profileProp,\n  // } = props;\n\n  const formik = useFormik({\n    initialValues: {\n      companyName: 'ACME Corp LLC.',\n      companySize: '1-10',\n      email: 'chen.simmons@acmecorp.com',\n      fullName: 'Chen Simmons',\n      jobTitle: 'Operation',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      companyName: Yup.string().max(255).required('Company name is required'),\n      companySize: Yup\n        .string()\n        .max(255)\n        .oneOf(companySizeOptions)\n        .required('Company size is required'),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      fullName: Yup.string().max(255).required('Full Name is required'),\n      jobTitle: Yup.string().max(255).required('Job name is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Settings saved');\n        helpers.resetForm();\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  const myState = useState()\n\n  // console.log(myState)\n  return (\n    <Card\n      variant=\"outlined\"\n      {...props}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n        >\n          <Grid\n            item\n            md={5}\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h6\"\n            >\n              Settings\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={7}\n            xs={12}\n          >\n            <form onSubmit={formik.handleSubmit}>\n              <div>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    pb: 3\n                  }}\n                >\n                  <Avatar\n                    src=\"/static/user-chen_simmons.png\"\n                    sx={{\n                      height: 64,\n                      mr: 2,\n                      width: 64\n                    }}\n                  />\n                  <div>\n                    <Grid\n                      container\n                      spacing={1}\n                      sx={{ pb: 1 }}\n                    >\n                      <Grid item>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          type=\"button\"\n                          variant=\"outlined\"\n                        >\n                          Upload new picture\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          type=\"button\"\n                          variant=\"text\"\n                        >\n                          Delete\n                        </Button>\n                      </Grid>\n                    </Grid>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"caption\"\n                    >\n                      Recommended dimensions: 200x200, maximum file size: 5MB\n                    </Typography>\n                  </div>\n                </Box>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.fullName && formik.errors.fullName)}\n                      fullWidth\n                      helperText={formik.touched.fullName && formik.errors.fullName}\n                      label=\"Full Name\"\n                      name=\"fullName\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.fullName}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.email && formik.errors.email)}\n                      fullWidth\n                      helperText={formik.touched.email && formik.errors.email}\n                      label=\"Email address\"\n                      name=\"email\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      type=\"email\"\n                      value={formik.values.email}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.jobTitle && formik.errors.jobTitle)}\n                      fullWidth\n                      helperText={formik.touched.jobTitle && formik.errors.jobTitle}\n                      label=\"Job title\"\n                      name=\"jobTitle\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.jobTitle}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.companyName\n                        && formik.errors.companyName)}\n                      fullWidth\n                      helperText={formik.touched.companyName && formik.errors.companyName}\n                      label=\"Company name\"\n                      name=\"companyName\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.companyName}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.companySize\n                        && formik.errors.companySize)}\n                      fullWidth\n                      helperText={formik.touched.companySize && formik.errors.companySize}\n                      label=\"Company size\"\n                      name=\"companySize\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      select\n                      value={formik.values.companySize}\n                    >\n                      {companySizeOptions.map((companySizeOption) => (\n                        <MenuItem\n                          key={companySizeOption}\n                          value={companySizeOption}\n                        >\n                          {companySizeOption}\n                        </MenuItem>\n                      ))}\n                    </InputField>\n                  </Grid>\n                  {formik.errors.submit && (\n                    <Grid\n                      item\n                      xs={12}\n                    >\n                      <FormHelperText error>\n                        {formik.errors.submit}\n                      </FormHelperText>\n                    </Grid>\n                  )}\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <Button\n                      color=\"primary\"\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Save settings\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </form>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAccountDetails.defaultProps = {\n  profile: []\n}\n"]},"metadata":{},"sourceType":"module"}