{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/query.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputBase } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { Search as SearchIcon } from '../icons/search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryRoot = styled('div')(({\n  theme\n}) => ({\n  alignItems: 'center',\n  backgroundColor: 'background.paper',\n  border: `1px solid ${theme.palette.divider}`,\n  borderRadius: theme.shape.borderRadius,\n  display: 'flex',\n  height: 42,\n  width: '100%'\n}));\nexport const Query = props => {\n  _s();\n\n  const {\n    disabled,\n    onChange,\n    value,\n    ...other\n  } = props;\n  const [autoFocus, setAutoFocus] = useState(false);\n  const inputRef = useRef(null);\n  const [tempValue, setTempValue] = useState('');\n  useEffect(() => {\n    setTempValue(value);\n  }, [value]);\n  useEffect(() => {\n    if (!disabled && autoFocus && (inputRef === null || inputRef === void 0 ? void 0 : inputRef.current)) {\n      inputRef.current.focus();\n    }\n  }, [disabled]);\n\n  const handleChange = event => {\n    setTempValue(event.target.value);\n  };\n\n  const handleKeyup = event => {\n    if (event.keyCode === 13 && onChange) {\n      onChange(tempValue);\n    }\n  };\n\n  const handleFocus = () => {\n    setAutoFocus(true);\n  };\n\n  const handleBlur = event => {\n    /*\n     There is a situation where an input goes from not disabled to disabled and DOM emits a blur\n     event, with event as undefined. This means, that sometimes we'll receive an React Synthetic\n     event and sometimes undefined because when DOM triggers the event, React is unaware of it,\n     or it simply does not emit the event. To bypass this behaviour, we store a local variable\n     that acts as autofocus.\n     */\n    if (event) {\n      setAutoFocus(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(QueryRoot, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n      sx: {\n        color: 'text.secondary',\n        ml: 2,\n        mr: 1\n      },\n      fontSize: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n      disabled: disabled,\n      inputProps: {\n        ref: inputRef,\n        sx: {\n          p: 0.75,\n          '&::placeholder': {\n            color: 'text.secondary',\n            opacity: 1\n          }\n        }\n      },\n      onBlur: handleBlur,\n      onChange: handleChange,\n      onFocus: handleFocus,\n      onKeyUp: handleKeyup,\n      placeholder: \"Search...\",\n      sx: {\n        flex: 1\n      },\n      value: tempValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Query, \"xhpxlnBE2VioKrJKeBYDYtHE604=\");\n\n_c = Query;\nQuery.defaultProps = {\n  value: ''\n};\nQuery.propTypes = {\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/query.js"],"names":["useEffect","useRef","useState","PropTypes","InputBase","styled","Search","SearchIcon","QueryRoot","theme","alignItems","backgroundColor","border","palette","divider","borderRadius","shape","display","height","width","Query","props","disabled","onChange","value","other","autoFocus","setAutoFocus","inputRef","tempValue","setTempValue","current","focus","handleChange","event","target","handleKeyup","keyCode","handleFocus","handleBlur","color","ml","mr","ref","sx","p","opacity","flex","defaultProps","propTypes","bool","func","string"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputBase } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { Search as SearchIcon } from '../icons/search';\n\nconst QueryRoot = styled('div')((({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: 'background.paper',\n  border: `1px solid ${theme.palette.divider}`,\n  borderRadius: theme.shape.borderRadius,\n  display: 'flex',\n  height: 42,\n  width: '100%'\n})));\n\nexport const Query = (props) => {\n  const { disabled, onChange, value, ...other } = props;\n  const [autoFocus, setAutoFocus] = useState(false);\n  const inputRef = useRef(null);\n  const [tempValue, setTempValue] = useState('');\n\n  useEffect(() => {\n    setTempValue(value);\n  }, [value]);\n\n  useEffect(() => {\n    if (!disabled && autoFocus && inputRef?.current) {\n      inputRef.current.focus();\n    }\n  }, [disabled]);\n\n  const handleChange = (event) => {\n    setTempValue(event.target.value);\n  };\n\n  const handleKeyup = (event) => {\n    if (event.keyCode === 13 && onChange) {\n      onChange(tempValue);\n    }\n  };\n\n  const handleFocus = () => {\n    setAutoFocus(true);\n  };\n\n  const handleBlur = (event) => {\n    /*\n     There is a situation where an input goes from not disabled to disabled and DOM emits a blur\n     event, with event as undefined. This means, that sometimes we'll receive an React Synthetic\n     event and sometimes undefined because when DOM triggers the event, React is unaware of it,\n     or it simply does not emit the event. To bypass this behaviour, we store a local variable\n     that acts as autofocus.\n     */\n\n    if (event) {\n      setAutoFocus(false);\n    }\n  };\n\n  return (\n    <QueryRoot {...other}>\n      <SearchIcon\n        sx={{\n          color: 'text.secondary',\n          ml: 2,\n          mr: 1\n        }}\n        fontSize=\"small\"\n      />\n      <InputBase\n        disabled={disabled}\n        inputProps={{\n          ref: inputRef,\n          sx: {\n            p: 0.75,\n            '&::placeholder': {\n              color: 'text.secondary',\n              opacity: 1\n            }\n          }\n        }}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onKeyUp={handleKeyup}\n        placeholder=\"Search...\"\n        sx={{ flex: 1 }}\n        value={tempValue}\n      />\n    </QueryRoot>\n  );\n};\n\nQuery.defaultProps = {\n  value: ''\n};\n\nQuery.propTypes = {\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}