{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/account/account-details.js\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Avatar, Box, Button, Card, CardContent, FormHelperText, Grid, MenuItem, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useProfile, ProfileConsumer } from '../../hooks/use-profile';\nimport { useAuth } from '../../hooks/use-auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst membershipOptions = ['Bronze', 'Silver', 'Gold'];\nexport const AccountDetails = props => {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const {\n    company,\n    cpu,\n    membership,\n    volume,\n    gpu,\n    phone\n  } = user;\n  const {\n    email,\n    first_name,\n    last_name\n  } = user['user'];\n\n  const chooseMambership = membership => {\n    if (membership === 'B') {\n      return 'Bronze';\n    } else if (membership === 'S') {\n      return 'Silver';\n    } else {\n      return 'Gold';\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      companyName: company,\n      membership: ch,\n      email: email,\n      phone: phone,\n      fullName: first_name + ' ' + last_name,\n      cpuCount: cpu,\n      gpuCount: gpu,\n      numberOfDisks: volume,\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      companyName: Yup.string().max(255).required('Company name is required'),\n      membership: Yup.string().max(255).oneOf(membershipOptions).required('Company size is required'),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      phone: Yup.string().max(255).required('phone is required'),\n      fullName: Yup.string().max(255).required('Full Name is required'),\n      gpuCount: Yup.string().max(255).required('Job name is required'),\n      numberOfDisks: Yup.string().max(255).required('Number of disks is required'),\n      cpuCount: Yup.string().max(255).required('Number of cpus are required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Settings saved');\n        helpers.resetForm();\n        helpers.setStatus({\n          success: true\n        });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  }); // console.log(userDetails)\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 5,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"h6\",\n            children: \"Profile Resources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 7,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  alignItems: 'center',\n                  display: 'flex',\n                  pb: 3\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: \"/static/user-chen_simmons.png\",\n                  sx: {\n                    height: 64,\n                    mr: 2,\n                    width: 64\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 1,\n                    sx: {\n                      pb: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        size: \"small\",\n                        type: \"button\",\n                        variant: \"outlined\",\n                        children: \"Upload new picture\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        size: \"small\",\n                        type: \"button\",\n                        variant: \"text\",\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    variant: \"caption\",\n                    children: \"Recommended dimensions: 200x200, maximum file size: 5MB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.fullName && formik.errors.fullName),\n                    fullWidth: true,\n                    helperText: formik.touched.fullName && formik.errors.fullName,\n                    label: \"Full Name\",\n                    name: \"fullName\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.fullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.email && formik.errors.email),\n                    fullWidth: true,\n                    helperText: formik.touched.email && formik.errors.email,\n                    label: \"Email address\",\n                    name: \"email\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    type: \"email\",\n                    value: formik.values.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.phone && formik.errors.phone),\n                    fullWidth: true,\n                    helperText: formik.touched.phone && formik.errors.phone,\n                    label: \"Phone Number\",\n                    name: \"phone\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    type: \"phone\",\n                    value: formik.values.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.cpuCount && formik.errors.cpuCount),\n                    fullWidth: true,\n                    helperText: formik.touched.cpuCount && formik.errors.cpuCount,\n                    label: \"Cpu count\",\n                    name: \"cpuCount\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.cpuCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.gpuCount && formik.errors.gpuCount),\n                    fullWidth: true,\n                    helperText: formik.touched.gpuCount && formik.errors.gpuCount,\n                    label: \"Gpu count\",\n                    name: \"gpuCount\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.gpuCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.numberOfDisks && formik.errors.numberOfDisks),\n                    fullWidth: true,\n                    helperText: formik.touched.numberOfDisks && formik.errors.numberOfDisks,\n                    label: \"Number of disks\",\n                    name: \"numberOfDisks\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.numberOfDisks\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.companyName && formik.errors.companyName),\n                    fullWidth: true,\n                    helperText: formik.touched.companyName && formik.errors.companyName,\n                    label: \"Company name\",\n                    name: \"companyName\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    value: formik.values.companyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputField, {\n                    error: Boolean(formik.touched.membership && formik.errors.membership),\n                    fullWidth: true,\n                    helperText: formik.touched.membership && formik.errors.membership,\n                    label: \"Membership\",\n                    name: \"membership\",\n                    onBlur: formik.handleBlur,\n                    onChange: formik.handleChange,\n                    select: true,\n                    value: formik.values.membership,\n                    children: membershipOptions.map(membershipOption => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: membershipOption,\n                      children: membershipOption\n                    }, membershipOption, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    error: true,\n                    children: formik.errors.submit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    size: \"large\",\n                    type: \"submit\",\n                    variant: \"contained\",\n                    children: \"Save settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountDetails, \"XqsdZniHc3d4GKjdTHT+37qvvFM=\", false, function () {\n  return [useAuth, useFormik];\n});\n\n_c = AccountDetails;\nAccountDetails.defaultProps = {\n  profile: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountDetails\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/account/account-details.js"],"names":["useFormik","Yup","toast","Avatar","Box","Button","Card","CardContent","FormHelperText","Grid","MenuItem","Typography","InputField","React","useEffect","useState","useContext","useProfile","ProfileConsumer","useAuth","membershipOptions","AccountDetails","props","user","company","cpu","membership","volume","gpu","phone","email","first_name","last_name","chooseMambership","formik","initialValues","companyName","ch","fullName","cpuCount","gpuCount","numberOfDisks","submit","validationSchema","object","shape","string","max","required","oneOf","onSubmit","values","helpers","success","resetForm","setStatus","setSubmitting","err","console","error","setErrors","message","handleSubmit","alignItems","display","pb","height","mr","width","Boolean","touched","errors","handleBlur","handleChange","map","membershipOption","defaultProps","profile"],"mappings":"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","sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport React, {useEffect, useState, useContext} from 'react';\nimport { useProfile, ProfileConsumer } from '../../hooks/use-profile';\nimport { useAuth } from '../../hooks/use-auth';\n\n\nconst membershipOptions = ['Bronze', 'Silver', 'Gold'];\n\n\n\n\nexport const AccountDetails = (props) => {\n  const {user} = useAuth();\n\n  const {company, cpu , membership, volume, gpu, phone} = user;\n  const {email, first_name, last_name} = user['user']\n\n  const chooseMambership = (membership) => {\n    if (membership === 'B') {\n      return 'Bronze'\n\n    } else if (membership === 'S') {\n      return 'Silver'\n    } else {\n      return 'Gold'\n    }\n  }\n\n\n\n  const formik = useFormik({\n    initialValues: {\n      companyName: company,\n      membership: ch,\n      email: email,\n      phone: phone,\n      fullName: first_name + ' ' + last_name,\n      cpuCount: cpu,\n      gpuCount: gpu,\n      numberOfDisks: volume,\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      companyName: Yup.string().max(255).required('Company name is required'),\n      membership: Yup\n        .string()\n        .max(255)\n        .oneOf(membershipOptions)\n        .required('Company size is required'),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      phone: Yup.string().max(255).required('phone is required'),\n      fullName: Yup.string().max(255).required('Full Name is required'),\n      gpuCount: Yup.string().max(255).required('Job name is required'),\n      numberOfDisks: Yup.string().max(255).required('Number of disks is required'),\n      cpuCount: Yup.string().max(255).required('Number of cpus are required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Settings saved');\n        helpers.resetForm();\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n\n  // console.log(userDetails)\n  return (\n    <Card\n      variant=\"outlined\"\n      {...props}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n        >\n          <Grid\n            item\n            md={5}\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h6\"\n            >\n              Profile Resources\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={7}\n            xs={12}\n          >\n            <form onSubmit={formik.handleSubmit}>\n              <div>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    pb: 3\n                  }}\n                >\n                  <Avatar\n                    src=\"/static/user-chen_simmons.png\"\n                    sx={{\n                      height: 64,\n                      mr: 2,\n                      width: 64\n                    }}\n                  />\n                  <div>\n                    <Grid\n                      container\n                      spacing={1}\n                      sx={{ pb: 1 }}\n                    >\n                      <Grid item>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          type=\"button\"\n                          variant=\"outlined\"\n                        >\n                          Upload new picture\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          type=\"button\"\n                          variant=\"text\"\n                        >\n                          Delete\n                        </Button>\n                      </Grid>\n                    </Grid>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"caption\"\n                    >\n                      Recommended dimensions: 200x200, maximum file size: 5MB\n                    </Typography>\n                  </div>\n                </Box>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.fullName && formik.errors.fullName)}\n                      fullWidth\n                      helperText={formik.touched.fullName && formik.errors.fullName}\n                      label=\"Full Name\"\n                      name=\"fullName\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.fullName}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.email && formik.errors.email)}\n                      fullWidth\n                      helperText={formik.touched.email && formik.errors.email}\n                      label=\"Email address\"\n                      name=\"email\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      type=\"email\"\n                      value={formik.values.email}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.phone && formik.errors.phone)}\n                      fullWidth\n                      helperText={formik.touched.phone && formik.errors.phone}\n                      label=\"Phone Number\"\n                      name=\"phone\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      type=\"phone\"\n                      value={formik.values.phone}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.cpuCount && formik.errors.cpuCount)}\n                      fullWidth\n                      helperText={formik.touched.cpuCount && formik.errors.cpuCount}\n                      label=\"Cpu count\"\n                      name=\"cpuCount\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.cpuCount}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.gpuCount && formik.errors.gpuCount)}\n                      fullWidth\n                      helperText={formik.touched.gpuCount && formik.errors.gpuCount}\n                      label=\"Gpu count\"\n                      name=\"gpuCount\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.gpuCount}\n                    />\n                  </Grid>\n\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.numberOfDisks && formik.errors.numberOfDisks)}\n                      fullWidth\n                      helperText={formik.touched.numberOfDisks && formik.errors.numberOfDisks}\n                      label=\"Number of disks\"\n                      name=\"numberOfDisks\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.numberOfDisks}\n                    />\n                  </Grid>\n\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.companyName\n                        && formik.errors.companyName)}\n                      fullWidth\n                      helperText={formik.touched.companyName && formik.errors.companyName}\n                      label=\"Company name\"\n                      name=\"companyName\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.companyName}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.membership\n                        && formik.errors.membership)}\n                      fullWidth\n                      helperText={formik.touched.membership && formik.errors.membership}\n                      label=\"Membership\"\n                      name=\"membership\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      select\n                      value={formik.values.membership}\n                    >\n                      {membershipOptions.map((membershipOption) => (\n                        <MenuItem\n                          key={membershipOption}\n                          value={membershipOption}\n                        >\n                          {membershipOption}\n                        </MenuItem>\n                      ))}\n                    </InputField>\n                  </Grid>\n                  {formik.errors.submit && (\n                    <Grid\n                      item\n                      xs={12}\n                    >\n                      <FormHelperText error>\n                        {formik.errors.submit}\n                      </FormHelperText>\n                    </Grid>\n                  )}\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <Button\n                      color=\"primary\"\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Save settings\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </form>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAccountDetails.defaultProps = {\n  profile: []\n}\n"]},"metadata":{},"sourceType":"module"}