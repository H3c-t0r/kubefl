{"ast":null,"code":"// Profile api to get current profile\nclass ProfileAPI {\n  async me(accessToken) {\n    await wait(500);\n    return new Promise((resolve, reject) => {\n      axios.get('http://localhost:8000/zoracloud/profiles/me', {\n        headers: {\n          'Authorization': `token ${access_token}`\n        }\n      }).then(function ({\n        data\n      }) {\n        resolve(data);\n      }).catch(function (error) {\n        console.error('[Auth Api]: ', err);\n        reject(new Error('Internal server error'));\n      });\n    });\n  }\n\n}\n\nexport const profileAPI = new ProfileAPI();","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/api/profile.js"],"names":["ProfileAPI","me","accessToken","wait","Promise","resolve","reject","axios","get","headers","access_token","then","data","catch","error","console","err","Error","profileAPI"],"mappings":"AAAA;AAEA,MAAMA,UAAN,CAAiB;AACL,QAAFC,EAAE,CAACC,WAAD,EAAc;AAClB,UAAMC,IAAI,CAAC,GAAD,CAAV;AACA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEpCC,MAAAA,KAAK,CAACC,GAAN,CAAU,6CAAV,EAAyD;AACvDC,QAAAA,OAAO,EAAE;AACP,2BAAkB,SAAQC,YAAa;AADhC;AAD8C,OAAzD,EAKGC,IALH,CAKQ,UAAS;AACbC,QAAAA;AADa,OAAT,EAEJ;AACAP,QAAAA,OAAO,CAACO,IAAD,CAAP;AACD,OATH,EAUGC,KAVH,CAUS,UAASC,KAAT,EAAe;AACpBC,QAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BE,GAA9B;AACAV,QAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAU,uBAAV,CAAD,CAAN;AACD,OAbH;AAcD,KAhBI,CAAP;AAkBE;;AArBO;;AAyBjB,OAAO,MAAMC,UAAU,GAAG,IAAIlB,UAAJ,EAAnB","sourcesContent":["// Profile api to get current profile\n\nclass ProfileAPI {\n    async me(accessToken) {\n        await wait(500)\n        return new Promise((resolve, reject) => {\n  \n            axios.get('http://localhost:8000/zoracloud/profiles/me', {\n              headers: {\n                'Authorization': `token ${access_token}`\n              }\n            })\n              .then(function({\n                data\n              }){\n                resolve(data)\n              })\n              .catch(function(error){\n                console.error('[Auth Api]: ', err);\n                reject(new Error('Internal server error'));\n              })\n          }\n\n        )}\n\n}\n\nexport const profileAPI = new ProfileAPI();"]},"metadata":{},"sourceType":"module"}