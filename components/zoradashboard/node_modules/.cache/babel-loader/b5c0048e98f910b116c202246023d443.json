{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/contexts/jwt-auth-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { authApi } from '../api/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\nconst handlers = {\n  INITIALIZE: (state, action) => {\n    const {\n      isAuthenticated,\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated,\n      isInitialized: true,\n      user\n    };\n  },\n  LOGIN: (state, action) => {\n    const {\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated: true,\n      user\n    };\n  },\n  LOGOUT: state => ({ ...state,\n    isAuthenticated: false,\n    user: null\n  }),\n  REGISTER: (state, action) => {\n    const {\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated: true,\n      user\n    };\n  }\n};\n\nconst reducer = (state, action) => handlers[action.type] ? handlers[action.type](state, action) : state;\n\nexport const AuthContext = /*#__PURE__*/createContext({ ...initialState,\n  method: 'JWT' // login: () => Promise.resolve(),\n  // logout: () => Promise.resolve(),\n  // register: () => Promise.resolve()\n\n});\nexport const AuthProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const accessToken = window.localStorage.getItem('accessToken');\n\n        if (accessToken) {\n          const user = await authApi.me(accessToken);\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: true,\n              user\n            }\n          });\n        } else {\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: false,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: 'INITIALIZE',\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    };\n\n    initialize();\n  }, []);\n\n  const login = async (username, password) => {\n    // const accessToken = localStorage.getItem('accessToken')\n    const accessToken = await authApi.login({\n      username,\n      password\n    });\n    const user = await authApi.me(accessToken);\n    localStorage.setItem('accessToken', accessToken);\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        user\n      }\n    });\n  };\n\n  const logout = async () => {\n    localStorage.removeItem('accessToken');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  const register = async (username, name, password) => {\n    const accessToken = await authApi.register({\n      email,\n      name,\n      password\n    });\n    const user = await authApi.me(accessToken);\n    localStorage.setItem('accessToken', accessToken);\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        user\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      method: 'JWT',\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthProvider;\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/contexts/jwt-auth-context.js"],"names":["createContext","useEffect","useReducer","PropTypes","authApi","initialState","isAuthenticated","isInitialized","user","handlers","INITIALIZE","state","action","payload","LOGIN","LOGOUT","REGISTER","reducer","type","AuthContext","method","AuthProvider","props","children","dispatch","initialize","accessToken","window","localStorage","getItem","me","err","console","error","login","username","password","setItem","logout","removeItem","register","name","email","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { authApi } from '../api/auth';\n\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\n\nconst handlers = {\n  INITIALIZE: (state, action) => {\n    const { isAuthenticated, user } = action.payload;\n\n    return {\n      ...state,\n      isAuthenticated,\n      isInitialized: true,\n      user\n    };\n  },\n  LOGIN: (state, action) => {\n    const { user } = action.payload;\n\n    return {\n      ...state,\n      isAuthenticated: true,\n      user\n    };\n  },\n  LOGOUT: (state) => ({\n    ...state,\n    isAuthenticated: false,\n    user: null\n  }),\n  REGISTER: (state, action) => {\n    const { user } = action.payload;\n\n    return {\n      ...state,\n      isAuthenticated: true,\n      user\n    };\n  }\n};\n\nconst reducer = (state, action) => (handlers[action.type]\n  ? handlers[action.type](state, action)\n  : state);\n\nexport const AuthContext = createContext({\n  ...initialState,\n  method: 'JWT',\n  // login: () => Promise.resolve(),\n  // logout: () => Promise.resolve(),\n  // register: () => Promise.resolve()\n});\n\nexport const AuthProvider = (props) => {\n  const { children } = props;\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const accessToken = window.localStorage.getItem('accessToken');\n\n        if (accessToken) {\n          const user = await authApi.me(accessToken);\n\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: true,\n              user\n            }\n          });\n        } else {\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: false,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: 'INITIALIZE',\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    };\n    initialize();\n  }, []);\n\n  const login = async (username, password) => {\n    // const accessToken = localStorage.getItem('accessToken')\n    const accessToken = await authApi.login({ username, password });\n    const user = await authApi.me(accessToken);\n\n    localStorage.setItem('accessToken', accessToken);\n\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        user\n      }\n    });\n  };\n\n  const logout = async () => {\n    localStorage.removeItem('accessToken');\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const register = async (username, name, password) => {\n    const accessToken = await authApi.register({ email, name, password });\n    const user = await authApi.me(accessToken);\n\n    localStorage.setItem('accessToken', accessToken);\n\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        user\n      }\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...state,\n        method: 'JWT',\n        login,\n        logout,\n        register\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}