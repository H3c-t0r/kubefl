{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/organization-popover.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Box, ButtonBase, List, ListItem, ListItemText, Popover, Typography } from '@material-ui/core';\nimport { usePopover } from '../hooks/use-popover';\nimport { Selector as SelectorIcon } from '../icons/selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const OrganizationPopover = props => {\n  _s();\n\n  const {\n    currentOrganization,\n    organizations,\n    onOrganizationChange,\n    sx,\n    ...other\n  } = props;\n  const [anchorRef, open, handleOpen, handleClose] = usePopover();\n\n  const handleOrganizationChange = organizationId => {\n    handleClose();\n    onOrganizationChange === null || onOrganizationChange === void 0 ? void 0 : onOrganizationChange(organizationId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonBase, {\n      onClick: handleOpen,\n      ref: anchorRef,\n      sx: {\n        borderRadius: 1,\n        display: 'flex',\n        p: 1,\n        width: 180,\n        '&:hover': {\n          backgroundColor: 'rgba(255,255,255,0.1)'\n        },\n        ...sx\n      },\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        sx: {\n          color: 'primary.contrastText',\n          mr: 3\n        },\n        variant: \"subtitle2\",\n        children: currentOrganization.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectorIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      anchorEl: anchorRef.current,\n      anchorOrigin: {\n        horizontal: 'left',\n        vertical: 'bottom'\n      },\n      keepMounted: true,\n      onClose: handleClose,\n      open: open,\n      PaperProps: {\n        sx: {\n          width: 200\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: organizations.map(organization => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: organization.id === currentOrganization.id,\n          onClick: () => handleOrganizationChange(organization.id),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: organization.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, organization.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrganizationPopover, \"Li+ZlAVS7crgWolWA5SiSLLMKeA=\", false, function () {\n  return [usePopover];\n});\n\n_c = OrganizationPopover;\nOrganizationPopover.propTypes = {\n  currentOrganization: PropTypes.object.isRequired,\n  onOrganizationChange: PropTypes.func,\n  organizations: PropTypes.array.isRequired,\n  sx: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationPopover\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/organization-popover.js"],"names":["PropTypes","Box","ButtonBase","List","ListItem","ListItemText","Popover","Typography","usePopover","Selector","SelectorIcon","OrganizationPopover","props","currentOrganization","organizations","onOrganizationChange","sx","other","anchorRef","open","handleOpen","handleClose","handleOrganizationChange","organizationId","borderRadius","display","p","width","backgroundColor","color","mr","name","flexGrow","current","horizontal","vertical","map","organization","id","propTypes","object","isRequired","func","array"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Box,\n  ButtonBase,\n  List,\n  ListItem,\n  ListItemText,\n  Popover,\n  Typography\n} from '@material-ui/core';\nimport { usePopover } from '../hooks/use-popover';\nimport { Selector as SelectorIcon } from '../icons/selector';\n\nexport const OrganizationPopover = (props) => {\n  const { currentOrganization, organizations, onOrganizationChange, sx, ...other } = props;\n  const [anchorRef, open, handleOpen, handleClose] = usePopover();\n\n  const handleOrganizationChange = (organizationId) => {\n    handleClose();\n    onOrganizationChange?.(organizationId);\n  };\n\n  return (\n    <>\n      <ButtonBase\n        onClick={handleOpen}\n        ref={anchorRef}\n        sx={{\n          borderRadius: 1,\n          display: 'flex',\n          p: 1,\n          width: 180,\n          '&:hover': {\n            backgroundColor: 'rgba(255,255,255,0.1)'\n          },\n          ...sx\n        }}\n        {...other}\n      >\n        <Typography\n          color=\"textSecondary\"\n          sx={{\n            color: 'primary.contrastText',\n            mr: 3\n          }}\n          variant=\"subtitle2\"\n        >\n          {currentOrganization.name}\n        </Typography>\n        <Box sx={{ flexGrow: 1 }} />\n        <SelectorIcon fontSize=\"small\" />\n      </ButtonBase>\n      <Popover\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'left',\n          vertical: 'bottom'\n        }}\n        keepMounted\n        onClose={handleClose}\n        open={open}\n        PaperProps={{\n          sx: { width: 200 }\n        }}\n      >\n        <List>\n          {organizations.map((organization) => (\n            <ListItem\n              key={organization.id}\n              button\n              selected={organization.id === currentOrganization.id}\n              onClick={() => handleOrganizationChange(organization.id)}\n            >\n              <ListItemText primary={organization.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Popover>\n    </>\n  );\n};\n\nOrganizationPopover.propTypes = {\n  currentOrganization: PropTypes.object.isRequired,\n  onOrganizationChange: PropTypes.func,\n  organizations: PropTypes.array.isRequired,\n  sx: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}