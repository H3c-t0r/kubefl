{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/stepper.js\";\nimport PropTypes from 'prop-types';\nimport { Box, Typography } from '@material-ui/core';\nimport { Timeline, TimelineConnector, TimelineContent, TimelineDot, TimelineItem } from '@material-ui/lab';\nimport { Check as CheckIcon } from '../icons/check';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapSteps = (steps, currentStep) => steps.map((item, index) => {\n  if (currentStep > index) {\n    return { ...item,\n      value: 'complete'\n    };\n  }\n\n  if (currentStep === index) {\n    return { ...item,\n      value: 'active'\n    };\n  }\n\n  return { ...item,\n    value: 'inactive'\n  };\n});\n\nconst getDotStyles = value => {\n  if (value === 'complete') {\n    return {\n      backgroundColor: 'primary.main',\n      borderColor: 'primary.main'\n    };\n  }\n\n  if (value === 'active') {\n    return {\n      borderColor: 'primary.main',\n      color: 'primary.main'\n    };\n  }\n\n  return {\n    backgroundColor: 'inherit',\n    borderColor: 'neutral.300',\n    color: 'text.secondary'\n  };\n};\n\nconst getTextColor = value => {\n  if (value === 'complete') {\n    return {\n      title: 'textPrimary',\n      content: 'textSecondary'\n    };\n  }\n\n  if (value === 'active') {\n    return {\n      title: 'primary.main',\n      content: 'textSecondary'\n    };\n  }\n\n  return {\n    title: 'text.disabled',\n    content: 'text.disabled'\n  };\n};\n\nexport const Stepper = props => {\n  const {\n    steps,\n    currentStep,\n    orientation\n  } = props;\n  const mappedSteps = mapSteps(steps, currentStep);\n  return /*#__PURE__*/_jsxDEV(Timeline, {\n    sx: {\n      flexDirection: orientation === 'vertical' ? 'column' : 'row',\n      flexGrow: 'inherit',\n      my: 0,\n      p: 0\n    },\n    children: mappedSteps.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: orientation === 'vertical' ? 'column' : 'row',\n        alignItems: orientation === 'vertical' ? 'inherit' : 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TimelineItem, {\n        sx: {\n          alignItems: 'center',\n          minHeight: 'auto',\n          '&::before': {\n            display: 'none'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TimelineDot, {\n          sx: { ...getDotStyles(item.value),\n            alignItems: 'center',\n            alignSelf: 'center',\n            boxShadow: 'none',\n            display: 'flex',\n            flexShrink: 0,\n            height: 36,\n            justifyContent: 'center',\n            m: 0,\n            width: 36\n          },\n          variant: item.value === 'complete' ? 'filled' : 'outlined',\n          children: item.value === 'active' ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              backgroundColor: 'primary.main',\n              borderRadius: '50%',\n              height: 12,\n              width: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this) : item.value === 'complete' && /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimelineContent, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            pr: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: getTextColor(item.value).title,\n            variant: \"overline\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: getTextColor(item.value).content,\n            variant: \"body2\",\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), mappedSteps.length > index + 1 && /*#__PURE__*/_jsxDEV(TimelineConnector, {\n        sx: {\n          backgroundColor: item.value === 'complete' ? 'primary.main' : 'neutral.200',\n          height: orientation === 'vertical' ? 22 : 2,\n          width: orientation === 'vertical' ? 2 : 22,\n          my: orientation === 'vertical' ? 1 : 'inherit',\n          ml: orientation === 'vertical' ? 2.25 : 0,\n          mr: orientation === 'vertical' ? 0 : 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)]\n    }, item.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_c = Stepper;\nStepper.defaultProps = {\n  orientation: 'vertical'\n};\nStepper.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n  steps: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Stepper\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/stepper.js"],"names":["PropTypes","Box","Typography","Timeline","TimelineConnector","TimelineContent","TimelineDot","TimelineItem","Check","CheckIcon","mapSteps","steps","currentStep","map","item","index","value","getDotStyles","backgroundColor","borderColor","color","getTextColor","title","content","Stepper","props","orientation","mappedSteps","flexDirection","flexGrow","my","p","display","flex","alignItems","minHeight","alignSelf","boxShadow","flexShrink","height","justifyContent","m","width","borderRadius","pr","length","ml","mr","defaultProps","propTypes","number","isRequired","oneOf","array"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SACEC,QADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,WAJF,EAKEC,YALF,QAMO,kBANP;AAOA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,gBAAnC;;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwBD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClE,MAAIH,WAAW,GAAGG,KAAlB,EAAyB;AACvB,WAAO,EAAE,GAAGD,IAAL;AAAWE,MAAAA,KAAK,EAAE;AAAlB,KAAP;AACD;;AAED,MAAIJ,WAAW,KAAKG,KAApB,EAA2B;AACzB,WAAO,EAAE,GAAGD,IAAL;AAAWE,MAAAA,KAAK,EAAE;AAAlB,KAAP;AACD;;AAED,SAAO,EAAE,GAAGF,IAAL;AAAWE,IAAAA,KAAK,EAAE;AAAlB,GAAP;AACD,CAVwC,CAAzC;;AAYA,MAAMC,YAAY,GAAID,KAAD,IAAW;AAC9B,MAAIA,KAAK,KAAK,UAAd,EAA0B;AACxB,WAAO;AACLE,MAAAA,eAAe,EAAE,cADZ;AAELC,MAAAA,WAAW,EAAE;AAFR,KAAP;AAID;;AAED,MAAIH,KAAK,KAAK,QAAd,EAAwB;AACtB,WAAO;AACLG,MAAAA,WAAW,EAAE,cADR;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID;;AAED,SAAO;AACLF,IAAAA,eAAe,EAAE,SADZ;AAELC,IAAAA,WAAW,EAAE,aAFR;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAAP;AAKD,CApBD;;AAsBA,MAAMC,YAAY,GAAIL,KAAD,IAAW;AAC9B,MAAIA,KAAK,KAAK,UAAd,EAA0B;AACxB,WAAO;AACLM,MAAAA,KAAK,EAAE,aADF;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AAED,MAAIP,KAAK,KAAK,QAAd,EAAwB;AACtB,WAAO;AACLM,MAAAA,KAAK,EAAE,cADF;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AAED,SAAO;AACLD,IAAAA,KAAK,EAAE,eADF;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAnBD;;AAqBA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEd,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBc,IAAAA;AAAtB,MAAsCD,KAA5C;AACA,QAAME,WAAW,GAAGjB,QAAQ,CAACC,KAAD,EAAQC,WAAR,CAA5B;AAEA,sBACE,QAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFgB,MAAAA,aAAa,EAAEF,WAAW,KAAK,UAAhB,GAA6B,QAA7B,GAAwC,KADrD;AAEFG,MAAAA,QAAQ,EAAE,SAFR;AAGFC,MAAAA,EAAE,EAAE,CAHF;AAIFC,MAAAA,CAAC,EAAE;AAJD,KADN;AAAA,cAQGJ,WAAW,CAACd,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACf,QAAC,GAAD;AAEE,MAAA,EAAE,EAAE;AACFiB,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,IAAI,EAAE,CAFJ;AAGFL,QAAAA,aAAa,EAAEF,WAAW,KAAK,UAAhB,GAA6B,QAA7B,GAAwC,KAHrD;AAIFQ,QAAAA,UAAU,EAAER,WAAW,KAAK,UAAhB,GAA6B,SAA7B,GAAyC;AAJnD,OAFN;AAAA,8BASE,QAAC,YAAD;AACE,QAAA,EAAE,EAAE;AACFQ,UAAAA,UAAU,EAAE,QADV;AAEFC,UAAAA,SAAS,EAAE,MAFT;AAGF,uBAAa;AACXH,YAAAA,OAAO,EAAE;AADE;AAHX,SADN;AAAA,gCASE,QAAC,WAAD;AACE,UAAA,EAAE,EAAE,EACF,GAAIf,YAAY,CAACH,IAAI,CAACE,KAAN,CADd;AAEFkB,YAAAA,UAAU,EAAE,QAFV;AAGFE,YAAAA,SAAS,EAAE,QAHT;AAIFC,YAAAA,SAAS,EAAE,MAJT;AAKFL,YAAAA,OAAO,EAAE,MALP;AAMFM,YAAAA,UAAU,EAAE,CANV;AAOFC,YAAAA,MAAM,EAAE,EAPN;AAQFC,YAAAA,cAAc,EAAE,QARd;AASFC,YAAAA,CAAC,EAAE,CATD;AAUFC,YAAAA,KAAK,EAAE;AAVL,WADN;AAaE,UAAA,OAAO,EAAG5B,IAAI,CAACE,KAAL,KAAe,UAAhB,GACL,QADK,GAEL,UAfN;AAAA,oBAiBIF,IAAI,CAACE,KAAL,KAAe,QAAhB,gBAEG,QAAC,GAAD;AACE,YAAA,EAAE,EAAE;AACFE,cAAAA,eAAe,EAAE,cADf;AAEFyB,cAAAA,YAAY,EAAE,KAFZ;AAGFJ,cAAAA,MAAM,EAAE,EAHN;AAIFG,cAAAA,KAAK,EAAE;AAJL;AADN;AAAA;AAAA;AAAA;AAAA,kBAFH,GAWI5B,IAAI,CAACE,KAAL,KAAe,UAAhB,iBAA+B,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AA5BrC;AAAA;AAAA;AAAA;AAAA,gBATF,eAuCE,QAAC,eAAD;AACE,UAAA,EAAE,EAAE;AACFgB,YAAAA,OAAO,EAAE,MADP;AAEFJ,YAAAA,aAAa,EAAE,QAFb;AAGFY,YAAAA,cAAc,EAAE,QAHd;AAIFI,YAAAA,EAAE,EAAE;AAJF,WADN;AAAA,kCAQE,QAAC,UAAD;AACE,YAAA,KAAK,EAAEvB,YAAY,CAACP,IAAI,CAACE,KAAN,CAAZ,CAAyBM,KADlC;AAEE,YAAA,OAAO,EAAC,UAFV;AAAA,sBAIGR,IAAI,CAACQ;AAJR;AAAA;AAAA;AAAA;AAAA,kBARF,eAcE,QAAC,UAAD;AACE,YAAA,KAAK,EAAED,YAAY,CAACP,IAAI,CAACE,KAAN,CAAZ,CAAyBO,OADlC;AAEE,YAAA,OAAO,EAAC,OAFV;AAAA,sBAIGT,IAAI,CAACS;AAJR;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAsEGI,WAAW,CAACkB,MAAZ,GAAqB9B,KAAK,GAAG,CAA7B,iBACC,QAAC,iBAAD;AACE,QAAA,EAAE,EAAE;AACFG,UAAAA,eAAe,EAAEJ,IAAI,CAACE,KAAL,KAAe,UAAf,GAA4B,cAA5B,GAA6C,aAD5D;AAEFuB,UAAAA,MAAM,EAAEb,WAAW,KAAK,UAAhB,GAA6B,EAA7B,GAAkC,CAFxC;AAGFgB,UAAAA,KAAK,EAAEhB,WAAW,KAAK,UAAhB,GAA6B,CAA7B,GAAiC,EAHtC;AAIFI,UAAAA,EAAE,EAAEJ,WAAW,KAAK,UAAhB,GAA6B,CAA7B,GAAiC,SAJnC;AAKFoB,UAAAA,EAAE,EAAEpB,WAAW,KAAK,UAAhB,GAA6B,IAA7B,GAAoC,CALtC;AAMFqB,UAAAA,EAAE,EAAErB,WAAW,KAAK,UAAhB,GAA6B,CAA7B,GAAiC;AANnC;AADN;AAAA;AAAA;AAAA;AAAA,cAvEJ;AAAA,OACOZ,IAAI,CAACQ,KADZ;AAAA;AAAA;AAAA;AAAA,YADD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAgGD,CApGM;KAAME,O;AAsGbA,OAAO,CAACwB,YAAR,GAAuB;AACrBtB,EAAAA,WAAW,EAAE;AADQ,CAAvB;AAIAF,OAAO,CAACyB,SAAR,GAAoB;AAClBrC,EAAAA,WAAW,EAAEZ,SAAS,CAACkD,MAAV,CAAiBC,UADZ;AAElBzB,EAAAA,WAAW,EAAE1B,SAAS,CAACoD,KAAV,CAAgB,CAAC,UAAD,EAAa,YAAb,CAAhB,CAFK;AAGlBzC,EAAAA,KAAK,EAAEX,SAAS,CAACqD,KAAV,CAAgBF;AAHL,CAApB","sourcesContent":["import PropTypes from 'prop-types';\nimport { Box, Typography } from '@material-ui/core';\nimport {\n  Timeline,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineItem\n} from '@material-ui/lab';\nimport { Check as CheckIcon } from '../icons/check';\n\nconst mapSteps = (steps, currentStep) => steps.map((item, index) => {\n  if (currentStep > index) {\n    return { ...item, value: 'complete' };\n  }\n\n  if (currentStep === index) {\n    return { ...item, value: 'active' };\n  }\n\n  return { ...item, value: 'inactive' };\n});\n\nconst getDotStyles = (value) => {\n  if (value === 'complete') {\n    return {\n      backgroundColor: 'primary.main',\n      borderColor: 'primary.main'\n    };\n  }\n\n  if (value === 'active') {\n    return {\n      borderColor: 'primary.main',\n      color: 'primary.main'\n    };\n  }\n\n  return {\n    backgroundColor: 'inherit',\n    borderColor: 'neutral.300',\n    color: 'text.secondary'\n  };\n};\n\nconst getTextColor = (value) => {\n  if (value === 'complete') {\n    return {\n      title: 'textPrimary',\n      content: 'textSecondary'\n    };\n  }\n\n  if (value === 'active') {\n    return {\n      title: 'primary.main',\n      content: 'textSecondary'\n    };\n  }\n\n  return {\n    title: 'text.disabled',\n    content: 'text.disabled'\n  };\n};\n\nexport const Stepper = (props) => {\n  const { steps, currentStep, orientation } = props;\n  const mappedSteps = mapSteps(steps, currentStep);\n\n  return (\n    <Timeline\n      sx={{\n        flexDirection: orientation === 'vertical' ? 'column' : 'row',\n        flexGrow: 'inherit',\n        my: 0,\n        p: 0\n      }}\n    >\n      {mappedSteps.map((item, index) => (\n        <Box\n          key={item.title}\n          sx={{\n            display: 'flex',\n            flex: 1,\n            flexDirection: orientation === 'vertical' ? 'column' : 'row',\n            alignItems: orientation === 'vertical' ? 'inherit' : 'center'\n          }}\n        >\n          <TimelineItem\n            sx={{\n              alignItems: 'center',\n              minHeight: 'auto',\n              '&::before': {\n                display: 'none'\n              }\n            }}\n          >\n            <TimelineDot\n              sx={{\n                ...(getDotStyles(item.value)),\n                alignItems: 'center',\n                alignSelf: 'center',\n                boxShadow: 'none',\n                display: 'flex',\n                flexShrink: 0,\n                height: 36,\n                justifyContent: 'center',\n                m: 0,\n                width: 36\n              }}\n              variant={(item.value === 'complete')\n                ? 'filled'\n                : 'outlined'}\n            >\n              {(item.value === 'active')\n                ? (\n                  <Box\n                    sx={{\n                      backgroundColor: 'primary.main',\n                      borderRadius: '50%',\n                      height: 12,\n                      width: 12\n                    }}\n                  />\n                )\n                : (item.value === 'complete') && <CheckIcon />}\n            </TimelineDot>\n            <TimelineContent\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                pr: 1\n              }}\n            >\n              <Typography\n                color={getTextColor(item.value).title}\n                variant=\"overline\"\n              >\n                {item.title}\n              </Typography>\n              <Typography\n                color={getTextColor(item.value).content}\n                variant=\"body2\"\n              >\n                {item.content}\n              </Typography>\n            </TimelineContent>\n          </TimelineItem>\n          {mappedSteps.length > index + 1 && (\n            <TimelineConnector\n              sx={{\n                backgroundColor: item.value === 'complete' ? 'primary.main' : 'neutral.200',\n                height: orientation === 'vertical' ? 22 : 2,\n                width: orientation === 'vertical' ? 2 : 22,\n                my: orientation === 'vertical' ? 1 : 'inherit',\n                ml: orientation === 'vertical' ? 2.25 : 0,\n                mr: orientation === 'vertical' ? 0 : 1\n              }}\n            />\n          )}\n        </Box>\n      ))}\n    </Timeline>\n  );\n};\n\nStepper.defaultProps = {\n  orientation: 'vertical'\n};\n\nStepper.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n  steps: PropTypes.array.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}