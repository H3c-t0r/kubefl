{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/wizard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardContent, Container, Grid } from '@material-ui/core';\nimport { Stepper } from './stepper';\nimport { WizardBusiness } from './wizard-business';\nimport { WizardConfirmation } from './wizard-confirmation';\nimport { WizardNotifications } from './wizard-notifications';\nimport { WizardProfile } from './wizard-profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  title: 'Step 1',\n  content: 'Business'\n}, {\n  title: 'Step 2',\n  content: 'Profile'\n}, {\n  title: 'Step 3',\n  content: 'Business'\n}, {\n  title: 'Step 4',\n  content: 'Confirmation'\n}];\nexport const Wizard = props => {\n  _s();\n\n  const {\n    orientation\n  } = props;\n  const [currentStep, setCurrentStep] = useState(0);\n  const [values, setValues] = useState({\n    business: '',\n    fullName: '',\n    website: '',\n    companyName: '',\n    notifications: {\n      newCompanySignups: true,\n      newOrders: false,\n      publishErrors: false\n    }\n  });\n\n  const handleNextStep = newValues => {\n    setValues(prevValues => ({ ...prevValues,\n      ...newValues\n    }));\n\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const handlePreviousStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const getContent = () => {\n    if (currentStep === 0) {\n      return /*#__PURE__*/_jsxDEV(WizardBusiness, {\n        initialBusiness: values.business,\n        onNextStep: handleNextStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (currentStep === 1) {\n      return /*#__PURE__*/_jsxDEV(WizardProfile, {\n        initialValues: {\n          fullName: values.fullName,\n          website: values.website,\n          companyName: values.companyName\n        },\n        onNextStep: handleNextStep,\n        onPreviousStep: handlePreviousStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (currentStep === 2) {\n      return /*#__PURE__*/_jsxDEV(WizardNotifications, {\n        onNextStep: handleNextStep,\n        onPreviousStep: handlePreviousStep,\n        initialNotifications: values.notifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(WizardConfirmation, {\n      onPreviousStep: handlePreviousStep,\n      values: values\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: orientation === 'horizontal' ? /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 4,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stepper, {\n            steps: steps,\n            currentStep: currentStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 8,\n          xs: 12,\n          children: getContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        currentStep: currentStep,\n        orientation: \"horizontal\",\n        steps: steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        sx: {\n          mt: 6\n        },\n        children: getContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wizard, \"lTkZx8FSFJgGuHW8K056vDBqpqM=\");\n\n_c = Wizard;\nWizard.defaultProps = {\n  orientation: 'horizontal'\n};\nWizard.propTypes = {\n  orientation: PropTypes.oneOf(['vertical', 'horizontal'])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Wizard\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/wizard.js"],"names":["useState","PropTypes","Card","CardContent","Container","Grid","Stepper","WizardBusiness","WizardConfirmation","WizardNotifications","WizardProfile","steps","title","content","Wizard","props","orientation","currentStep","setCurrentStep","values","setValues","business","fullName","website","companyName","notifications","newCompanySignups","newOrders","publishErrors","handleNextStep","newValues","prevValues","length","handlePreviousStep","getContent","mt","defaultProps","propTypes","oneOf"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardContent, Container, Grid } from '@material-ui/core';\nimport { Stepper } from './stepper';\nimport { WizardBusiness } from './wizard-business';\nimport { WizardConfirmation } from './wizard-confirmation';\nimport { WizardNotifications } from './wizard-notifications';\nimport { WizardProfile } from './wizard-profile';\n\nconst steps = [\n  {\n    title: 'Step 1',\n    content: 'Business'\n  },\n  {\n    title: 'Step 2',\n    content: 'Profile'\n  },\n  {\n    title: 'Step 3',\n    content: 'Business'\n  },\n  {\n    title: 'Step 4',\n    content: 'Confirmation'\n  }\n];\n\nexport const Wizard = (props) => {\n  const { orientation } = props;\n  const [currentStep, setCurrentStep] = useState(0);\n  const [values, setValues] = useState({\n    business: '',\n    fullName: '',\n    website: '',\n    companyName: '',\n    notifications: {\n      newCompanySignups: true,\n      newOrders: false,\n      publishErrors: false\n    }\n  });\n\n  const handleNextStep = (newValues) => {\n    setValues((prevValues) => ({ ...prevValues, ...newValues }));\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const handlePreviousStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const getContent = () => {\n    if (currentStep === 0) {\n      return (\n        <WizardBusiness\n          initialBusiness={values.business}\n          onNextStep={handleNextStep}\n        />\n      );\n    }\n\n    if (currentStep === 1) {\n      return (\n        <WizardProfile\n          initialValues={{\n            fullName: values.fullName,\n            website: values.website,\n            companyName: values.companyName\n          }}\n          onNextStep={handleNextStep}\n          onPreviousStep={handlePreviousStep}\n        />\n      );\n    }\n\n    if (currentStep === 2) {\n      return (\n        <WizardNotifications\n          onNextStep={handleNextStep}\n          onPreviousStep={handlePreviousStep}\n          initialNotifications={values.notifications}\n        />\n      );\n    }\n\n    return (\n      <WizardConfirmation\n        onPreviousStep={handlePreviousStep}\n        values={values}\n      />\n    );\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      {orientation === 'horizontal'\n        ? (\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={4}\n                xs={12}\n              >\n                <Stepper\n                  steps={steps}\n                  currentStep={currentStep}\n                />\n              </Grid>\n              <Grid\n                item\n                md={8}\n                xs={12}\n              >\n                {getContent()}\n              </Grid>\n            </Grid>\n          </CardContent>\n        )\n        : (\n          <CardContent>\n            <Stepper\n              currentStep={currentStep}\n              orientation=\"horizontal\"\n              steps={steps}\n            />\n            <Container\n              maxWidth=\"sm\"\n              sx={{ mt: 6 }}\n            >\n              {getContent()}\n            </Container>\n          </CardContent>\n        )}\n    </Card>\n  );\n};\n\nWizard.defaultProps = {\n  orientation: 'horizontal'\n};\n\nWizard.propTypes = {\n  orientation: PropTypes.oneOf(['vertical', 'horizontal'])\n};\n"]},"metadata":{},"sourceType":"module"}