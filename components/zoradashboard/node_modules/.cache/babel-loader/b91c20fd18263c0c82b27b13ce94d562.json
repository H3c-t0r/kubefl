{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/customer-orders.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport { Box, Card, Link, Skeleton, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Typography } from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { CustomerOrderMenu } from '../components/customer/customer-order-menu';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceUnavailable } from '../components/resource-unavailable';\nimport { Scrollbar } from '../components/scrollbar';\nimport { Status } from '../components/status';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'id',\n  label: 'Order ID'\n}, {\n  id: 'createdAt',\n  label: 'Created'\n}, {\n  id: 'distribution',\n  label: 'Distribution'\n}, {\n  id: 'status',\n  label: 'Status'\n}, {\n  id: 'totalAmount',\n  label: 'Total Amount'\n}];\nconst statusVariants = [{\n  color: 'info.main',\n  label: 'Placed',\n  value: 'placed'\n}, {\n  color: 'error.main',\n  label: 'Processed',\n  value: 'processed'\n}, {\n  color: 'warning.main',\n  label: 'Delivered',\n  value: 'delivered'\n}, {\n  color: 'success.main',\n  label: 'Complete',\n  value: 'complete'\n}];\nexport const CustomerOrders = () => {\n  _s();\n\n  var _ordersState$data, _ordersState$data2;\n\n  const mounted = useMounted();\n  const [controller, setController] = useState({\n    sort: 'desc',\n    sortBy: 'createdAt'\n  });\n  const [ordersState, setOrdersState] = useState({\n    isLoading: true\n  });\n  const getOrders = useCallback(async () => {\n    setOrdersState(() => ({\n      isLoading: true\n    }));\n\n    try {\n      const result = await customerApi.getCustomerOrders({\n        sort: controller.sort,\n        sortBy: controller.sortBy\n      });\n\n      if (mounted.current) {\n        setOrdersState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setOrdersState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, [controller]);\n  useEffect(() => {\n    getOrders().catch(console.error);\n  }, [controller]);\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  const displayLoading = ordersState.isLoading;\n  const displayError = Boolean(!ordersState.isLoading && ordersState.error);\n  const displayUnavailable = Boolean(!ordersState.isLoading && !ordersState.error && !((_ordersState$data = ordersState.data) === null || _ordersState$data === void 0 ? void 0 : _ordersState$data.length));\n\n  const handleSortChange = (event, property) => {\n    const isAsc = controller.sortBy === property && controller.sort === 'asc';\n    setController({ ...controller,\n      sort: isAsc ? 'desc' : 'asc',\n      sortBy: property\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Customer: Orders | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Scrollbar, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 1000\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: controller.sortBy === column.id,\n                    direction: controller.sortBy === column.id ? controller.sort : 'asc',\n                    disabled: ordersState.isLoading,\n                    onClick: event => handleSortChange(event, column.id),\n                    children: column.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this)\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: (_ordersState$data2 = ordersState.data) === null || _ordersState$data2 === void 0 ? void 0 : _ordersState$data2.map(order => {\n                const statusVariant = statusVariants.find(variant => variant.value === order.status);\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      color: \"inherit\",\n                      component: RouterLink,\n                      to: \"/dashboard/orders/1\",\n                      underline: \"none\",\n                      variant: \"subtitle2\",\n                      children: `#${order.id}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        color: \"inherit\",\n                        variant: \"inherit\",\n                        children: format(new Date(order.createdAt), 'dd MMM yyyy')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        color: \"textSecondary\",\n                        variant: \"inherit\",\n                        children: format(new Date(order.createdAt), 'HH:mm')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"inherit\",\n                      variant: \"inherit\",\n                      children: `${order.customer.city}, ${order.customer.country}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"textSecondary\",\n                      variant: \"inherit\",\n                      children: order.courier\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Status, {\n                      color: statusVariant.color,\n                      label: statusVariant.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: numeral(order.totalAmount).format(`${order.currencySymbol}0,0.00`)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(CustomerOrderMenu, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this)]\n                }, order.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), displayLoading && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 42\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), displayError && /*#__PURE__*/_jsxDEV(ResourceError, {\n          error: ordersState.error,\n          sx: {\n            height: '100%',\n            m: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), displayUnavailable && /*#__PURE__*/_jsxDEV(ResourceUnavailable, {\n          sx: {\n            height: '100%',\n            m: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomerOrders, \"381wPJcMA5bRQZcZ1Qkutbw+eG0=\", false, function () {\n  return [useMounted];\n});\n\n_c = CustomerOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerOrders\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/customer-orders.js"],"names":["useState","useEffect","useCallback","Helmet","Link","RouterLink","format","numeral","Box","Card","Skeleton","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Typography","customerApi","CustomerOrderMenu","ResourceError","ResourceUnavailable","Scrollbar","Status","useMounted","gtm","columns","id","label","statusVariants","color","value","CustomerOrders","mounted","controller","setController","sort","sortBy","ordersState","setOrdersState","isLoading","getOrders","result","getCustomerOrders","current","data","err","console","error","message","catch","push","event","displayLoading","displayError","Boolean","displayUnavailable","length","handleSortChange","property","isAsc","display","flexDirection","height","flexGrow","minWidth","map","column","order","statusVariant","find","variant","status","Date","createdAt","customer","city","country","courier","totalAmount","currencySymbol","p","m"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Card,\n  Link,\n  Skeleton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Typography\n} from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { CustomerOrderMenu } from '../components/customer/customer-order-menu';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceUnavailable } from '../components/resource-unavailable';\nimport { Scrollbar } from '../components/scrollbar';\nimport { Status } from '../components/status';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\n\nconst columns = [\n  {\n    id: 'id',\n    label: 'Order ID'\n  },\n  {\n    id: 'createdAt',\n    label: 'Created'\n  },\n  {\n    id: 'distribution',\n    label: 'Distribution'\n  },\n  {\n    id: 'status',\n    label: 'Status'\n  },\n  {\n    id: 'totalAmount',\n    label: 'Total Amount'\n  }\n];\n\nconst statusVariants = [\n  {\n    color: 'info.main',\n    label: 'Placed',\n    value: 'placed'\n  },\n  {\n    color: 'error.main',\n    label: 'Processed',\n    value: 'processed'\n  },\n  {\n    color: 'warning.main',\n    label: 'Delivered',\n    value: 'delivered'\n  },\n  {\n    color: 'success.main',\n    label: 'Complete',\n    value: 'complete'\n  }\n];\n\nexport const CustomerOrders = () => {\n  const mounted = useMounted();\n  const [controller, setController] = useState({\n    sort: 'desc',\n    sortBy: 'createdAt'\n  });\n  const [ordersState, setOrdersState] = useState({ isLoading: true });\n\n  const getOrders = useCallback(async () => {\n    setOrdersState(() => ({ isLoading: true }));\n\n    try {\n      const result = await customerApi.getCustomerOrders({\n        sort: controller.sort,\n        sortBy: controller.sortBy\n      });\n\n      if (mounted.current) {\n        setOrdersState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setOrdersState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, [controller]);\n\n  useEffect(() => {\n    getOrders().catch(console.error);\n  }, [controller]);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const displayLoading = ordersState.isLoading;\n  const displayError = Boolean(!ordersState.isLoading && ordersState.error);\n  const displayUnavailable = Boolean(!ordersState.isLoading\n    && !ordersState.error\n    && !ordersState.data?.length);\n\n  const handleSortChange = (event, property) => {\n    const isAsc = controller.sortBy === property && controller.sort === 'asc';\n\n    setController({\n      ...controller,\n      sort: isAsc ? 'desc' : 'asc',\n      sortBy: property\n    });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Customer: Orders | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        }}\n      >\n        <Card\n          variant=\"outlined\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flexGrow: 1\n          }}\n        >\n          <Scrollbar>\n            <Table sx={{ minWidth: 1000 }}>\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell key={column.id}>\n                      <TableSortLabel\n                        active={controller.sortBy === column.id}\n                        direction={controller.sortBy === column.id\n                          ? controller.sort\n                          : 'asc'}\n                        disabled={ordersState.isLoading}\n                        onClick={(event) => handleSortChange(event, column.id)}\n                      >\n                        {column.label}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n                  <TableCell />\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {ordersState.data?.map((order) => {\n                  const statusVariant = statusVariants.find((variant) => variant.value\n                    === order.status);\n\n                  return (\n                    <TableRow key={order.id}>\n                      <TableCell>\n                        <Link\n                          color=\"inherit\"\n                          component={RouterLink}\n                          to=\"/dashboard/orders/1\"\n                          underline=\"none\"\n                          variant=\"subtitle2\"\n                        >\n                          {`#${order.id}`}\n                        </Link>\n                      </TableCell>\n                      <TableCell>\n                        <Box>\n                          <Typography\n                            color=\"inherit\"\n                            variant=\"inherit\"\n                          >\n                            {format(new Date(order.createdAt), 'dd MMM yyyy')}\n                          </Typography>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"inherit\"\n                          >\n                            {format(new Date(order.createdAt), 'HH:mm')}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        <Typography\n                          color=\"inherit\"\n                          variant=\"inherit\"\n                        >\n                          {`${order.customer.city}, ${order.customer.country}`}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"inherit\"\n                        >\n                          {order.courier}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Status\n                          color={statusVariant.color}\n                          label={statusVariant.label}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {numeral(order.totalAmount).format(`${order.currencySymbol}0,0.00`)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <CustomerOrderMenu />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Scrollbar>\n          {displayLoading && (\n            <Box sx={{ p: 2 }}>\n              <Skeleton height={42} />\n              <Skeleton height={42} />\n              <Skeleton height={42} />\n            </Box>\n          )}\n          {displayError && (\n            <ResourceError\n              error={ordersState.error}\n              sx={{\n                height: '100%',\n                m: 2\n              }}\n            />\n          )}\n          {displayUnavailable && (\n            <ResourceUnavailable\n              sx={{\n                height: '100%',\n                m: 2\n              }}\n            />\n          )}\n        </Card>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}