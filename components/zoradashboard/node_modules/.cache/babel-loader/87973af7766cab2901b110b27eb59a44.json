{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/actions-menu.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Button, Menu, MenuItem } from '@material-ui/core';\nimport { usePopover } from '../hooks/use-popover';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ActionsMenu = props => {\n  _s();\n\n  const {\n    actions,\n    label,\n    ...other\n  } = props;\n  const [anchorRef, open, handleOpen, handleClose] = usePopover();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      endIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, this),\n      onClick: handleOpen,\n      size: \"large\",\n      variant: \"contained\",\n      ref: anchorRef,\n      ...other,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorRef.current,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      open: open,\n      onClose: handleClose,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: actions.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          if (item.onClick) {\n            item.onClick();\n          }\n\n          handleClose();\n        },\n        children: item.label\n      }, item.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ActionsMenu, \"Li+ZlAVS7crgWolWA5SiSLLMKeA=\", false, function () {\n  return [usePopover];\n});\n\n_c = ActionsMenu;\nActionsMenu.defaultProps = {\n  label: 'Actions'\n};\nActionsMenu.propTypes = {\n  actions: PropTypes.array.isRequired,\n  label: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionsMenu\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/actions-menu.js"],"names":["PropTypes","Button","Menu","MenuItem","usePopover","ChevronDown","ChevronDownIcon","ActionsMenu","props","actions","label","other","anchorRef","open","handleOpen","handleClose","current","vertical","horizontal","map","item","onClick","defaultProps","propTypes","array","isRequired","string"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,mBAAvC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,WAAW,IAAIC,eAAxB,QAA+C,uBAA/C;;;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkB,OAAGC;AAArB,MAA+BH,KAArC;AACA,QAAM,CAACI,SAAD,EAAYC,IAAZ,EAAkBC,UAAlB,EAA8BC,WAA9B,IAA6CX,UAAU,EAA7D;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,eAAE,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFX;AAGE,MAAA,OAAO,EAAEU,UAHX;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,OAAO,EAAC,WALV;AAME,MAAA,GAAG,EAAEF,SANP;AAAA,SAOMD,KAPN;AAAA,gBASGD;AATH;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,IAAD;AACE,MAAA,QAAQ,EAAEE,SAAS,CAACI,OADtB;AAEE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAFhB;AAME,MAAA,IAAI,EAAEL,IANR;AAOE,MAAA,OAAO,EAAEE,WAPX;AAQE,MAAA,eAAe,EAAE;AACfE,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OARnB;AAAA,gBAaGT,OAAO,CAACU,GAAR,CAAaC,IAAD,iBACX,QAAC,QAAD;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBD,YAAAA,IAAI,CAACC,OAAL;AACD;;AAEDN,UAAAA,WAAW;AACZ,SARH;AAAA,kBAUGK,IAAI,CAACV;AAVR,SACOU,IAAI,CAACV,KADZ;AAAA;AAAA;AAAA;AAAA,cADD;AAbH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AA2CD,CA/CM;;GAAMH,W;UAEwCH,U;;;KAFxCG,W;AAiDbA,WAAW,CAACe,YAAZ,GAA2B;AACzBZ,EAAAA,KAAK,EAAE;AADkB,CAA3B;AAIAH,WAAW,CAACgB,SAAZ,GAAwB;AACtBd,EAAAA,OAAO,EAAET,SAAS,CAACwB,KAAV,CAAgBC,UADH;AAEtBf,EAAAA,KAAK,EAAEV,SAAS,CAAC0B;AAFK,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\nimport { Button, Menu, MenuItem } from '@material-ui/core';\nimport { usePopover } from '../hooks/use-popover';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\n\nexport const ActionsMenu = (props) => {\n  const { actions, label, ...other } = props;\n  const [anchorRef, open, handleOpen, handleClose] = usePopover();\n\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        endIcon={<ChevronDownIcon fontSize=\"small\" />}\n        onClick={handleOpen}\n        size=\"large\"\n        variant=\"contained\"\n        ref={anchorRef}\n        {...other}\n      >\n        {label}\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={open}\n        onClose={handleClose}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n      >\n        {actions.map((item) => (\n          <MenuItem\n            key={item.label}\n            onClick={() => {\n              if (item.onClick) {\n                item.onClick();\n              }\n\n              handleClose();\n            }}\n          >\n            {item.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nActionsMenu.defaultProps = {\n  label: 'Actions'\n};\n\nActionsMenu.propTypes = {\n  actions: PropTypes.array.isRequired,\n  label: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}