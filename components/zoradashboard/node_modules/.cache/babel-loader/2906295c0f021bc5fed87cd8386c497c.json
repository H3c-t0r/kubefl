{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/auth/register-amplify.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, FormHelperText, Grid, Link, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport { useAuth } from '../../hooks/use-auth';\nimport { useMounted } from '../../hooks/use-mounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterAmplify = () => {\n  _s();\n\n  const mounted = useMounted();\n  const navigate = useNavigate();\n  const {\n    register\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      fullName: '',\n      password: '',\n      passwordConfirm: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      fullName: Yup.string().max(255).required('Name is required'),\n      password: Yup.string().max(255).required('Password is required'),\n      passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Password confirm is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await register(values.email, values.password);\n        navigate('/verify-code', {\n          state: {\n            username: values.email\n          }\n        });\n      } catch (err) {\n        console.error(err);\n\n        if (mounted.current) {\n          helpers.setStatus({\n            success: false\n          });\n          helpers.setErrors({\n            submit: err.message\n          });\n          helpers.setSubmitting(false);\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textPrimary\",\n      sx: {\n        mb: 3\n      },\n      variant: \"h4\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          autoFocus: true,\n          error: Boolean(formik.touched.fullName && formik.errors.fullName),\n          fullWidth: true,\n          helperText: formik.touched.fullName && formik.errors.fullName,\n          label: \"Full Name\",\n          name: \"fullName\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          value: formik.values.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          error: Boolean(formik.touched.email && formik.errors.email),\n          fullWidth: true,\n          helperText: formik.touched.email && formik.errors.email,\n          label: \"Email Address\",\n          name: \"email\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          type: \"email\",\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          error: Boolean(formik.touched.password && formik.errors.password),\n          fullWidth: true,\n          helperText: formik.touched.password && formik.errors.password,\n          label: \"Password\",\n          name: \"password\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          type: \"password\",\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          error: Boolean(formik.touched.passwordConfirm && formik.errors.passwordConfirm),\n          fullWidth: true,\n          helperText: formik.touched.passwordConfirm && formik.errors.passwordConfirm,\n          label: \"Re-type Password\",\n          name: \"passwordConfirm\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          type: \"password\",\n          value: formik.values.passwordConfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: formik.errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          textAlign: \"center\",\n          color: \"textPrimary\",\n          variant: \"body2\",\n          children: [\"By clicking any of the Sign Up button, I agree to the \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n            color: \"primary\",\n            component: RouterLink,\n            to: \"#\",\n            variant: \"inherit\",\n            children: \"terms of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: formik.isSubmitting,\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterAmplify, \"YV1ro2PZPXaXpAOxGAAJ10PtDns=\", false, function () {\n  return [useMounted, useNavigate, useAuth, useFormik];\n});\n\n_c = RegisterAmplify;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterAmplify\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/auth/register-amplify.js"],"names":["Link","RouterLink","useNavigate","useFormik","Yup","Button","FormHelperText","Grid","Typography","InputField","useAuth","useMounted","RegisterAmplify","mounted","navigate","register","formik","initialValues","email","fullName","password","passwordConfirm","submit","validationSchema","object","shape","string","max","required","oneOf","ref","onSubmit","values","helpers","state","username","err","console","error","current","setStatus","success","setErrors","message","setSubmitting","handleSubmit","mb","Boolean","touched","errors","handleBlur","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, FormHelperText, Grid, Link, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport { useAuth } from '../../hooks/use-auth';\nimport { useMounted } from '../../hooks/use-mounted';\n\nexport const RegisterAmplify = () => {\n  const mounted = useMounted();\n  const navigate = useNavigate();\n  const { register } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      fullName: '',\n      password: '',\n      passwordConfirm: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      fullName: Yup.string().max(255).required('Name is required'),\n      password: Yup.string().max(255).required('Password is required'),\n      passwordConfirm: Yup\n        .string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Password confirm is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await register(values.email, values.password);\n\n        navigate('/verify-code', {\n          state: {\n            username: values.email\n          }\n        });\n      } catch (err) {\n        console.error(err);\n        if (mounted.current) {\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Typography\n        color=\"textPrimary\"\n        sx={{ mb: 3 }}\n        variant=\"h4\"\n      >\n        Register\n      </Typography>\n      <Grid\n        container\n        spacing={2}\n      >\n        <Grid\n          item\n          xs={12}\n        >\n          <InputField\n            autoFocus\n            error={Boolean(formik.touched.fullName && formik.errors.fullName)}\n            fullWidth\n            helperText={formik.touched.fullName && formik.errors.fullName}\n            label=\"Full Name\"\n            name=\"fullName\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.fullName}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n        >\n          <InputField\n            error={Boolean(formik.touched.email && formik.errors.email)}\n            fullWidth\n            helperText={formik.touched.email && formik.errors.email}\n            label=\"Email Address\"\n            name=\"email\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"email\"\n            value={formik.values.email}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n        >\n          <InputField\n            error={Boolean(formik.touched.password && formik.errors.password)}\n            fullWidth\n            helperText={formik.touched.password && formik.errors.password}\n            label=\"Password\"\n            name=\"password\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"password\"\n            value={formik.values.password}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n        >\n          <InputField\n            error={Boolean(formik.touched.passwordConfirm\n              && formik.errors.passwordConfirm)}\n            fullWidth\n            helperText={formik.touched.passwordConfirm && formik.errors.passwordConfirm}\n            label=\"Re-type Password\"\n            name=\"passwordConfirm\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"password\"\n            value={formik.values.passwordConfirm}\n          />\n        </Grid>\n        {formik.errors.submit && (\n          <Grid\n            item\n            xs={12}\n          >\n            <FormHelperText error>\n              {formik.errors.submit}\n            </FormHelperText>\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n        >\n          <Typography\n            textAlign=\"center\"\n            color=\"textPrimary\"\n            variant=\"body2\"\n          >\n            By clicking any of the Sign Up button, I agree to the\n            &nbsp;\n            <Link\n              color=\"primary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"inherit\"\n            >\n              terms of service\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n        >\n          <Button\n            color=\"primary\"\n            disabled={formik.isSubmitting}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Sign Up\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}