{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/order/order-dropable.js\";\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { Box, Divider, Typography } from '@material-ui/core';\nimport { StatusBadge } from '../status-badge';\nimport { OrderDraggable } from './order-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderDroppable = props => {\n  const {\n    badgeColor,\n    id,\n    orders,\n    title,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      maxWidth: 400,\n      minWidth: 400,\n      '& + &': {\n        borderLeft: theme => `1px solid ${theme.palette.divider}`\n      }\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        px: 3,\n        py: 2.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(StatusBadge, {\n        color: badgeColor,\n        sx: {\n          mr: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        variant: \"overline\",\n        whiteSpace: \"nowrap\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: id,\n      children: provided => /*#__PURE__*/_jsxDEV(Box, {\n        ref: provided.innerRef,\n        sx: {\n          flexGrow: 1,\n          p: 2\n        },\n        ...provided.droppableProps,\n        children: [orders.map((order, index) => /*#__PURE__*/_jsxDEV(OrderDraggable, {\n          badgeColor: badgeColor,\n          index: index,\n          order: order\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = OrderDroppable;\nOrderDroppable.propTypes = {\n  badgeColor: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  orders: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderDroppable\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/order/order-dropable.js"],"names":["PropTypes","Droppable","Box","Divider","Typography","StatusBadge","OrderDraggable","OrderDroppable","props","badgeColor","id","orders","title","other","display","flexDirection","flexGrow","maxWidth","minWidth","borderLeft","theme","palette","divider","alignItems","px","py","mr","provided","innerRef","p","droppableProps","map","order","index","placeholder","propTypes","string","isRequired","array"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,UAAvB,QAAyC,mBAAzC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACvC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,EAAd;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,KAA1B;AAAiC,OAAGC;AAApC,MAA8CL,KAApD;AAEA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFM,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,aAAa,EAAE,QAFb;AAGFC,MAAAA,QAAQ,EAAE,CAHR;AAIFC,MAAAA,QAAQ,EAAE,GAJR;AAKFC,MAAAA,QAAQ,EAAE,GALR;AAMF,eAAS;AACPC,QAAAA,UAAU,EAAGC,KAAD,IAAY,aAAYA,KAAK,CAACC,OAAN,CAAcC,OAAQ;AADnD;AANP,KADN;AAAA,OAWMT,KAXN;AAAA,4BAaE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFU,QAAAA,UAAU,EAAE,QADV;AAEFT,QAAAA,OAAO,EAAE,MAFP;AAGFU,QAAAA,EAAE,EAAE,CAHF;AAIFC,QAAAA,EAAE,EAAE;AAJF,OADN;AAAA,8BAQE,QAAC,WAAD;AACE,QAAA,KAAK,EAAEhB,UADT;AAEE,QAAA,EAAE,EAAE;AAAEiB,UAAAA,EAAE,EAAE;AAAN;AAFN;AAAA;AAAA;AAAA;AAAA,cARF,eAYE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,UAAU,EAAC,QAHb;AAAA,kBAKGd;AALH;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAiCE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAjCF,eAkCE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEF,EAAxB;AAAA,gBACIiB,QAAD,iBACC,QAAC,GAAD;AACE,QAAA,GAAG,EAAEA,QAAQ,CAACC,QADhB;AAEE,QAAA,EAAE,EAAE;AACFZ,UAAAA,QAAQ,EAAE,CADR;AAEFa,UAAAA,CAAC,EAAE;AAFD,SAFN;AAAA,WAMMF,QAAQ,CAACG,cANf;AAAA,mBAQGnB,MAAM,CAACoB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV,QAAC,cAAD;AACE,UAAA,UAAU,EAAExB,UADd;AAGE,UAAA,KAAK,EAAEwB,KAHT;AAIE,UAAA,KAAK,EAAED;AAJT,WAEOA,KAAK,CAACtB,EAFb;AAAA;AAAA;AAAA;AAAA,gBADD,CARH,EAgBGiB,QAAQ,CAACO,WAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2DD,CA9DM;KAAM3B,c;AAgEbA,cAAc,CAAC4B,SAAf,GAA2B;AACzB1B,EAAAA,UAAU,EAAET,SAAS,CAACoC,MAAV,CAAiBC,UADJ;AAEzB3B,EAAAA,EAAE,EAAEV,SAAS,CAACoC,MAAV,CAAiBC,UAFI;AAGzB1B,EAAAA,MAAM,EAAEX,SAAS,CAACsC,KAAV,CAAgBD,UAHC;AAIzBzB,EAAAA,KAAK,EAAEZ,SAAS,CAACoC,MAAV,CAAiBC;AAJC,CAA3B","sourcesContent":["import PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { Box, Divider, Typography } from '@material-ui/core';\nimport { StatusBadge } from '../status-badge';\nimport { OrderDraggable } from './order-draggable';\n\nexport const OrderDroppable = (props) => {\n  const { badgeColor, id, orders, title, ...other } = props;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        maxWidth: 400,\n        minWidth: 400,\n        '& + &': {\n          borderLeft: (theme) => `1px solid ${theme.palette.divider}`\n        }\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          px: 3,\n          py: 2.5\n        }}\n      >\n        <StatusBadge\n          color={badgeColor}\n          sx={{ mr: 2 }}\n        />\n        <Typography\n          color=\"textSecondary\"\n          variant=\"overline\"\n          whiteSpace=\"nowrap\"\n        >\n          {title}\n        </Typography>\n      </Box>\n      <Divider />\n      <Droppable droppableId={id}>\n        {(provided) => (\n          <Box\n            ref={provided.innerRef}\n            sx={{\n              flexGrow: 1,\n              p: 2\n            }}\n            {...provided.droppableProps}\n          >\n            {orders.map((order, index) => (\n              <OrderDraggable\n                badgeColor={badgeColor}\n                key={order.id}\n                index={index}\n                order={order}\n              />\n            ))}\n            {provided.placeholder}\n          </Box>\n        )}\n      </Droppable>\n    </Box>\n  );\n};\n\nOrderDroppable.propTypes = {\n  badgeColor: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  orders: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}