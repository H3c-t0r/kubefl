{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/product-info-dialog.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormHelperText, Grid, Typography } from '@material-ui/core';\nimport { AutocompleteField } from '../autocomplete-field';\nimport { InputField } from '../input-field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst compositionOptions = ['Leather', 'Metal'];\nconst tagOptions = ['Watch', 'Style'];\nexport const ProductInfoDialog = props => {\n  _s();\n\n  const {\n    open,\n    onClose,\n    product\n  } = props;\n  const formik = useFormik({\n    initialValues: {\n      brand: (product === null || product === void 0 ? void 0 : product.brand) || '',\n      chargeTax: (product === null || product === void 0 ? void 0 : product.chargeTax) || true,\n      description: (product === null || product === void 0 ? void 0 : product.description) || '',\n      displayName: (product === null || product === void 0 ? void 0 : product.displayName) || '',\n      composition: (product === null || product === void 0 ? void 0 : product.composition) || [],\n      sku: (product === null || product === void 0 ? void 0 : product.sku) || '',\n      submit: null,\n      tags: (product === null || product === void 0 ? void 0 : product.tags) || []\n    },\n    validationSchema: Yup.object().shape({\n      brand: Yup.string().max(255).required('Brand is required'),\n      chargeTax: Yup.boolean(),\n      description: Yup.string().max(500).required('Description is required'),\n      displayName: Yup.string().max(255).required('Display name is required'),\n      composition: Yup.array(),\n      sku: Yup.string().max(255).required('SKU is required'),\n      tags: Yup.array()\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Product updated');\n        helpers.setStatus({\n          success: true\n        });\n        helpers.setSubmitting(false);\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: onClose,\n    open: open,\n    PaperProps: {\n      sx: {\n        width: '100%'\n      }\n    },\n    TransitionProps: {\n      onExited: () => formik.resetForm()\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            disabled: true,\n            error: Boolean(formik.touched.brand && formik.errors.brand),\n            fullWidth: true,\n            helperText: formik.touched.brand && formik.errors.brand,\n            label: \"Brand name\",\n            name: \"brand\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            value: formik.values.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            disabled: true,\n            error: Boolean(formik.touched.sku && formik.errors.sku),\n            fullWidth: true,\n            helperText: formik.touched.sku && formik.errors.sku,\n            label: \"SKU\",\n            name: \"sku\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            value: formik.values.sku\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.displayName && formik.errors.displayName),\n            fullWidth: true,\n            helperText: formik.touched.displayName && formik.errors.displayName,\n            label: \"Display name\",\n            name: \"displayName\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            value: formik.values.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            error: Boolean(formik.touched.description && formik.errors.description),\n            fullWidth: true,\n            helperText: formik.touched.description && formik.errors.description,\n            label: \"Description\",\n            multiline: true,\n            name: \"description\",\n            onBlur: formik.handleBlur,\n            onChange: formik.handleChange,\n            rows: 4,\n            value: formik.values.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AutocompleteField, {\n            error: Boolean(formik.touched.composition && formik.errors.composition),\n            filterSelectedOptions: true,\n            helperText: formik.touched.composition && formik.errors.composition,\n            label: \"Composition\",\n            multiple: true,\n            onChange: (event, value) => {\n              formik.setFieldValue('composition', value);\n            },\n            options: compositionOptions,\n            placeholder: \"Feature\",\n            value: formik.values.composition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AutocompleteField, {\n            error: Boolean(formik.touched.tags && formik.errors.tags),\n            filterSelectedOptions: true,\n            helperText: formik.touched.tags && formik.errors.tags,\n            label: \"Tags\",\n            multiple: true,\n            onChange: (event, value) => {\n              formik.setFieldValue('tags', value);\n            },\n            options: tagOptions,\n            placeholder: \"Tag\",\n            value: formik.values.tags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          sx: {\n            alignItems: 'center',\n            display: 'flex'\n          },\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: formik.values.chargeTax,\n            onChange: event => {\n              formik.setFieldValue('chargeTax', event.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"body1\",\n            children: \"Charge tax on this product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: formik.errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onClose,\n        variant: \"text\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: () => {\n          formik.handleSubmit();\n        },\n        variant: \"contained\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductInfoDialog, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ProductInfoDialog;\nProductInfoDialog.defaultProps = {\n  open: false\n};\nProductInfoDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  product: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductInfoDialog\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/product-info-dialog.js"],"names":["PropTypes","useFormik","Yup","toast","Button","Checkbox","Dialog","DialogActions","DialogContent","DialogTitle","FormHelperText","Grid","Typography","AutocompleteField","InputField","compositionOptions","tagOptions","ProductInfoDialog","props","open","onClose","product","formik","initialValues","brand","chargeTax","description","displayName","composition","sku","submit","tags","validationSchema","object","shape","string","max","required","boolean","array","onSubmit","values","helpers","success","setStatus","setSubmitting","err","console","error","setErrors","message","sx","width","onExited","resetForm","Boolean","touched","errors","handleBlur","handleChange","event","value","setFieldValue","alignItems","display","target","checked","handleSubmit","defaultProps","propTypes","func","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { AutocompleteField } from '../autocomplete-field';\nimport { InputField } from '../input-field';\n\nconst compositionOptions = ['Leather', 'Metal'];\nconst tagOptions = ['Watch', 'Style'];\n\nexport const ProductInfoDialog = (props) => {\n  const { open, onClose, product } = props;\n  const formik = useFormik({\n    initialValues: {\n      brand: product?.brand || '',\n      chargeTax: product?.chargeTax || true,\n      description: product?.description || '',\n      displayName: product?.displayName || '',\n      composition: product?.composition || [],\n      sku: product?.sku || '',\n      submit: null,\n      tags: product?.tags || []\n    },\n    validationSchema: Yup.object().shape({\n      brand: Yup.string().max(255).required('Brand is required'),\n      chargeTax: Yup.boolean(),\n      description: Yup.string().max(500).required('Description is required'),\n      displayName: Yup.string().max(255).required('Display name is required'),\n      composition: Yup.array(),\n      sku: Yup.string().max(255).required('SKU is required'),\n      tags: Yup.array()\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Product updated');\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n        onClose?.();\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      PaperProps={{\n        sx: {\n          width: '100%'\n        }\n      }}\n      TransitionProps={{\n        onExited: () => formik.resetForm()\n      }}\n    >\n      <DialogTitle>\n        Edit Product\n      </DialogTitle>\n      <DialogContent>\n        <Grid\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <InputField\n              disabled\n              error={Boolean(formik.touched.brand && formik.errors.brand)}\n              fullWidth\n              helperText={formik.touched.brand && formik.errors.brand}\n              label=\"Brand name\"\n              name=\"brand\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.brand}\n            />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <InputField\n              disabled\n              error={Boolean(formik.touched.sku && formik.errors.sku)}\n              fullWidth\n              helperText={formik.touched.sku && formik.errors.sku}\n              label=\"SKU\"\n              name=\"sku\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.sku}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.displayName && formik.errors.displayName)}\n              fullWidth\n              helperText={formik.touched.displayName && formik.errors.displayName}\n              label=\"Display name\"\n              name=\"displayName\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.displayName}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.description && formik.errors.description)}\n              fullWidth\n              helperText={formik.touched.description && formik.errors.description}\n              label=\"Description\"\n              multiline\n              name=\"description\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              rows={4}\n              value={formik.values.description}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <AutocompleteField\n              error={Boolean(formik.touched.composition\n                && formik.errors.composition)}\n              filterSelectedOptions\n              helperText={formik.touched.composition && formik.errors.composition}\n              label=\"Composition\"\n              multiple\n              onChange={(event, value) => {\n                formik.setFieldValue('composition',\n                  value);\n              }}\n              options={compositionOptions}\n              placeholder=\"Feature\"\n              value={formik.values.composition}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <AutocompleteField\n              error={Boolean(formik.touched.tags && formik.errors.tags)}\n              filterSelectedOptions\n              helperText={formik.touched.tags && formik.errors.tags}\n              label=\"Tags\"\n              multiple\n              onChange={(event, value) => { formik.setFieldValue('tags', value); }}\n              options={tagOptions}\n              placeholder=\"Tag\"\n              value={formik.values.tags}\n            />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n            xs={12}\n          >\n            <Checkbox\n              checked={formik.values.chargeTax}\n              onChange={(event) => {\n                formik.setFieldValue('chargeTax',\n                  event.target.checked);\n              }}\n            />\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Charge tax on this product\n            </Typography>\n          </Grid>\n          {formik.errors.submit && (\n            <Grid\n              item\n              xs={12}\n            >\n              <FormHelperText error>\n                {formik.errors.submit}\n              </FormHelperText>\n            </Grid>\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onClose}\n          variant=\"text\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => { formik.handleSubmit(); }}\n          variant=\"contained\"\n        >\n          Save Changes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nProductInfoDialog.defaultProps = {\n  open: false\n};\n\nProductInfoDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  product: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}