{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/order/orders-filter.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Divider, Tab, Tabs, ToggleButton, ToggleButtonGroup } from '@material-ui/core';\nimport { Adjustments as AdjustmentsIcon } from '../../icons/adjustments';\nimport { ViewGrid as ViewGridIcon } from '../../icons/view-grid';\nimport { ViewList as ViewListIcon } from '../../icons/view-list';\nimport { containsOperator, endsWithOperator, equalOperator, greaterThanOperator, isAfterOperator, isBeforeOperator, isBlankOperator, isPresentOperator, lessThanOperator, notContainsOperator, notEqualOperator, startsWithOperator } from '../../utils/filter-operators';\nimport { BulkActionsMenu } from '../bulk-actions-menu';\nimport { FilterDialog } from '../filter-dialog';\nimport { Query } from '../query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst views = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Processed',\n  value: 'processed'\n}, {\n  label: 'Delivered',\n  value: 'delivered'\n}, {\n  label: 'Complete',\n  value: 'complete'\n}];\nconst filterProperties = [{\n  label: 'Status',\n  name: 'status',\n  type: 'string'\n}, {\n  label: 'Created',\n  name: 'createdAt',\n  type: 'date'\n}, {\n  label: 'Updated',\n  name: 'updatedAt',\n  type: 'date'\n}, {\n  label: 'Courier',\n  name: 'courier',\n  type: 'string'\n}, {\n  label: 'Payment Method',\n  name: 'paymentMethod',\n  type: 'string'\n}, {\n  label: 'Total Amount',\n  name: 'totalAmount',\n  type: 'number'\n}];\nconst filterOperators = [equalOperator, notEqualOperator, containsOperator, notContainsOperator, startsWithOperator, endsWithOperator, greaterThanOperator, lessThanOperator, isAfterOperator, isBeforeOperator, isBlankOperator, isPresentOperator];\nexport const OrdersFilter = props => {\n  _s();\n\n  const {\n    disabled,\n    filters,\n    mode,\n    onFiltersApply,\n    onFiltersClear,\n    onModeChange,\n    onQueryChange,\n    onViewChange,\n    query,\n    selectedOrders,\n    view\n  } = props;\n  const [openFilterDialog, setOpenFilterDialog] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          px: {\n            sm: 3\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          onChange: (event, value) => onViewChange === null || onViewChange === void 0 ? void 0 : onViewChange(value),\n          allowScrollButtonsMobile: true,\n          value: view,\n          variant: \"scrollable\",\n          children: views.map(option => /*#__PURE__*/_jsxDEV(Tab, {\n            disabled: disabled,\n            label: option.label,\n            value: option.value\n          }, option.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: 'center',\n          display: 'grid',\n          gap: 2,\n          gridTemplateColumns: {\n            sm: mode === 'table' && selectedOrders.length > 0 ? 'auto 1fr auto' : '1fr auto',\n            xs: 'auto'\n          },\n          justifyItems: 'flex-start',\n          p: 3\n        },\n        children: [mode === 'table' && /*#__PURE__*/_jsxDEV(BulkActionsMenu, {\n          disabled: disabled,\n          onArchive: () => {},\n          onDelete: () => {},\n          selectedCount: selectedOrders.length,\n          sx: {\n            display: selectedOrders.length > 0 ? 'flex' : 'none',\n            order: {\n              sm: 1,\n              xs: 2\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Query, {\n          disabled: disabled,\n          onChange: onQueryChange,\n          sx: {\n            order: {\n              sm: 2,\n              xs: 1\n            }\n          },\n          value: query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex',\n            order: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n            exclusive: true,\n            onChange: onModeChange,\n            size: \"small\",\n            sx: {\n              border: theme => `1px solid ${theme.palette.divider}`,\n              p: 0.5,\n              mr: 2,\n              '& .MuiToggleButton-root': {\n                border: 0,\n                '&:not(:first-of-type)': {\n                  borderRadius: 1\n                },\n                '&:first-of-type': {\n                  borderRadius: 1,\n                  mr: 0.5\n                }\n              }\n            },\n            value: mode,\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"table\",\n              children: /*#__PURE__*/_jsxDEV(ViewListIcon, {\n                fontSize: \"small\",\n                sx: {\n                  color: 'rgba(35, 45, 55, 0.38)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"dnd\",\n              children: /*#__PURE__*/_jsxDEV(ViewGridIcon, {\n                fontSize: \"small\",\n                sx: {\n                  color: 'rgba(35, 45, 55, 0.38)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: disabled,\n            onClick: () => setOpenFilterDialog(true),\n            startIcon: /*#__PURE__*/_jsxDEV(AdjustmentsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 26\n            }, this),\n            size: \"large\",\n            sx: {\n              order: 3\n            },\n            variant: filters.length ? 'contained' : 'text',\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterDialog, {\n      onApply: onFiltersApply,\n      onClear: onFiltersClear,\n      onClose: () => setOpenFilterDialog(false),\n      open: openFilterDialog,\n      operators: filterOperators,\n      properties: filterProperties\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrdersFilter, \"j+88xnasXpjXAUAY/4f7lGNtZuc=\");\n\n_c = OrdersFilter;\nOrdersFilter.defaultProps = {\n  filters: [],\n  mode: 'dnd',\n  selectedOrders: [],\n  view: 'all'\n};\nOrdersFilter.propTypes = {\n  disabled: PropTypes.bool,\n  filters: PropTypes.array,\n  mode: PropTypes.oneOf(['table', 'dnd']),\n  onFiltersApply: PropTypes.func,\n  onFiltersClear: PropTypes.func,\n  onModeChange: PropTypes.func,\n  onQueryChange: PropTypes.func,\n  onViewChange: PropTypes.func,\n  query: PropTypes.string,\n  selectedOrders: PropTypes.array,\n  view: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersFilter\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/order/orders-filter.js"],"names":["useState","PropTypes","Box","Button","Divider","Tab","Tabs","ToggleButton","ToggleButtonGroup","Adjustments","AdjustmentsIcon","ViewGrid","ViewGridIcon","ViewList","ViewListIcon","containsOperator","endsWithOperator","equalOperator","greaterThanOperator","isAfterOperator","isBeforeOperator","isBlankOperator","isPresentOperator","lessThanOperator","notContainsOperator","notEqualOperator","startsWithOperator","BulkActionsMenu","FilterDialog","Query","views","label","value","filterProperties","name","type","filterOperators","OrdersFilter","props","disabled","filters","mode","onFiltersApply","onFiltersClear","onModeChange","onQueryChange","onViewChange","query","selectedOrders","view","openFilterDialog","setOpenFilterDialog","px","sm","event","map","option","alignItems","display","gap","gridTemplateColumns","length","xs","justifyItems","p","order","border","theme","palette","divider","mr","borderRadius","color","defaultProps","propTypes","bool","array","oneOf","func","string"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Divider,\n  Tab,\n  Tabs,\n  ToggleButton,\n  ToggleButtonGroup\n} from '@material-ui/core';\nimport { Adjustments as AdjustmentsIcon } from '../../icons/adjustments';\nimport { ViewGrid as ViewGridIcon } from '../../icons/view-grid';\nimport { ViewList as ViewListIcon } from '../../icons/view-list';\nimport {\n  containsOperator,\n  endsWithOperator,\n  equalOperator,\n  greaterThanOperator,\n  isAfterOperator,\n  isBeforeOperator,\n  isBlankOperator,\n  isPresentOperator,\n  lessThanOperator,\n  notContainsOperator,\n  notEqualOperator,\n  startsWithOperator\n} from '../../utils/filter-operators';\nimport { BulkActionsMenu } from '../bulk-actions-menu';\nimport { FilterDialog } from '../filter-dialog';\nimport { Query } from '../query';\n\nconst views = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Processed',\n    value: 'processed'\n  },\n  {\n    label: 'Delivered',\n    value: 'delivered'\n  },\n  {\n    label: 'Complete',\n    value: 'complete'\n  }\n];\n\nconst filterProperties = [\n  {\n    label: 'Status',\n    name: 'status',\n    type: 'string'\n  },\n  {\n    label: 'Created',\n    name: 'createdAt',\n    type: 'date'\n  },\n  {\n    label: 'Updated',\n    name: 'updatedAt',\n    type: 'date'\n  },\n  {\n    label: 'Courier',\n    name: 'courier',\n    type: 'string'\n  },\n  {\n    label: 'Payment Method',\n    name: 'paymentMethod',\n    type: 'string'\n  },\n  {\n    label: 'Total Amount',\n    name: 'totalAmount',\n    type: 'number'\n  }\n];\n\nconst filterOperators = [\n  equalOperator,\n  notEqualOperator,\n  containsOperator,\n  notContainsOperator,\n  startsWithOperator,\n  endsWithOperator,\n  greaterThanOperator,\n  lessThanOperator,\n  isAfterOperator,\n  isBeforeOperator,\n  isBlankOperator,\n  isPresentOperator\n];\n\nexport const OrdersFilter = (props) => {\n  const {\n    disabled,\n    filters,\n    mode,\n    onFiltersApply,\n    onFiltersClear,\n    onModeChange,\n    onQueryChange,\n    onViewChange,\n    query,\n    selectedOrders,\n    view\n  } = props;\n  const [openFilterDialog, setOpenFilterDialog] = useState(false);\n\n  return (\n    <>\n      <div>\n        <Box\n          sx={{\n            px: {\n              sm: 3\n            }\n          }}\n        >\n          <Tabs\n            onChange={(event, value) => onViewChange?.(value)}\n            allowScrollButtonsMobile\n            value={view}\n            variant=\"scrollable\"\n          >\n            {views.map((option) => (\n              <Tab\n                disabled={disabled}\n                key={option.label}\n                label={option.label}\n                value={option.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'grid',\n            gap: 2,\n            gridTemplateColumns: {\n              sm: mode === 'table' && selectedOrders.length > 0 ? 'auto 1fr auto' : '1fr auto',\n              xs: 'auto'\n            },\n            justifyItems: 'flex-start',\n            p: 3\n          }}\n        >\n          {mode === 'table' && (\n            <BulkActionsMenu\n              disabled={disabled}\n              onArchive={() => { }}\n              onDelete={() => { }}\n              selectedCount={selectedOrders.length}\n              sx={{\n                display: selectedOrders.length > 0 ? 'flex' : 'none',\n                order: {\n                  sm: 1,\n                  xs: 2\n                }\n              }}\n            />\n          )}\n          <Query\n            disabled={disabled}\n            onChange={onQueryChange}\n            sx={{\n              order: {\n                sm: 2,\n                xs: 1\n              }\n            }}\n            value={query}\n          />\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              order: 3\n            }}\n          >\n            <ToggleButtonGroup\n              exclusive\n              onChange={onModeChange}\n              size=\"small\"\n              sx={{\n                border: (theme) => `1px solid ${theme.palette.divider}`,\n                p: 0.5,\n                mr: 2,\n                '& .MuiToggleButton-root': {\n                  border: 0,\n                  '&:not(:first-of-type)': {\n                    borderRadius: 1\n                  },\n                  '&:first-of-type': {\n                    borderRadius: 1,\n                    mr: 0.5\n                  }\n                }\n              }}\n              value={mode}\n            >\n              <ToggleButton value=\"table\">\n                <ViewListIcon\n                  fontSize=\"small\"\n                  sx={{ color: 'rgba(35, 45, 55, 0.38)' }}\n                />\n              </ToggleButton>\n              <ToggleButton value=\"dnd\">\n                <ViewGridIcon\n                  fontSize=\"small\"\n                  sx={{ color: 'rgba(35, 45, 55, 0.38)' }}\n                />\n              </ToggleButton>\n            </ToggleButtonGroup>\n            <Button\n              color=\"primary\"\n              disabled={disabled}\n              onClick={() => setOpenFilterDialog(true)}\n              startIcon={<AdjustmentsIcon />}\n              size=\"large\"\n              sx={{ order: 3 }}\n              variant={filters.length ? 'contained' : 'text'}\n            >\n              Filter\n            </Button>\n          </Box>\n        </Box>\n      </div>\n      <FilterDialog\n        onApply={onFiltersApply}\n        onClear={onFiltersClear}\n        onClose={() => setOpenFilterDialog(false)}\n        open={openFilterDialog}\n        operators={filterOperators}\n        properties={filterProperties}\n      />\n    </>\n  );\n};\n\nOrdersFilter.defaultProps = {\n  filters: [],\n  mode: 'dnd',\n  selectedOrders: [],\n  view: 'all'\n};\n\nOrdersFilter.propTypes = {\n  disabled: PropTypes.bool,\n  filters: PropTypes.array,\n  mode: PropTypes.oneOf(['table', 'dnd']),\n  onFiltersApply: PropTypes.func,\n  onFiltersClear: PropTypes.func,\n  onModeChange: PropTypes.func,\n  onQueryChange: PropTypes.func,\n  onViewChange: PropTypes.func,\n  query: PropTypes.string,\n  selectedOrders: PropTypes.array,\n  view: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}