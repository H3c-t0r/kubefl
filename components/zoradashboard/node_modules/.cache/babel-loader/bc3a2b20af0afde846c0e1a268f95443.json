{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/confirmation-dialog.js\";\nimport PropTypes from 'prop-types';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icons = {\n  error: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n    color: \"error\",\n    fontSize: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this),\n  warning: /*#__PURE__*/_jsxDEV(WarningIcon, {\n    color: \"warning\",\n    fontSize: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this),\n  info: /*#__PURE__*/_jsxDEV(InfoIcon, {\n    color: \"info\",\n    fontSize: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n};\nexport const ConfirmationDialog = props => {\n  const {\n    message,\n    onCancel,\n    onConfirm,\n    open,\n    title,\n    variant,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: onCancel,\n    open: open,\n    PaperProps: {\n      sx: {\n        width: '100%'\n      }\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex'\n      },\n      children: [icons[variant], /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        sx: {\n          ml: 2\n        },\n        variant: \"inherit\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        variant: \"body1\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onCancel,\n        variant: \"text\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onConfirm,\n        variant: \"contained\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = ConfirmationDialog;\nConfirmationDialog.defaultProps = {\n  open: false\n};\nConfirmationDialog.propTypes = {\n  message: PropTypes.string.isRequired,\n  onCancel: PropTypes.func,\n  onConfirm: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['error', 'warning', 'info'])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationDialog\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/confirmation-dialog.js"],"names":["PropTypes","Button","Dialog","DialogActions","DialogContent","DialogTitle","Typography","ErrorIcon","WarningIcon","InfoIcon","icons","error","warning","info","ConfirmationDialog","props","message","onCancel","onConfirm","open","title","variant","other","sx","width","alignItems","display","ml","defaultProps","propTypes","string","isRequired","func","bool","oneOf"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography\n} from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst icons = {\n  error: (\n    <ErrorIcon\n      color=\"error\"\n      fontSize=\"large\"\n    />\n  ),\n  warning: (\n    <WarningIcon\n      color=\"warning\"\n      fontSize=\"large\"\n    />\n  ),\n  info: (\n    <InfoIcon\n      color=\"info\"\n      fontSize=\"large\"\n    />\n  )\n};\n\nexport const ConfirmationDialog = (props) => {\n  const { message, onCancel, onConfirm, open, title, variant, ...other } = props;\n\n  return (\n    <Dialog\n      onClose={onCancel}\n      open={open}\n      PaperProps={{\n        sx: {\n          width: '100%'\n        }\n      }}\n      {...other}\n    >\n      <DialogTitle\n        sx={{\n          alignItems: 'center',\n          display: 'flex'\n        }}\n      >\n        {icons[variant]}\n        <Typography\n          color=\"inherit\"\n          sx={{ ml: 2 }}\n          variant=\"inherit\"\n        >\n          {title}\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography\n          color=\"textPrimary\"\n          variant=\"body1\"\n        >\n          {message}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onCancel}\n          variant=\"text\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={onConfirm}\n          variant=\"contained\"\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nConfirmationDialog.defaultProps = {\n  open: false\n};\n\nConfirmationDialog.propTypes = {\n  message: PropTypes.string.isRequired,\n  onCancel: PropTypes.func,\n  onConfirm: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['error', 'warning', 'info'])\n};\n"]},"metadata":{},"sourceType":"module"}