{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/account/account-change-password.js\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Button, Card, CardContent, FormHelperText, Grid, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AccountChangePassword = props => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      newPassword: '',\n      password: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      newPassword: Yup.string().min(7).max(255).required('New password is required'),\n      password: Yup.string().min(7).max(255).required('Old password is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Password changed');\n        helpers.resetForm();\n        helpers.setStatus({\n          success: true\n        });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 5,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"h6\",\n            children: \"Change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 7,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(InputField, {\n                  error: Boolean(formik.touched.password && formik.errors.password),\n                  fullWidth: true,\n                  helperText: formik.touched.password && formik.errors.password,\n                  label: \"Old password\",\n                  name: \"password\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  type: \"password\",\n                  value: formik.values.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(InputField, {\n                  error: Boolean(formik.touched.newPassword && formik.errors.newPassword),\n                  fullWidth: true,\n                  helperText: formik.touched.newPassword && formik.errors.newPassword,\n                  label: \"New password\",\n                  name: \"newPassword\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  type: \"password\",\n                  value: formik.values.newPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: true,\n                  children: formik.errors.submit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  children: \"Change password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountChangePassword, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = AccountChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountChangePassword\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/account/account-change-password.js"],"names":["useFormik","Yup","toast","Button","Card","CardContent","FormHelperText","Grid","Typography","InputField","AccountChangePassword","props","formik","initialValues","newPassword","password","submit","validationSchema","object","shape","string","min","max","required","onSubmit","values","helpers","success","resetForm","setStatus","setSubmitting","err","console","error","setErrors","message","handleSubmit","Boolean","touched","errors","handleBlur","handleChange"],"mappings":"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","sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Button, Card, CardContent, FormHelperText, Grid, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\n\nexport const AccountChangePassword = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      newPassword: '',\n      password: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      newPassword: Yup.string().min(7).max(255).required('New password is required'),\n      password: Yup.string().min(7).max(255).required('Old password is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Password changed');\n        helpers.resetForm();\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      {...props}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n        >\n          <Grid\n            item\n            md={5}\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h6\"\n            >\n              Change password\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={7}\n            xs={12}\n          >\n            <form onSubmit={formik.handleSubmit}>\n              <Grid\n                container\n                spacing={2}\n              >\n                <Grid\n                  item\n                  xs={12}\n                >\n                  <InputField\n                    error={Boolean(formik.touched.password && formik.errors.password)}\n                    fullWidth\n                    helperText={formik.touched.password && formik.errors.password}\n                    label=\"Old password\"\n                    name=\"password\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    type=\"password\"\n                    value={formik.values.password}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                >\n                  <InputField\n                    error={Boolean(formik.touched.newPassword\n                      && formik.errors.newPassword)}\n                    fullWidth\n                    helperText={formik.touched.newPassword && formik.errors.newPassword}\n                    label=\"New password\"\n                    name=\"newPassword\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    type=\"password\"\n                    value={formik.values.newPassword}\n                  />\n                </Grid>\n                {formik.errors.submit && (\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <FormHelperText error>\n                      {formik.errors.submit}\n                    </FormHelperText>\n                  </Grid>\n                )}\n                <Grid\n                  item\n                  xs={12}\n                >\n                  <Button\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Change password\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}