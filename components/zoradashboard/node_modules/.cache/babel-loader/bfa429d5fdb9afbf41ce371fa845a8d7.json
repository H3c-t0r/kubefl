{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/contexts/get-profile-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport PropTypes from 'prop-types';\nimport { profileAPI } from \"../api/profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  loading: true,\n  profile: null\n};\nconst handlers = {\n  GET_PROFILE: (state, action) => {\n    const {\n      profile\n    } = action.payload;\n    return { ...state,\n      profile,\n      loading: false\n    };\n  }\n};\n\nconst reducer = (state, action) => handlers[action.type] ? handlers[action.type](state, action) : state;\n\nexport const ProfileContext = /*#__PURE__*/createContext({ ...initialState,\n  getProfile: () => Promise.resolve()\n});\nexport const ProfileProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    function print() {\n      console.log('here');\n    } // const initialize = async () => {\n    //     try {\n    //         const accessToken = window.localStorage.getItem('accessToken');\n    //         console.log(accessToken)\n    //         if (accessToken){\n    //             const profile = await profileAPI.me(accessToken);\n    //             dispatch({\n    //                 type: 'GET_PROFILE',\n    //                 payload: {\n    //                     loading: false,\n    //                     profile\n    //                 }\n    //             });\n    //         } else {\n    //             dispatch({\n    //                 type: 'GET_PROFILE',\n    //                 payload: {\n    //                     loading: true,\n    //                     profile: null\n    //                 }\n    //             });\n    //         }\n    //     } catch (err) {\n    //         console.error(err);\n    //         dispatch({\n    //             type: 'GET_PROFILE',\n    //             payload: {\n    //                 isAuthenticated: false,\n    //                 user: null\n    //             }\n    //         });\n    //     }\n    // };\n    // initialize();\n\n\n    print();\n  }, []);\n\n  const getProfile = async () => {\n    const accessToken = window.localStorage.getItem('accessToken');\n    console.log(accessToken); // try {\n    //     console.log(\"accessToken\")\n    //     const accessToken = window.localStorage.getItem('accessToken');\n    //     console.log(accessToken)\n    //     if (accessToken){\n    //         console.log(\"before calling func\")\n    //         const profile = await profileAPI.me(accessToken);\n    //         dispatch({\n    //             type: 'GET_PROFILE',\n    //             payload: {\n    //                 loading: false,\n    //                 profile\n    //             }\n    //         });\n    //     } else {\n    //         dispatch({\n    //             type: 'GET_PROFILE',\n    //             payload: {\n    //                 loading: true,\n    //                 profile: null\n    //             }\n    //         });\n    //     }\n    // } catch (err) {\n    //     console.error(err);\n    //     dispatch({\n    //         type: 'GET_PROFILE',\n    //         payload: {\n    //             isAuthenticated: false,\n    //             user: null\n    //         }\n    //     });\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: { ...state,\n      getProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = ProfileProvider;\nProfileProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileProvider\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/contexts/get-profile-context.js"],"names":["createContext","useEffect","useReducer","PropTypes","profileAPI","initialState","loading","profile","handlers","GET_PROFILE","state","action","payload","reducer","type","ProfileContext","getProfile","Promise","resolve","ProfileProvider","props","children","dispatch","print","console","log","accessToken","window","localStorage","getItem","propTypes","node","isRequired"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,UAAM;AAACJ,MAAAA;AAAD,QAAYI,MAAM,CAACC,OAAzB;AACA,WAAO,EACH,GAAGF,KADA;AAEHH,MAAAA,OAFG;AAGHD,MAAAA,OAAO,EAAE;AAHN,KAAP;AAKH;AARY,CAAjB;;AAWA,MAAMO,OAAO,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAoBH,QAAQ,CAACG,MAAM,CAACG,IAAR,CAAR,GAC9BN,QAAQ,CAACG,MAAM,CAACG,IAAR,CAAR,CAAsBJ,KAAtB,EAA6BC,MAA7B,CAD8B,GAE9BD,KAFN;;AAIA,OAAO,MAAMK,cAAc,gBAAGf,aAAa,CAAC,EACxC,GAAGK,YADqC;AAExCW,EAAAA,UAAU,EAAE,MAAMC,OAAO,CAACC,OAAR;AAFsB,CAAD,CAApC;AAKP,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACV,KAAD,EAAQY,QAAR,IAAoBpB,UAAU,CAACW,OAAD,EAAUR,YAAV,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASsB,KAAT,GAAgB;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,KAHW,CAIZ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAF,IAAAA,KAAK;AACR,GAzCQ,EAyCN,EAzCM,CAAT;;AA2CA,QAAMP,UAAU,GAAG,YAAY;AAC3B,UAAMU,WAAW,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAApB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,EAF2B,CAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAtCD;;AAwCA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE,EACH,GAAGhB,KADA;AAEHM,MAAAA;AAFG,KADX;AAAA,cAMKK;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAjGM;;GAAMF,e;;KAAAA,e;AAmGbA,eAAe,CAACW,SAAhB,GAA4B;AACxBT,EAAAA,QAAQ,EAAElB,SAAS,CAAC4B,IAAV,CAAeC;AADD,CAA5B","sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport PropTypes from 'prop-types';\nimport { profileAPI } from \"../api/profile\";\n\nconst initialState = {\n    loading: true,\n    profile: null\n}\n\nconst handlers = {\n    GET_PROFILE: (state, action) => {\n        const {profile} = action.payload;\n        return {\n            ...state,\n            profile,\n            loading: false\n        };\n    }\n};\n\nconst reducer = (state, action) => (handlers[action.type]\n    ? handlers[action.type](state, action)\n    : state);\n\nexport const ProfileContext = createContext({\n    ...initialState,\n    getProfile: () => Promise.resolve()\n});\n\nexport const ProfileProvider = (props) => {\n    const { children } = props;\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {  \n        function print(){\n            console.log('here')\n        }\n        // const initialize = async () => {\n        //     try {\n        //         const accessToken = window.localStorage.getItem('accessToken');\n        //         console.log(accessToken)\n        //         if (accessToken){\n        //             const profile = await profileAPI.me(accessToken);\n\n        //             dispatch({\n        //                 type: 'GET_PROFILE',\n        //                 payload: {\n        //                     loading: false,\n        //                     profile\n        //                 }\n        //             });\n        //         } else {\n        //             dispatch({\n        //                 type: 'GET_PROFILE',\n        //                 payload: {\n        //                     loading: true,\n        //                     profile: null\n        //                 }\n        //             });\n        //         }\n\n        //     } catch (err) {\n        //         console.error(err);\n        //         dispatch({\n        //             type: 'GET_PROFILE',\n        //             payload: {\n        //                 isAuthenticated: false,\n        //                 user: null\n        //             }\n        //         });\n        //     }\n        // };\n        // initialize();\n        print()\n    }, []);\n\n    const getProfile = async () => {\n        const accessToken = window.localStorage.getItem('accessToken');\n        console.log(accessToken)\n        // try {\n        //     console.log(\"accessToken\")\n        //     const accessToken = window.localStorage.getItem('accessToken');\n        //     console.log(accessToken)\n        //     if (accessToken){\n        //         console.log(\"before calling func\")\n        //         const profile = await profileAPI.me(accessToken);\n\n        //         dispatch({\n        //             type: 'GET_PROFILE',\n        //             payload: {\n        //                 loading: false,\n        //                 profile\n        //             }\n        //         });\n        //     } else {\n        //         dispatch({\n        //             type: 'GET_PROFILE',\n        //             payload: {\n        //                 loading: true,\n        //                 profile: null\n        //             }\n        //         });\n        //     }\n\n        // } catch (err) {\n        //     console.error(err);\n        //     dispatch({\n        //         type: 'GET_PROFILE',\n        //         payload: {\n        //             isAuthenticated: false,\n        //             user: null\n        //         }\n        //     });\n        // }\n    };\n\n    return (\n        <ProfileContext.Provider\n            value={{\n                ...state,\n                getProfile\n            }}\n        >\n            {children}\n        </ProfileContext.Provider>\n    );\n};\n\nProfileProvider.propTypes = {\n    children: PropTypes.node.isRequired\n}"]},"metadata":{},"sourceType":"module"}