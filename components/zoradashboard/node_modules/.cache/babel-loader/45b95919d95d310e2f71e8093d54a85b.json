{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/reports/summary-item.js\";\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Avatar, Box, Button, Card, CardActions, Divider, Typography } from '@material-ui/core';\nimport { ArrowRight as ArrowRightIcon } from '../../icons/arrow-right';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SummaryItem = props => {\n  const {\n    content,\n    icon: Icon,\n    iconColor,\n    label,\n    linkHref,\n    linkLabel,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%'\n    },\n    variant: \"outlined\",\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        p: 2\n      },\n      children: [Icon && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          mr: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            backgroundColor: 'primary.main',\n            height: 56,\n            width: 56\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            sx: {\n              color: 'primary.contrastText'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"overline\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"h6\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      sx: {\n        px: 3,\n        py: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        component: RouterLink,\n        endIcon: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this),\n        size: \"small\",\n        to: linkHref,\n        variant: \"text\",\n        children: linkLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = SummaryItem;\nSummaryItem.propTypes = {\n  content: PropTypes.string.isRequired,\n  icon: PropTypes.elementType,\n  iconColor: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  linkHref: PropTypes.string.isRequired,\n  linkLabel: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SummaryItem\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/reports/summary-item.js"],"names":["PropTypes","Link","RouterLink","Avatar","Box","Button","Card","CardActions","Divider","Typography","ArrowRight","ArrowRightIcon","SummaryItem","props","content","icon","Icon","iconColor","label","linkHref","linkLabel","other","height","alignItems","display","p","mr","backgroundColor","width","color","px","py","propTypes","string","isRequired","elementType"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Avatar, Box, Button, Card, CardActions, Divider, Typography } from '@material-ui/core';\nimport { ArrowRight as ArrowRightIcon } from '../../icons/arrow-right';\n\nexport const SummaryItem = (props) => {\n  const { content, icon: Icon, iconColor, label, linkHref, linkLabel, ...other } = props;\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n      variant=\"outlined\"\n      {...other}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          p: 2\n        }}\n      >\n        {Icon && (\n          <Box\n            sx={{\n              display: 'flex',\n              mr: 2\n            }}\n          >\n            <Avatar\n              sx={{\n                backgroundColor: 'primary.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <Icon sx={{ color: 'primary.contrastText' }} />\n            </Avatar>\n          </Box>\n        )}\n        <div>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"overline\"\n          >\n            {label}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h6\"\n          >\n            {content}\n          </Typography>\n        </div>\n      </Box>\n      <Divider />\n      <CardActions\n        sx={{\n          px: 3,\n          py: 1\n        }}\n      >\n        <Button\n          color=\"primary\"\n          component={RouterLink}\n          endIcon={<ArrowRightIcon fontSize=\"small\" />}\n          size=\"small\"\n          to={linkHref}\n          variant=\"text\"\n        >\n          {linkLabel}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nSummaryItem.propTypes = {\n  content: PropTypes.string.isRequired,\n  icon: PropTypes.elementType,\n  iconColor: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  linkHref: PropTypes.string.isRequired,\n  linkLabel: PropTypes.string.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}