{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/password-reset.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Alert, AppBar, Box, Button, Card, CardContent, Container, FormHelperText, Grid, Toolbar, Typography } from '@material-ui/core';\nimport { ProductFeatures } from '../components/auth/product-features';\nimport { InputField } from '../components/input-field';\nimport { Logo } from '../components/logo';\nimport { useSettings } from '../contexts/settings-context';\nimport { useAuth } from '../hooks/use-auth';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PasswordReset = () => {\n  _s();\n\n  var _location$state, _location$state2, _location$state3, _location$state4;\n\n  const mounted = useMounted();\n  const {\n    passwordReset\n  } = useAuth();\n  const {\n    settings\n  } = useSettings();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      code: '',\n      email: ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || '',\n      password: '',\n      passwordConfirm: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      code: Yup.string().max(6).required('Code is required'),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n      passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        await (passwordReset === null || passwordReset === void 0 ? void 0 : passwordReset(values.email, values.code, values.password));\n        navigate('/login');\n      } catch (err) {\n        console.error(err);\n\n        if (mounted.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  const showAlert = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Password Reset | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      elevation: 0,\n      sx: {\n        backgroundColor: 'background.paper'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          sx: {\n            height: 64\n          },\n          children: /*#__PURE__*/_jsxDEV(RouterLink, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Logo, {\n              variant: settings.theme === 'dark' ? 'light' : 'dark'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        pt: '64px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 9\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            sx: {\n              mb: 3\n            },\n            variant: \"filled\",\n            children: \"If this email address was used to create an account, instructions to reset your password will be sent to you.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 6,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              sx: {\n                display: {\n                  md: 'block',\n                  xs: 'none'\n                }\n              },\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(ProductFeatures, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  backgroundColor: 'background.default'\n                },\n                elevation: 0,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: formik.handleSubmit,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        alignItems: 'center',\n                        display: 'flex',\n                        mb: 3\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        color: \"textPrimary\",\n                        variant: \"h4\",\n                        children: \"Reset Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          flexGrow: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        component: RouterLink,\n                        to: \"/login\",\n                        variant: \"text\",\n                        children: \"Sign in\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(InputField, {\n                          autoFocus: true,\n                          disabled: !!((_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.username),\n                          error: Boolean(formik.touched.email && formik.errors.email),\n                          fullWidth: true,\n                          helperText: formik.touched.email && formik.errors.email,\n                          label: \"Email Address\",\n                          name: \"email\",\n                          onBlur: formik.handleBlur,\n                          onChange: formik.handleChange,\n                          type: \"email\",\n                          value: formik.values.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(InputField, {\n                          autoFocus: !!((_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.username),\n                          error: Boolean(formik.touched.code && formik.errors.code),\n                          fullWidth: true,\n                          helperText: formik.touched.code && formik.errors.code,\n                          label: \"Reset code\",\n                          name: \"code\",\n                          onBlur: formik.handleBlur,\n                          onChange: formik.handleChange,\n                          value: formik.values.code\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(InputField, {\n                          error: Boolean(formik.touched.password && formik.errors.password),\n                          fullWidth: true,\n                          helperText: formik.touched.password && formik.errors.password,\n                          label: \"Password\",\n                          name: \"password\",\n                          onBlur: formik.handleBlur,\n                          onChange: formik.handleChange,\n                          type: \"password\",\n                          value: formik.values.password\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(InputField, {\n                          error: Boolean(formik.touched.passwordConfirm && formik.errors.passwordConfirm),\n                          fullWidth: true,\n                          helperText: formik.touched.passwordConfirm && formik.errors.passwordConfirm,\n                          label: \"Password Confirmation\",\n                          name: \"passwordConfirm\",\n                          onBlur: formik.handleBlur,\n                          onChange: formik.handleChange,\n                          type: \"password\",\n                          value: formik.values.passwordConfirm\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 25\n                      }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                          error: true,\n                          children: formik.errors.submit\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 244,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          color: \"primary\",\n                          disabled: formik.isSubmitting,\n                          fullWidth: true,\n                          size: \"large\",\n                          type: \"submit\",\n                          variant: \"contained\",\n                          children: \"Reset password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 253,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PasswordReset, \"cpaZ3KpmSTZLWBNvveDSznunIH8=\", false, function () {\n  return [useMounted, useAuth, useSettings, useLocation, useNavigate, useFormik];\n});\n\n_c = PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/password-reset.js"],"names":["useEffect","Helmet","Link","RouterLink","useLocation","useNavigate","useFormik","Yup","Alert","AppBar","Box","Button","Card","CardContent","Container","FormHelperText","Grid","Toolbar","Typography","ProductFeatures","InputField","Logo","useSettings","useAuth","useMounted","gtm","PasswordReset","mounted","passwordReset","settings","location","navigate","formik","initialValues","code","email","state","username","password","passwordConfirm","submit","validationSchema","object","shape","string","max","required","min","oneOf","ref","onSubmit","values","setErrors","setStatus","setSubmitting","err","console","error","current","success","message","push","event","showAlert","backgroundColor","height","theme","minHeight","pt","py","mb","display","md","xs","handleSubmit","alignItems","flexGrow","Boolean","touched","errors","handleBlur","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Alert,\n  AppBar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  FormHelperText,\n  Grid,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { ProductFeatures } from '../components/auth/product-features';\nimport { InputField } from '../components/input-field';\nimport { Logo } from '../components/logo';\nimport { useSettings } from '../contexts/settings-context';\nimport { useAuth } from '../hooks/use-auth';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\n\nexport const PasswordReset = () => {\n  const mounted = useMounted();\n  const { passwordReset } = useAuth();\n  const { settings } = useSettings();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      code: '',\n      email: location.state?.username || '',\n      password: '',\n      passwordConfirm: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      code: Yup.string().max(6).required('Code is required'),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup\n        .string()\n        .min(7, 'Must be at least 7 characters')\n        .max(255)\n        .required('Required'),\n      passwordConfirm: Yup\n        .string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required')\n    }),\n    onSubmit: async (values, { setErrors, setStatus, setSubmitting }) => {\n      try {\n        await passwordReset?.(values.email, values.code, values.password);\n\n        navigate('/login');\n      } catch (err) {\n        console.error(err);\n        if (mounted.current) {\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const showAlert = location.state?.username;\n\n  return (\n    <>\n      <Helmet>\n        <title>Password Reset | Carpatin Dashboard</title>\n      </Helmet>\n      <AppBar\n        elevation={0}\n        sx={{ backgroundColor: 'background.paper' }}\n      >\n        <Container maxWidth=\"md\">\n          <Toolbar\n            disableGutters\n            sx={{ height: 64 }}\n          >\n            <RouterLink to=\"/\">\n              <Logo variant={settings.theme === 'dark' ? 'light' : 'dark'} />\n            </RouterLink>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          pt: '64px'\n        }}\n      >\n        <Box sx={{ py: 9 }}>\n          <Container maxWidth=\"md\">\n            {showAlert && (\n              <Alert\n                severity=\"success\"\n                sx={{ mb: 3 }}\n                variant=\"filled\"\n              >\n                If this email address was used to create an account,\n                instructions to reset your password will be sent to you.\n              </Alert>\n            )}\n            <Grid\n              container\n              spacing={6}\n            >\n              <Grid\n                item\n                md={6}\n                sx={{\n                  display: {\n                    md: 'block',\n                    xs: 'none'\n                  }\n                }}\n                xs={12}\n              >\n                <ProductFeatures />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Card\n                  sx={{ backgroundColor: 'background.default' }}\n                  elevation={0}\n                >\n                  <CardContent>\n                    <form onSubmit={formik.handleSubmit}>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex',\n                          mb: 3\n                        }}\n                      >\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"h4\"\n                        >\n                          Reset Password\n                        </Typography>\n                        <Box sx={{ flexGrow: 1 }} />\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          to=\"/login\"\n                          variant=\"text\"\n                        >\n                          Sign in\n                        </Button>\n                      </Box>\n                      <Grid\n                        container\n                        spacing={2}\n                      >\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <InputField\n                            autoFocus\n                            disabled={!!location.state?.username}\n                            error={Boolean(formik.touched.email && formik.errors.email)}\n                            fullWidth\n                            helperText={formik.touched.email && formik.errors.email}\n                            label=\"Email Address\"\n                            name=\"email\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            type=\"email\"\n                            value={formik.values.email}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <InputField\n                            autoFocus={!!location.state?.username}\n                            error={Boolean(formik.touched.code && formik.errors.code)}\n                            fullWidth\n                            helperText={formik.touched.code && formik.errors.code}\n                            label=\"Reset code\"\n                            name=\"code\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            value={formik.values.code}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <InputField\n                            error={Boolean(formik.touched.password\n                              && formik.errors.password)}\n                            fullWidth\n                            helperText={formik.touched.password && formik.errors.password}\n                            label=\"Password\"\n                            name=\"password\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            type=\"password\"\n                            value={formik.values.password}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <InputField\n                            error={Boolean(formik.touched.passwordConfirm\n                              && formik.errors.passwordConfirm)}\n                            fullWidth\n                            helperText={formik.touched.passwordConfirm\n                            && formik.errors.passwordConfirm}\n                            label=\"Password Confirmation\"\n                            name=\"passwordConfirm\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            type=\"password\"\n                            value={formik.values.passwordConfirm}\n                          />\n                        </Grid>\n                        {formik.errors.submit && (\n                          <Grid\n                            item\n                            xs={12}\n                          >\n                            <FormHelperText error>\n                              {formik.errors.submit}\n                            </FormHelperText>\n                          </Grid>\n                        )}\n                        <Grid\n                          item\n                          xs={12}\n                        >\n                          <Button\n                            color=\"primary\"\n                            disabled={formik.isSubmitting}\n                            fullWidth\n                            size=\"large\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Reset password\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </form>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Container>\n        </Box>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}