{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/wizard-business.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Button, Card, CardContent, Typography, FormHelperText } from '@material-ui/core';\nimport { Chip as ChipIcon } from '../icons/chip';\nimport { Cloud as CloudIcon } from '../icons/cloud';\nimport { OfficeBuilding as OfficeBuildingIcon } from '../icons/office-building';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst businessOptions = [{\n  content: 'Software as a service (SaaS) is a software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted.',\n  icon: ChipIcon,\n  value: 'Software as a service'\n}, {\n  content: 'Infrastructure as a service (IaaS) is a form of cloud computing that provides virtualized computing resources over the internet.',\n  icon: CloudIcon,\n  value: 'Infrastructure as a Service'\n}, {\n  content: 'Platform as a service (PaaS) is a deployment environment in the cloud, with resources that enable you to deliver cloud-based apps or even enterprise apps.',\n  icon: OfficeBuildingIcon,\n  value: 'Platform as a service'\n}];\nexport const WizardBusiness = props => {\n  _s();\n\n  const {\n    initialBusiness,\n    onNextStep\n  } = props;\n  const [business, setBusiness] = useState(initialBusiness);\n  const [error, setError] = useState(null);\n\n  const handleBusinessTypeChange = value => {\n    setBusiness(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!business) {\n      setError('Please select a business');\n      return;\n    }\n\n    onNextStep({\n      business\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2,\n          py: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          sx: {\n            mb: 0.5\n          },\n          variant: \"h6\",\n          children: \"Step 1. Business type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: \"Our architecture is ready for any type of business, just let us know who are we talking to.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: businessOptions.map(option => {\n          const {\n            content,\n            icon: Icon,\n            value\n          } = option;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => handleBusinessTypeChange(value),\n            sx: {\n              boxShadow: theme => business === value ? `0px 0px 0px 2px ${theme.palette.primary.main}` : `0px 0px 0px 1px ${theme.palette.divider}`,\n              cursor: 'pointer',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                alignItems: 'center',\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                variant: \"rounded\",\n                sx: {\n                  backgroundColor: 'background.default',\n                  borderColor: 'divider',\n                  borderStyle: 'solid',\n                  borderWidth: 1,\n                  mr: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  color: \"primary\",\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textPrimary\",\n                  sx: {\n                    mb: 1\n                  },\n                  variant: \"h6\",\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  variant: \"body1\",\n                  children: content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), Boolean(error) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Next Step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WizardBusiness, \"4Xuieh1+8u9kWh0EUpkAOmuFEfE=\");\n\n_c = WizardBusiness;\nWizardBusiness.propTypes = {\n  initialBusiness: PropTypes.string.isRequired,\n  onNextStep: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"WizardBusiness\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/wizard-business.js"],"names":["useState","PropTypes","Avatar","Box","Button","Card","CardContent","Typography","FormHelperText","Chip","ChipIcon","Cloud","CloudIcon","OfficeBuilding","OfficeBuildingIcon","businessOptions","content","icon","value","WizardBusiness","props","initialBusiness","onNextStep","business","setBusiness","error","setError","handleBusinessTypeChange","handleSubmit","event","preventDefault","mb","py","map","option","Icon","boxShadow","theme","palette","primary","main","divider","cursor","alignItems","display","backgroundColor","borderColor","borderStyle","borderWidth","mr","Boolean","justifyContent","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Typography,\n  FormHelperText\n} from '@material-ui/core';\nimport { Chip as ChipIcon } from '../icons/chip';\nimport { Cloud as CloudIcon } from '../icons/cloud';\nimport { OfficeBuilding as OfficeBuildingIcon } from '../icons/office-building';\n\nconst businessOptions = [\n  {\n    content: 'Software as a service (SaaS) is a software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted.',\n    icon: ChipIcon,\n    value: 'Software as a service'\n  },\n  {\n    content: 'Infrastructure as a service (IaaS) is a form of cloud computing that provides virtualized computing resources over the internet.',\n    icon: CloudIcon,\n    value: 'Infrastructure as a Service'\n  },\n  {\n    content: 'Platform as a service (PaaS) is a deployment environment in the cloud, with resources that enable you to deliver cloud-based apps or even enterprise apps.',\n    icon: OfficeBuildingIcon,\n    value: 'Platform as a service'\n  }\n];\n\nexport const WizardBusiness = (props) => {\n  const { initialBusiness, onNextStep } = props;\n  const [business, setBusiness] = useState(initialBusiness);\n  const [error, setError] = useState(null);\n\n  const handleBusinessTypeChange = (value) => {\n    setBusiness(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!business) {\n      setError('Please select a business');\n      return;\n    }\n\n    onNextStep({ business });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            mb: 2,\n            py: 2\n          }}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 0.5 }}\n            variant=\"h6\"\n          >\n            Step 1. Business type\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            Our architecture is ready for any type of business, just\n            let us know who are we talking to.\n          </Typography>\n        </Box>\n        <Box>\n          {businessOptions.map((option) => {\n            const { content, icon: Icon, value } = option;\n\n            return (\n              <Card\n                onClick={() => handleBusinessTypeChange(value)}\n                key={value}\n                sx={{\n                  boxShadow: (theme) => (business === value\n                    ? `0px 0px 0px 2px ${theme.palette.primary.main}`\n                    : `0px 0px 0px 1px ${theme.palette.divider}`),\n                  cursor: 'pointer',\n                  mb: 2\n                }}\n              >\n                <CardContent\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex'\n                  }}\n                >\n                  <Avatar\n                    variant=\"rounded\"\n                    sx={{\n                      backgroundColor: 'background.default',\n                      borderColor: 'divider',\n                      borderStyle: 'solid',\n                      borderWidth: 1,\n                      mr: 2\n                    }}\n                  >\n                    <Icon\n                      color=\"primary\"\n                      fontSize=\"large\"\n                    />\n                  </Avatar>\n                  <Box>\n                    <Typography\n                      color=\"textPrimary\"\n                      sx={{ mb: 1 }}\n                      variant=\"h6\"\n                    >\n                      {value}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body1\"\n                    >\n                      {content}\n                    </Typography>\n                  </Box>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </Box>\n        {Boolean(error) && (\n          <FormHelperText error>\n            {error}\n          </FormHelperText>\n        )}\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Next Step\n          </Button>\n        </Box>\n      </form>\n    </div>\n  );\n};\n\nWizardBusiness.propTypes = {\n  initialBusiness: PropTypes.string.isRequired,\n  onNextStep: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}