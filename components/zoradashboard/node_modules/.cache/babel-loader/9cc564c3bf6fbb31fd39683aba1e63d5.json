{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/organization-general.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Box, Button, Card, CardContent, FormHelperText, Grid, MenuItem, Typography } from '@material-ui/core';\nimport { InputField } from '../components/input-field';\nimport gtm from '../lib/gtm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst companySizeOptions = ['1', '2-10', '11-30', '31-50', '50+'];\nexport const OrganizationGeneral = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      companyName: 'ACME Corp LLC.',\n      companySize: '2-10',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      companyName: Yup.string().max(255).required('Organization name is required'),\n      companySize: Yup.string().max(255).oneOf(companySizeOptions).required('Size is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Settings saved');\n        helpers.setStatus({\n          success: true\n        });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Organization: General | Carpatin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 5,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"h6\",\n                children: \"Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 7,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formik.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(InputField, {\n                  error: Boolean(formik.touched.companyName && formik.errors.companyName),\n                  fullWidth: true,\n                  helperText: formik.touched.companyName && formik.errors.companyName,\n                  label: \"Organization name\",\n                  name: \"companyName\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.companyName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputField, {\n                  error: Boolean(formik.touched.companySize && formik.errors.companySize),\n                  fullWidth: true,\n                  helperText: formik.touched.companySize && formik.errors.companySize,\n                  label: \"Company size\",\n                  name: \"companySize\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  select: true,\n                  sx: {\n                    mt: 2\n                  },\n                  value: formik.values.companySize,\n                  children: companySizeOptions.map(companySizeOption => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: companySizeOption,\n                    children: companySizeOption\n                  }, companySizeOption, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: true,\n                  sx: {\n                    mt: 2\n                  },\n                  children: formik.errors.submit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  disabled: formik.isSubmitting,\n                  size: \"large\",\n                  sx: {\n                    mt: 4\n                  },\n                  type: \"submit\",\n                  variant: \"contained\",\n                  children: \"Save settings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrganizationGeneral, \"417qbkehI1A4yl4DsCLGX2CxmUo=\", false, function () {\n  return [useFormik];\n});\n\n_c = OrganizationGeneral;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationGeneral\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/containers/organization-general.js"],"names":["useEffect","Helmet","useFormik","Yup","toast","Box","Button","Card","CardContent","FormHelperText","Grid","MenuItem","Typography","InputField","gtm","companySizeOptions","OrganizationGeneral","formik","initialValues","companyName","companySize","submit","validationSchema","object","shape","string","max","required","oneOf","onSubmit","values","helpers","success","setStatus","setSubmitting","err","console","error","setErrors","message","push","event","backgroundColor","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","mt","map","companySizeOption","isSubmitting"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport { InputField } from '../components/input-field';\nimport gtm from '../lib/gtm';\n\nconst companySizeOptions = ['1', '2-10', '11-30', '31-50', '50+'];\n\nexport const OrganizationGeneral = () => {\n  const formik = useFormik({\n    initialValues: {\n      companyName: 'ACME Corp LLC.',\n      companySize: '2-10',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      companyName: Yup.string().max(255).required('Organization name is required'),\n      companySize: Yup\n        .string()\n        .max(255)\n        .oneOf(companySizeOptions)\n        .required('Size is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Settings saved');\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Organization: General | Carpatin Dashboard</title>\n      </Helmet>\n      <Box sx={{ backgroundColor: 'background.default' }}>\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Grid\n              container\n              spacing={4}\n            >\n              <Grid\n                item\n                md={5}\n                xs={12}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h6\"\n                >\n                  Settings\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                md={7}\n                xs={12}\n              >\n                <form onSubmit={formik.handleSubmit}>\n                  <InputField\n                    error={Boolean(formik.touched.companyName\n                      && formik.errors.companyName)}\n                    fullWidth\n                    helperText={formik.touched.companyName && formik.errors.companyName}\n                    label=\"Organization name\"\n                    name=\"companyName\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.companyName}\n                  />\n                  <InputField\n                    error={Boolean(formik.touched.companySize\n                      && formik.errors.companySize)}\n                    fullWidth\n                    helperText={formik.touched.companySize && formik.errors.companySize}\n                    label=\"Company size\"\n                    name=\"companySize\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    select\n                    sx={{ mt: 2 }}\n                    value={formik.values.companySize}\n                  >\n                    {companySizeOptions.map((companySizeOption) => (\n                      <MenuItem\n                        key={companySizeOption}\n                        value={companySizeOption}\n                      >\n                        {companySizeOption}\n                      </MenuItem>\n                    ))}\n                  </InputField>\n                  {formik.errors.submit && (\n                    <FormHelperText\n                      error\n                      sx={{ mt: 2 }}\n                    >\n                      {formik.errors.submit}\n                    </FormHelperText>\n                  )}\n                  <Button\n                    color=\"primary\"\n                    disabled={formik.isSubmitting}\n                    size=\"large\"\n                    sx={{ mt: 4 }}\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Save settings\n                  </Button>\n                </form>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}