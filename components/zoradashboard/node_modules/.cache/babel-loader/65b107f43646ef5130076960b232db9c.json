{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/auth/login-jwt.js\",\n    _s = $RefreshSig$();\n\nimport { Link as BrowserLink } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Alert, Box, Button, FormHelperText, Grid, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport { useAuth } from '../../hooks/use-auth';\nimport { useMounted } from '../../hooks/use-mounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginJwt = () => {\n  _s();\n\n  const mounted = useMounted();\n  const {\n    login\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().max(255).required('Password is required'),\n      policy: Yup.boolean()\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await login(values.email, values.password);\n\n        if (mounted.current) {\n          helpers.setStatus({\n            success: true\n          });\n          helpers.setSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (mounted.current) {\n          helpers.setStatus({\n            success: false\n          });\n          helpers.setErrors({\n            submit: err.message\n          });\n          helpers.setSubmitting(false);\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        variant: \"h4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        component: BrowserLink,\n        to: \"/register\",\n        variant: \"text\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          autoFocus: true,\n          error: Boolean(formik.touched.email && formik.errors.email),\n          fullWidth: true,\n          helperText: formik.touched.email && formik.errors.email,\n          label: \"Email address\",\n          name: \"email\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          type: \"email\",\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          error: Boolean(formik.touched.password && formik.errors.password),\n          fullWidth: true,\n          helperText: formik.touched.password && formik.errors.password,\n          label: \"Password\",\n          name: \"password\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          type: \"password\",\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: formik.errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: formik.isSubmitting,\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          component: BrowserLink,\n          to: \"/password-recovery\",\n          variant: \"text\",\n          children: \"Forgot password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginJwt, \"EKZhFQ++vv6kRud0miEQOKtTkyU=\", false, function () {\n  return [useMounted, useAuth, useFormik];\n});\n\n_c = LoginJwt;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginJwt\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/auth/login-jwt.js"],"names":["Link","BrowserLink","useFormik","Yup","Alert","Box","Button","FormHelperText","Grid","Typography","InputField","useAuth","useMounted","LoginJwt","mounted","login","formik","initialValues","username","password","submit","validationSchema","object","shape","email","string","max","required","policy","boolean","onSubmit","values","helpers","current","setStatus","success","setSubmitting","err","console","error","setErrors","message","handleSubmit","alignItems","display","mb","flexGrow","Boolean","touched","errors","handleBlur","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["import { Link as BrowserLink } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Alert, Box, Button, FormHelperText, Grid, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\nimport { useAuth } from '../../hooks/use-auth';\nimport { useMounted } from '../../hooks/use-mounted';\n\nexport const LoginJwt = () => {\n  const mounted = useMounted();\n  const { login } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      \n      password: Yup.string().max(255).required('Password is required'),\n      policy: Yup.boolean()\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await login(values.email, values.password);\n\n        if (mounted.current) {\n          helpers.setStatus({ success: true });\n          helpers.setSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n        if (mounted.current) {\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          mb: 3\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h4\"\n        >\n          Login\n        </Typography>\n        <Box sx={{ flexGrow: 1 }} />\n        <Button\n          color=\"primary\"\n          component={BrowserLink}\n          to=\"/register\"\n          variant=\"text\"\n        >\n          Sign Up\n        </Button>\n      </Box>\n      <Grid\n        container\n        spacing={2}\n      >\n        <Grid\n          item\n          xs={12}\n        >\n          <InputField\n            autoFocus\n            error={Boolean(formik.touched.email && formik.errors.email)}\n            fullWidth\n            helperText={formik.touched.email && formik.errors.email}\n            label=\"Email address\"\n            name=\"email\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"email\"\n            value={formik.values.email}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n        >\n          <InputField\n            error={Boolean(formik.touched.password && formik.errors.password)}\n            fullWidth\n            helperText={formik.touched.password && formik.errors.password}\n            label=\"Password\"\n            name=\"password\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"password\"\n            value={formik.values.password}\n          />\n        </Grid>\n        {formik.errors.submit && (\n          <Grid\n            item\n            xs={12}\n          >\n            <FormHelperText error>\n              {formik.errors.submit}\n            </FormHelperText>\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n        >\n          <Button\n            color=\"primary\"\n            disabled={formik.isSubmitting}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Log In\n          </Button>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n        >\n          <Button\n            color=\"primary\"\n            component={BrowserLink}\n            to=\"/password-recovery\"\n            variant=\"text\"\n          >\n            Forgot password\n          </Button>\n        </Grid>\n      </Grid>\n      {/* <Alert\n        severity=\"info\"\n        sx={{ mt: 3 }}\n      >\n        You can use\n        &nbsp;\n        <strong>demo@devias.io</strong>\n        &nbsp;\n        and password\n        &nbsp;\n        <strong>Password123!</strong>\n      </Alert> */}\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}