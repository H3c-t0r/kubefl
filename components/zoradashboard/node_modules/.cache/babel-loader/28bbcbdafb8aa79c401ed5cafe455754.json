{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/customer/customer-notes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Typography } from '@material-ui/core';\nimport { generateResourceId } from '../../utils/generate-resource-id';\nimport { CustomerNote } from './customer-note';\nimport { CustomerNoteAdd } from './customer-note-add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CustomerNotes = props => {\n  _s();\n\n  const {\n    notes: notesProp,\n    ...other\n  } = props;\n  const [notes, setNotes] = useState(notesProp || []);\n\n  const handleNoteSend = content => {\n    setNotes(prevNotes => [{\n      id: generateResourceId(),\n      senderId: '1',\n      senderName: 'Chen Simmons',\n      senderAvatar: '/static/user-chen_simmons.png',\n      content,\n      createdAt: new Date()\n    }, ...prevNotes]);\n  };\n\n  const handleNoteDelete = noteId => {\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n  };\n\n  useEffect(() => {\n    setNotes(notesProp);\n  }, [notesProp]);\n  return /*#__PURE__*/_jsxDEV(Box, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textPrimary\",\n      variant: \"h6\",\n      sx: {\n        mb: 3\n      },\n      children: \"Team Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'grid',\n        gap: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomerNoteAdd, {\n        onSend: handleNoteSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), notes.map(note => /*#__PURE__*/_jsxDEV(CustomerNote, {\n        content: note.content,\n        createdAt: note.createdAt,\n        deletable: note.senderId === '1' // NOTE: ID 1 is the logged in user\n        ,\n        id: note.id,\n        onDelete: handleNoteDelete,\n        senderAvatar: note.senderAvatar,\n        senderName: note.senderName\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerNotes, \"wzrXU3ewxr3OcXwpjdccld8BuCI=\");\n\n_c = CustomerNotes;\nCustomerNotes.defaultProps = {\n  notes: []\n};\nCustomerNotes.propTypes = {\n  notes: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerNotes\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/customer/customer-notes.js"],"names":["useEffect","useState","PropTypes","Box","Typography","generateResourceId","CustomerNote","CustomerNoteAdd","CustomerNotes","props","notes","notesProp","other","setNotes","handleNoteSend","content","prevNotes","id","senderId","senderName","senderAvatar","createdAt","Date","handleNoteDelete","noteId","filter","note","mb","display","gap","map","defaultProps","propTypes","array"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM;AAAEC,IAAAA,KAAK,EAAEC,SAAT;AAAoB,OAAGC;AAAvB,MAAiCH,KAAvC;AACA,QAAM,CAACC,KAAD,EAAQG,QAAR,IAAoBZ,QAAQ,CAACU,SAAS,IAAI,EAAd,CAAlC;;AAEA,QAAMG,cAAc,GAAIC,OAAD,IAAa;AAClCF,IAAAA,QAAQ,CAAEG,SAAD,IAAe,CACtB;AACEC,MAAAA,EAAE,EAAEZ,kBAAkB,EADxB;AAEEa,MAAAA,QAAQ,EAAE,GAFZ;AAGEC,MAAAA,UAAU,EAAE,cAHd;AAIEC,MAAAA,YAAY,EAAE,+BAJhB;AAKEL,MAAAA,OALF;AAMEM,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AANb,KADsB,EAStB,GAAGN,SATmB,CAAhB,CAAR;AAWD,GAZD;;AAcA,QAAMO,gBAAgB,GAAIC,MAAD,IAAY;AACnCX,IAAAA,QAAQ,CAAEG,SAAD,IAAeA,SAAS,CAACS,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYO,MAAvC,CAAhB,CAAR;AACD,GAFD;;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACF,SAAD,CAAR;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,sBACE,QAAC,GAAD,OAASC,KAAT;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,OAAO,EAAC,IAFV;AAGE,MAAA,EAAE,EAAE;AAAEe,QAAAA,EAAE,EAAE;AAAN,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,GAAG,EAAE;AAFH,OADN;AAAA,8BAME,QAAC,eAAD;AAAiB,QAAA,MAAM,EAAEf;AAAzB;AAAA;AAAA;AAAA;AAAA,cANF,EAOGJ,KAAK,CAACoB,GAAN,CAAWJ,IAAD,iBACT,QAAC,YAAD;AACE,QAAA,OAAO,EAAEA,IAAI,CAACX,OADhB;AAEE,QAAA,SAAS,EAAEW,IAAI,CAACL,SAFlB;AAGE,QAAA,SAAS,EAAEK,IAAI,CAACR,QAAL,KAAkB,GAH/B,CAGoC;AAHpC;AAIE,QAAA,EAAE,EAAEQ,IAAI,CAACT,EAJX;AAME,QAAA,QAAQ,EAAEM,gBANZ;AAOE,QAAA,YAAY,EAAEG,IAAI,CAACN,YAPrB;AAQE,QAAA,UAAU,EAAEM,IAAI,CAACP;AARnB,SAKOO,IAAI,CAACT,EALZ;AAAA;AAAA;AAAA;AAAA,cADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAzDM;;GAAMT,a;;KAAAA,a;AA2DbA,aAAa,CAACuB,YAAd,GAA6B;AAC3BrB,EAAAA,KAAK,EAAE;AADoB,CAA7B;AAIAF,aAAa,CAACwB,SAAd,GAA0B;AACxBtB,EAAAA,KAAK,EAAER,SAAS,CAAC+B;AADO,CAA1B","sourcesContent":["import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Typography } from '@material-ui/core';\nimport { generateResourceId } from '../../utils/generate-resource-id';\nimport { CustomerNote } from './customer-note';\nimport { CustomerNoteAdd } from './customer-note-add';\n\nexport const CustomerNotes = (props) => {\n  const { notes: notesProp, ...other } = props;\n  const [notes, setNotes] = useState(notesProp || []);\n\n  const handleNoteSend = (content) => {\n    setNotes((prevNotes) => [\n      {\n        id: generateResourceId(),\n        senderId: '1',\n        senderName: 'Chen Simmons',\n        senderAvatar: '/static/user-chen_simmons.png',\n        content,\n        createdAt: new Date()\n      },\n      ...prevNotes\n    ]);\n  };\n\n  const handleNoteDelete = (noteId) => {\n    setNotes((prevNotes) => prevNotes.filter((note) => note.id !== noteId));\n  };\n\n  useEffect(() => {\n    setNotes(notesProp);\n  }, [notesProp]);\n\n  return (\n    <Box {...other}>\n      <Typography\n        color=\"textPrimary\"\n        variant=\"h6\"\n        sx={{ mb: 3 }}\n      >\n        Team Notes\n      </Typography>\n      <Box\n        sx={{\n          display: 'grid',\n          gap: 3\n        }}\n      >\n        <CustomerNoteAdd onSend={handleNoteSend} />\n        {notes.map((note) => (\n          <CustomerNote\n            content={note.content}\n            createdAt={note.createdAt}\n            deletable={note.senderId === '1'} // NOTE: ID 1 is the logged in user\n            id={note.id}\n            key={note.id}\n            onDelete={handleNoteDelete}\n            senderAvatar={note.senderAvatar}\n            senderName={note.senderName}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nCustomerNotes.defaultProps = {\n  notes: []\n};\n\nCustomerNotes.propTypes = {\n  notes: PropTypes.array\n};\n"]},"metadata":{},"sourceType":"module"}