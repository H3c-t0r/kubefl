{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/products-summary.js\";\nimport { Box, Card, Grid, Typography } from '@material-ui/core';\nimport { Cash as CashIcon } from '../../icons/cash';\nimport { CheckCircle as CheckCircleIcon } from '../../icons/check-circle';\nimport { ShoppingCart as ShoppingCartIcon } from '../../icons/shopping-cart';\nimport { XCircle as XCircleIcon } from '../../icons/x-circle'; // NOTE: This should be generated based on products data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stats = [{\n  content: '5,000',\n  icon: CheckCircleIcon,\n  iconColor: 'success.main',\n  label: 'Total Stock'\n}, {\n  content: '15',\n  icon: XCircleIcon,\n  iconColor: 'warning.main',\n  label: 'OUT OF STOCK ITEMS'\n}, {\n  content: '$ 25,200.00',\n  icon: CashIcon,\n  iconColor: 'primary.main',\n  label: 'Retail Value'\n}, {\n  content: '$ 8,250.00',\n  icon: ShoppingCartIcon,\n  iconColor: 'secondary.main',\n  label: 'Unrealized Profit'\n}];\nexport const ProductsSummary = () => /*#__PURE__*/_jsxDEV(Card, {\n  sx: {\n    mb: 3\n  },\n  variant: \"outlined\",\n  children: /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: stats.map((item, index) => {\n      const {\n        icon: Icon,\n        iconColor,\n        content,\n        label\n      } = item;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        sm: 6,\n        sx: {\n          borderBottom: theme => ({\n            md: 0,\n            sm: stats.length > index + 2 ? `1px solid ${theme.palette.divider}` : 0,\n            xs: stats.length > index + 1 ? `1px solid ${theme.palette.divider}` : 0\n          }),\n          borderRight: theme => ({\n            md: stats.length > index + 1 ? `1px solid ${theme.palette.divider}` : 0,\n            xs: 0\n          })\n        },\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            borderRadius: 1,\n            display: 'flex',\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            sx: {\n              color: iconColor || 'text.secondary'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              ml: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"overline\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              variant: \"h6\",\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, item.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\n_c = ProductsSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsSummary\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/product/products-summary.js"],"names":["Box","Card","Grid","Typography","Cash","CashIcon","CheckCircle","CheckCircleIcon","ShoppingCart","ShoppingCartIcon","XCircle","XCircleIcon","stats","content","icon","iconColor","label","ProductsSummary","mb","map","item","index","Icon","borderBottom","theme","md","sm","length","palette","divider","xs","borderRight","alignItems","borderRadius","display","p","color","ml"],"mappings":"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","sourcesContent":["import { Box, Card, Grid, Typography } from '@material-ui/core';\nimport { Cash as CashIcon } from '../../icons/cash';\nimport { CheckCircle as CheckCircleIcon } from '../../icons/check-circle';\nimport { ShoppingCart as ShoppingCartIcon } from '../../icons/shopping-cart';\nimport { XCircle as XCircleIcon } from '../../icons/x-circle';\n\n// NOTE: This should be generated based on products data\nconst stats = [\n  {\n    content: '5,000',\n    icon: CheckCircleIcon,\n    iconColor: 'success.main',\n    label: 'Total Stock'\n  },\n  {\n    content: '15',\n    icon: XCircleIcon,\n    iconColor: 'warning.main',\n    label: 'OUT OF STOCK ITEMS'\n  },\n  {\n    content: '$ 25,200.00',\n    icon: CashIcon,\n    iconColor: 'primary.main',\n    label: 'Retail Value'\n  },\n  {\n    content: '$ 8,250.00',\n    icon: ShoppingCartIcon,\n    iconColor: 'secondary.main',\n    label: 'Unrealized Profit'\n  }\n];\n\nexport const ProductsSummary = () => (\n  <Card\n    sx={{ mb: 3 }}\n    variant=\"outlined\"\n  >\n    <Grid container>\n      {stats.map((item, index) => {\n        const { icon: Icon, iconColor, content, label } = item;\n\n        return (\n          <Grid\n            item\n            key={item.label}\n            md={3}\n            sm={6}\n            sx={{\n              borderBottom: (theme) => ({\n                md: 0,\n                sm: stats.length > index + 2 ? `1px solid ${theme.palette.divider}` : 0,\n                xs: stats.length > index + 1 ? `1px solid ${theme.palette.divider}` : 0\n              }),\n              borderRight: (theme) => ({\n                md: stats.length > index + 1 ? `1px solid ${theme.palette.divider}` : 0,\n                xs: 0\n              })\n            }}\n            xs={12}\n          >\n            <Box\n              sx={{\n                alignItems: 'center',\n                borderRadius: 1,\n                display: 'flex',\n                p: 2\n              }}\n            >\n              <Icon sx={{ color: iconColor || 'text.secondary' }} />\n              <Box sx={{ ml: 2 }}>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"overline\"\n                >\n                  {label}\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h6\"\n                >\n                  {content}\n                </Typography>\n              </Box>\n            </Box>\n          </Grid>\n        );\n      })}\n    </Grid>\n  </Card>\n);\n"]},"metadata":{},"sourceType":"module"}