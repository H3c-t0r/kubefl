{"ast":null,"code":"var _jsxFileName = \"/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/images-uploader.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Avatar, Box, Button, Card, CardContent, IconButton, Typography } from '@material-ui/core';\nimport { useDialog } from '../hooks/use-dialog';\nimport { ImagesUploaderDialog } from './images-uploader-dialog';\nimport { Upload as UploadIcon } from '../icons/upload';\nimport { Trash as TrashIcon } from '../icons/trash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ImagesUploader = () => {\n  _s();\n\n  const [uploadDialogOpen, handleOpenUploadDialog, handleCloseUploadDialog] = useDialog();\n  const [selectedImages, setSelectedImages] = useState(['/static/product-09.png', '/static/product-10.png']);\n\n  const handleDeleteImage = image => {\n    setSelectedImages(prevSelectedImages => prevSelectedImages.filter(selectedImage => selectedImage !== image));\n  };\n\n  const handleSaveImages = newSelectedImage => {\n    setSelectedImages(newSelectedImage);\n    handleCloseUploadDialog();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          sx: {\n            mb: 1.25\n          },\n          variant: \"subtitle2\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gap: 2,\n            gridTemplateColumns: !selectedImages.length ? '1fr' : {\n              md: 'repeat(auto-fill, 140px)',\n              sm: 'repeat(4, 1fr)',\n              xs: 'repeat(2, 1fr)'\n            },\n            '& img': {\n              borderRadius: 1,\n              maxWidth: '100%'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            onClick: handleOpenUploadDialog,\n            sx: {\n              alignItems: 'center',\n              borderColor: 'neutral.200',\n              borderRadius: 1,\n              borderStyle: 'dashed',\n              borderWidth: 1,\n              cursor: 'pointer',\n              display: 'flex',\n              flexDirection: 'column',\n              flexWrap: 'wrap',\n              height: '100%',\n              minHeight: 140,\n              justifyContent: 'center',\n              outline: 'none',\n              py: 2,\n              '&:hover': {\n                backgroundColor: 'action.hover',\n                borderColor: 'primary.main'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                backgroundColor: 'rgba(238, 240, 242, 1)',\n                color: 'text.secondary',\n                height: 36,\n                width: 36\n              },\n              children: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"text\",\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              sx: {\n                color: 'text.secondary'\n              },\n              variant: \"caption\",\n              children: \"Select images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), selectedImages.map(image => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                alignItems: 'center',\n                borderRadius: 1,\n                display: 'flex',\n                justifyContent: 'center',\n                width: '100%',\n                height: '100%',\n                position: 'relative',\n                '&::before': {\n                  backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                  borderRadius: 1,\n                  bottom: 0,\n                  content: '\"\"',\n                  display: 'none',\n                  left: 0,\n                  position: 'absolute',\n                  right: 0,\n                  top: 0\n                },\n                '&:hover': {\n                  boxShadow: theme => `0px 0px 0px 1px ${theme.palette.primary.main}`,\n                  '&::before': {\n                    display: 'block'\n                  },\n                  '& button': {\n                    display: 'inline-flex'\n                  }\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                onClick: () => handleDeleteImage(image),\n                sx: {\n                  bottom: 8,\n                  color: 'text.secondary',\n                  display: 'none',\n                  position: 'absolute',\n                  right: 8\n                },\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, image, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagesUploaderDialog, {\n      onCancel: handleCloseUploadDialog,\n      onSaveImages: handleSaveImages,\n      open: uploadDialogOpen,\n      selectedImages: selectedImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImagesUploader, \"HP+wSzQ9dx0yoHElHJX2WGDrUDA=\", false, function () {\n  return [useDialog];\n});\n\n_c = ImagesUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesUploader\");","map":{"version":3,"sources":["/Users/allan.chepkoy/cloud/kubeflow/components/zoradashboard/src/components/images-uploader.js"],"names":["useState","Avatar","Box","Button","Card","CardContent","IconButton","Typography","useDialog","ImagesUploaderDialog","Upload","UploadIcon","Trash","TrashIcon","ImagesUploader","uploadDialogOpen","handleOpenUploadDialog","handleCloseUploadDialog","selectedImages","setSelectedImages","handleDeleteImage","image","prevSelectedImages","filter","selectedImage","handleSaveImages","newSelectedImage","mb","display","gap","gridTemplateColumns","length","md","sm","xs","borderRadius","maxWidth","alignItems","borderColor","borderStyle","borderWidth","cursor","flexDirection","flexWrap","height","minHeight","justifyContent","outline","py","backgroundColor","color","width","map","position","bottom","content","left","right","top","boxShadow","theme","palette","primary","main"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Avatar, Box, Button, Card, CardContent, IconButton, Typography } from '@material-ui/core';\nimport { useDialog } from '../hooks/use-dialog';\nimport { ImagesUploaderDialog } from './images-uploader-dialog';\nimport { Upload as UploadIcon } from '../icons/upload';\nimport { Trash as TrashIcon } from '../icons/trash';\n\nexport const ImagesUploader = () => {\n  const [uploadDialogOpen, handleOpenUploadDialog, handleCloseUploadDialog] = useDialog();\n  const [selectedImages, setSelectedImages] = useState([\n    '/static/product-09.png',\n    '/static/product-10.png'\n  ]);\n\n  const handleDeleteImage = (image) => {\n    setSelectedImages((prevSelectedImages) => prevSelectedImages\n      .filter((selectedImage) => selectedImage !== image));\n  };\n\n  const handleSaveImages = (newSelectedImage) => {\n    setSelectedImages(newSelectedImage);\n    handleCloseUploadDialog();\n  };\n\n  return (\n    <>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1.25 }}\n            variant=\"subtitle2\"\n          >\n            Image\n          </Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              gap: 2,\n              gridTemplateColumns: !selectedImages.length ? '1fr' : ({\n                md: 'repeat(auto-fill, 140px)',\n                sm: 'repeat(4, 1fr)',\n                xs: 'repeat(2, 1fr)'\n              }),\n              '& img': {\n                borderRadius: 1,\n                maxWidth: '100%'\n              }\n            }}\n          >\n            <Box\n              onClick={handleOpenUploadDialog}\n              sx={{\n                alignItems: 'center',\n                borderColor: 'neutral.200',\n                borderRadius: 1,\n                borderStyle: 'dashed',\n                borderWidth: 1,\n                cursor: 'pointer',\n                display: 'flex',\n                flexDirection: 'column',\n                flexWrap: 'wrap',\n                height: '100%',\n                minHeight: 140,\n                justifyContent: 'center',\n                outline: 'none',\n                py: 2,\n                '&:hover': {\n                  backgroundColor: 'action.hover',\n                  borderColor: 'primary.main'\n                }\n              }}\n            >\n              <Avatar\n                sx={{\n                  backgroundColor: 'rgba(238, 240, 242, 1)',\n                  color: 'text.secondary',\n                  height: 36,\n                  width: 36\n                }}\n              >\n                <UploadIcon />\n              </Avatar>\n              <Button\n                color=\"primary\"\n                variant=\"text\"\n              >\n                Upload\n              </Button>\n              <Typography\n                align=\"center\"\n                sx={{ color: 'text.secondary' }}\n                variant=\"caption\"\n              >\n                Select images\n              </Typography>\n            </Box>\n            {selectedImages.map((image) => (\n              <Box\n                key={image}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              >\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    borderRadius: 1,\n                    display: 'flex',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    position: 'relative',\n                    '&::before': {\n                      backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                      borderRadius: 1,\n                      bottom: 0,\n                      content: '\"\"',\n                      display: 'none',\n                      left: 0,\n                      position: 'absolute',\n                      right: 0,\n                      top: 0\n                    },\n                    '&:hover': {\n                      boxShadow: (theme) => `0px 0px 0px 1px ${theme.palette.primary.main}`,\n                      '&::before': {\n                        display: 'block'\n                      },\n                      '& button': {\n                        display: 'inline-flex'\n                      }\n                    }\n                  }}\n                >\n                  <img\n                    alt=\"\"\n                    src={image}\n                  />\n                  <IconButton\n                    color=\"primary\"\n                    onClick={() => handleDeleteImage(image)}\n                    sx={{\n                      bottom: 8,\n                      color: 'text.secondary',\n                      display: 'none',\n                      position: 'absolute',\n                      right: 8\n                    }}\n                  >\n                    <TrashIcon />\n                  </IconButton>\n                </Box>\n              </Box>\n            ))}\n          </Box>\n        </CardContent>\n      </Card>\n      <ImagesUploaderDialog\n        onCancel={handleCloseUploadDialog}\n        onSaveImages={handleSaveImages}\n        open={uploadDialogOpen}\n        selectedImages={selectedImages}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}