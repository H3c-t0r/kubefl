---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-push
  namespace: kubeflow-test-infra
spec:
  inputs:
    params:
    - description: The path to the dockerfile to build
      name: pathToDockerfile
      type: string
    - description: The build context used by Kaniko
      name: pathToContext
      type: string
    - description: docker target arg
      name: dockerTarget
      type: string
    resources:
    - name: kubeflow
      type: git
  outputs:
    resources:
    - name: kubeflow
      type: git
    - name: centraldashboard
      outputImageDir: /kubeflow
      type: image
  steps:
  - command:
    - /kaniko/executor
    args:
    - --dockerfile=/workspace/${inputs.resources.kubeflow.name}/${inputs.params.pathToDockerfile}
    - --destination=${outputs.resources.centraldashboard.url}
    - --context=/workspace/${inputs.resources.kubeflow.name}/${inputs.params.pathToContext}
    - --target=${inputs.params.dockerTarget}
    - --digest-file=/kubeflow/centraldashboard-digest
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secret/gcp-credentials.json
    image: gcr.io/kaniko-project/executor:v0.11.0
    name: build-push
    volumeMounts:
    - mountPath: /secret
      name: gcp-credentials
    - mountPath: /kubeflow
      name: kubeflow
  volumes:
  - name: gcp-credentials
    secret:
      secretName: gcp-credentials
  - name: kubeflow
    persistentVolumeClaim:
      claimName: ci-pipeline-run-persistent-volume-claim
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: update-manifests
  namespace: kubeflow-test-infra
spec:
  inputs:
    params:
    - description: name of the image to push
      name: imageName
      type: string
    - description: Where the components manifest dir is
      name: pathToManifestsDir
      type: string
    - description: pod container image
      name: containerImage
      type: string
    - description: pull request repo
      name: pullRequestRepo
      type: string
    - description: pull request id
      name: pullRequestId
      type: string
    resources:
    - name: manifests
      type: git
    - name: kubeflow
      type: git
    - name: centraldashboard
      type: image
    - name: kubeflow-4112
      type: pullRequest
  outputs:
    resources:
    - name: manifests
      type: git
  steps:
  - command:
    - /workspace/${inputs.resources.kubeflow.name}/py/kubeflow/kubeflow/ci/rebuild-manifests.sh
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secret/gcp-credentials.json
    - name: image_name
      value: ${inputs.params.imageName}
    - name: pull_request_repo
      value: ${inputs.params.pullRequestRepo}
    - name: pull_request_id
      value: ${inputs.params.pullRequestId}
    image: ${inputs.params.containerImage}
    name: update-manifests
    volumeMounts:
    - mountPath: /secret
      name: gcp-credentials
    - mountPath: /kubeflow
      name: kubeflow
    workingDir: /workspace/${inputs.resources.manifests.name}/${inputs.params.pathToManifestsDir}
  volumes:
  - name: gcp-credentials
    secret:
      secretName: gcp-credentials
  - name: kubeflow
    persistentVolumeClaim:
      claimName: ci-pipeline-run-persistent-volume-claim
---
