apiVersion: v1
data:
  container_image: gcr.io/kubeflow-ci/test-worker:latest
  docker_target: serve
  image_name: centraldashboard
  namespace: kubeflow-ci
  path_to_context: components/centraldashboard
  path_to_docker_file: components/centraldashboard/Dockerfile
  path_to_manifests_dir: common/centraldashboard/base
  pull_request_id: "4091"
  pull_request_repo: kubeflow
kind: ConfigMap
metadata:
  annotations: {}
  labels: {}
  name: ci-pipeline-parameters
  namespace: kubeflow-ci
---
apiVersion: v1
data:
  rebuild-manifests.sh: "#!/usr/bin/env bash\n# get branch name of kubeflow PR\nif
    [[ -f /workspace/${pull_request_repo}-${pull_request_id}/pr.json ]]; then\n  pushd
    /workspace/${pull_request_repo}-${pull_request_id}\n  kubeflow_forked_repo=$(cat
    pr.json | jq .Head.Repo? | xargs)\n  kubeflow_forked_branch=$(cat pr.json | jq
    .Head.Branch? | xargs)\n  kubeflow_forked_commit=$(cat pr.json | jq .Head.SHA?
    | xargs)\n  new_branch_name=$(echo ${kubeflow_forked_branch}-image-update | xargs)\n
    \ user=$(cat github/pr.json | jq .user.login | xargs)\n  popd\n  git config --global
    user.name $user\n  git config --global user.email 'kubeflow@kubeflow.org'\n  kubectl
    get secret github-secret -ojson | jq ' . | .data[\"ssh-publickey\"]' | xargs |
    base64 -d > ~/.ssh/id_rsa.pub\n  cp ~/.ssh/id_github-secret ~/.ssh/id_rsa\n  chmod
    0600 ~/.ssh/id_rsa\n  chmod 0600 ~/.ssh/id_rsa.pub\n  ssh-keyscan -t rsa github.com
    >> ~/.ssh/known_hosts\n  ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts\n
    \ GIT_SSH_COMMAND=\"ssh -i ~/.ssh/id_rsa\" git remote add upstream git@github.com:kubeflow/manifests.git\n
    \ GIT_SSH_COMMAND=\"ssh -i ~/.ssh/id_rsa\" git fetch upstream master\n  GIT_SSH_COMMAND=\"ssh
    -i ~/.ssh/id_rsa\" git checkout -b $new_branch_name upstream/master\n  kustomize
    edit set image gcr.io/kubeflow-images-public/${image_name}=gcr.io/kubeflow-images-public/${image_name}@$(cat
    /kubeflow/${image_name}-digest)\n  cd /workspace/manifests/tests\n  make generate
    && make test\n  if (( $? == 0 )); then\n    GIT_SSH_COMMAND=\"ssh -i ~/.ssh/id_rsa\"
    git commit -a -m \"image updated as part of $kubeflow_forked_repo branch:$kubeflow_forked_branch
    PR:${pull_request_id}\"\n    GIT_SSH_COMMAND=\"ssh -i ~/.ssh/id_rsa\" git push
    origin $new_branch_name -f\n    tmpfile=$(mktemp)\n    echo \"[auto PR] Update
    the $image_name image to $(cat /kubeflow/${image_name}-digest)\" > $tmpfile\n
    \   echo \"\" >> $tmpfile\n    echo \"\" >> $tmpfile\n    echo \"Image built from
    repo:$kubeflow_forked_repo branch:$kubeflow_forked_branch commit:$kubeflow_forked_commit\"
    >> $tmpfile\n    export GITHUB_TOKEN=$(kubectl get secrets github-token-secret
    -ojson | jq '. | .data.token' | xargs | base64 -d)\n    GIT_SSH_COMMAND=\"ssh
    -i ~/.ssh/id_rsa\" hub pull-request -f -b 'kubeflow:master' -F $tmpfile\n  else\n
    \   echo 'make generate && make test' failed\n  fi\nelse \n  echo 'invalid pull-request'\n
    \ echo /workspace/${pull_request_repo}-${pull_request_id}/pr.json does not exist\nfi"
kind: ConfigMap
metadata:
  name: update-manifests-commands
  namespace: kubeflow-ci
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  labels:
    scope: kubeflow-ci
  name: ci-pipeline
  namespace: kubeflow-ci
spec:
  params: []
  resources:
  - name: kubeflow
    type: git
  - name: centraldashboard
    type: image
  - name: manifests
    type: git
  - name: kubeflow-4091
    type: pullRequest
  tasks:
  - name: build-push
    params:
    - name: pathToDockerfile
      value: components/centraldashboard/Dockerfile
    - name: pathToContext
      value: components/centraldashboard
    - name: dockerTarget
      value: serve
    resources:
      inputs:
      - name: kubeflow
        resource: kubeflow
      outputs:
      - name: centraldashboard
        resource: centraldashboard
    taskRef:
      name: build-push
  - name: update-manifests
    params:
    - name: pathToManifestsDir
      value: common/centraldashboard/base
    - name: container_image
      value: gcr.io/kubeflow-ci/test-worker:latest
    resources:
      inputs:
      - name: manifests
        resource: manifests
      - name: kubeflow-4091
        resource: kubeflow-4091
      - from:
        - build-push
        name: centraldashboard
        resource: centraldashboard
      outputs:
      - name: manifests
        resource: manifests
    runAfter:
    - build-push
    taskRef:
      name: update-manifests
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-push
  namespace: kubeflow-ci
spec:
  inputs:
    params:
    - description: The path to the dockerfile to build
      name: pathToDockerfile
      type: string
    - description: The build context used by Kaniko
      name: pathToContext
      type: string
    - description: docker target arg
      name: dockerTarget
      type: string
    resources:
    - name: kubeflow
      type: git
  outputs:
    resources:
    - name: centraldashboard
      outputImageDir: /kubeflow
      type: image
  steps:
  - args:
    - --dockerfile=/workspace/${inputs.resources.kubeflow.name}/${inputs.params.pathToDockerfile}
    - --destination=${outputs.resources.centraldashboard.url}
    - --context=/workspace/${inputs.resources.kubeflow.name}/${inputs.params.pathToContext}
    - --target=${inputs.params.dockerTarget}
    - --digest-file=/kubeflow/centraldashboard-digest
    command:
    - /kaniko/executor
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secret/kaniko-secret.json
    image: gcr.io/kaniko-project/executor:v0.11.0
    name: build-push
    volumeMounts:
    - mountPath: /secret
      name: kaniko-secret
    - mountPath: /kubeflow
      name: kubeflow
  volumes:
  - name: kaniko-secret
    secret:
      secretName: kaniko-secret
  - name: kubeflow
    persistentVolumeClaim:
      claimName: ci-pipeline-run-persistent-volume-claim
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: update-manifests
  namespace: kubeflow-ci
spec:
  inputs:
    params:
    - default: /workspace/manifests
      description: Where the components manifest dir is
      name: pathToManifestsDir
      type: string
    - description: pod container image
      name: container_image
      type: string
    resources:
    - name: manifests
      type: git
    - name: centraldashboard
      type: image
    - name: kubeflow-4091
      type: pullRequest
  outputs:
    resources:
    - name: manifests
      type: git
  steps:
  - command:
    - /bin/sleep
    - infinity
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secret/kaniko-secret.json
    envFrom:
    - configMapRef:
        name: ci-pipeline-parameters
    image: ${inputs.params.container_image}
    name: update-manifests
    volumeMounts:
    - mountPath: /secret
      name: kaniko-secret
    - mountPath: /kubeflow
      name: kubeflow
    - mountPath: /update-manifests-commands
      name: update-manifests-commands
    workingDir: /workspace/${inputs.resources.manifests.name}/${inputs.params.pathToManifestsDir}
  volumes:
  - name: kaniko-secret
    secret:
      secretName: kaniko-secret
  - configMap:
      name: update-manifests-commands
    name: update-manifests-commands
  - name: kubeflow
    persistentVolumeClaim:
      claimName: ci-pipeline-run-persistent-volume-claim
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
  name: ci-pipeline-run-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: ci-pipeline-run-service-account
  namespace: kubeflow-ci
---
apiVersion: v1
data:
  generateName: ci-centraldashboard-pipeline-run-52fdfc07
  image_name: centraldashboard
  image_url: gcr.io/kubeflow-images-public/centraldashboard
  kubeflow_repo_revision: refs/pull/4091/head
  kubeflow_repo_url: git@github.com:kubeflow/kubeflow.git
  manifests_repo_revision: master
  manifests_repo_url: git@github.com:kkasravi/manifests.git
  namespace: kubeflow-ci
  pipeline: ci-pipeline
  pull_request_id: "4091"
  pull_request_repo: kubeflow
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
  name: ci-pipeline-run-parameters-9cmmg546c4
  namespace: kubeflow-ci
---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
  name: ci-centraldashboard-pipeline-run-52fdfc07
  namespace: kubeflow-ci
spec:
  addOwnerRef: true
  componentKinds:
  - group: app.k8s.io
    kind: Application
  descriptor:
    description: a pipeline run that composes resources and tasks
    keywords:
    - kubeflow
    links:
    - description: About
      url: https://kubeflow.org
    maintainers:
    - email: kam.d.kasravi@intel.com
      name: Kam Kasravi
    owners:
    - email: kam.d.kasravi@intel.com
      name: Kam Kasravi
    type: ci-pipeline-run
    version: v1beta1
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
  name: centraldashboard
  namespace: kubeflow-ci
spec:
  params:
  - name: url
    value: gcr.io/kubeflow-images-public/centraldashboard
  type: image
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
  name: kubeflow
  namespace: kubeflow-ci
spec:
  params:
  - name: revision
    value: refs/pull/4091/head
  - name: url
    value: git@github.com:kubeflow/kubeflow.git
  type: git
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
  name: kubeflow-4091
  namespace: kubeflow-ci
spec:
  params:
  - name: url
    value: https://github.com/kubeflow/kubeflow/pulls/4091
  secrets:
  - fieldName: githubToken
    secretKey: token
    secretName: github-token-secret
  type: pullRequest
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
  name: manifests
  namespace: kubeflow-ci
spec:
  params:
  - name: revision
    value: master
  - name: url
    value: git@github.com:kkasravi/manifests.git
  type: git
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
    scope: kubeflow-ci
  name: ci-centraldashboard-pipeline-run-52fdfc07
  namespace: kubeflow-ci
spec:
  pipelineRef:
    name: ci-pipeline
  podTemplate:
    securityContext:
      runAsNonRoot: true
  resources:
  - name: kubeflow
    resourceRef:
      name: kubeflow
  - name: manifests
    resourceRef:
      name: manifests
  - name: centraldashboard
    resourceRef:
      name: centraldashboard
  - name: kubeflow-4091
    resourceRef:
      name: kubeflow-4091
  serviceAccount: ci-pipeline-run-service-account
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/instance: ci-centraldashboard-pipeline-run-52fdfc07
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: ci-pipeline-run
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.6
  name: ci-pipeline-run-persistent-volume-claim
  namespace: kubeflow-ci
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
